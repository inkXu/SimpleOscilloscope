ARM GAS  D:\noval\Temp\cclYsjr9.s 			page 1


   1              		.cpu cortex-m23
   2              		.arch armv8-m.base
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"gd32e23x_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/gd32e23x_it.c"
  18              		.section	.text.NMI_Handler,"ax",%progbits
  19              		.align	1
  20              		.global	NMI_Handler
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	NMI_Handler:
  26              	.LFB63:
   1:Core/Src/gd32e23x_it.c **** /*!
   2:Core/Src/gd32e23x_it.c ****     \file    gd32e23x_it.c
   3:Core/Src/gd32e23x_it.c ****     \brief   interrupt service routines
   4:Core/Src/gd32e23x_it.c **** 
   5:Core/Src/gd32e23x_it.c ****     \version 2024-02-22, V2.1.0, firmware for GD32E23x
   6:Core/Src/gd32e23x_it.c **** */
   7:Core/Src/gd32e23x_it.c **** 
   8:Core/Src/gd32e23x_it.c **** /*
   9:Core/Src/gd32e23x_it.c ****     Copyright (c) 2024, GigaDevice Semiconductor Inc.
  10:Core/Src/gd32e23x_it.c **** 
  11:Core/Src/gd32e23x_it.c ****     Redistribution and use in source and binary forms, with or without modification,
  12:Core/Src/gd32e23x_it.c **** are permitted provided that the following conditions are met:
  13:Core/Src/gd32e23x_it.c **** 
  14:Core/Src/gd32e23x_it.c ****     1. Redistributions of source code must retain the above copyright notice, this
  15:Core/Src/gd32e23x_it.c ****        list of conditions and the following disclaimer.
  16:Core/Src/gd32e23x_it.c ****     2. Redistributions in binary form must reproduce the above copyright notice,
  17:Core/Src/gd32e23x_it.c ****        this list of conditions and the following disclaimer in the documentation
  18:Core/Src/gd32e23x_it.c ****        and/or other materials provided with the distribution.
  19:Core/Src/gd32e23x_it.c ****     3. Neither the name of the copyright holder nor the names of its contributors
  20:Core/Src/gd32e23x_it.c ****        may be used to endorse or promote products derived from this software without
  21:Core/Src/gd32e23x_it.c ****        specific prior written permission.
  22:Core/Src/gd32e23x_it.c **** 
  23:Core/Src/gd32e23x_it.c ****     THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  24:Core/Src/gd32e23x_it.c **** AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  25:Core/Src/gd32e23x_it.c **** WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
  26:Core/Src/gd32e23x_it.c **** IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
  27:Core/Src/gd32e23x_it.c **** INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
  28:Core/Src/gd32e23x_it.c **** NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
  29:Core/Src/gd32e23x_it.c **** PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
  30:Core/Src/gd32e23x_it.c **** WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  31:Core/Src/gd32e23x_it.c **** ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY
  32:Core/Src/gd32e23x_it.c **** OF SUCH DAMAGE.
ARM GAS  D:\noval\Temp\cclYsjr9.s 			page 2


  33:Core/Src/gd32e23x_it.c **** */
  34:Core/Src/gd32e23x_it.c **** 
  35:Core/Src/gd32e23x_it.c **** #include "gd32e23x_it.h"
  36:Core/Src/gd32e23x_it.c **** #include "systick.h"
  37:Core/Src/gd32e23x_it.c **** #include "app.h"
  38:Core/Src/gd32e23x_it.c **** #include "log.h"
  39:Core/Src/gd32e23x_it.c **** 
  40:Core/Src/gd32e23x_it.c **** // uint8_t rotate_flag;
  41:Core/Src/gd32e23x_it.c **** // uint8_t timer_flag;
  42:Core/Src/gd32e23x_it.c **** // uint32_t time_value;
  43:Core/Src/gd32e23x_it.c **** 
  44:Core/Src/gd32e23x_it.c **** /*!
  45:Core/Src/gd32e23x_it.c ****     \brief      this function handles NMI exception
  46:Core/Src/gd32e23x_it.c ****     \param[in]  none
  47:Core/Src/gd32e23x_it.c ****     \param[out] none
  48:Core/Src/gd32e23x_it.c ****     \retval     none
  49:Core/Src/gd32e23x_it.c **** */
  50:Core/Src/gd32e23x_it.c **** void NMI_Handler(void)
  51:Core/Src/gd32e23x_it.c **** {
  27              		.loc 1 51 1 view -0
  28              		.cfi_startproc
  29              		@ Volatile: function does not return.
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.L2:
  52:Core/Src/gd32e23x_it.c ****     /* if NMI exception occurs, go to infinite loop */
  53:Core/Src/gd32e23x_it.c ****     while(1) {
  34              		.loc 1 53 5 view .LVU1
  54:Core/Src/gd32e23x_it.c ****     }
  35              		.loc 1 54 5 view .LVU2
  53:Core/Src/gd32e23x_it.c ****     }
  36              		.loc 1 53 10 view .LVU3
  37 0000 FEE7     		b	.L2
  38              		.cfi_endproc
  39              	.LFE63:
  41              		.section	.text.HardFault_Handler,"ax",%progbits
  42              		.align	1
  43              		.global	HardFault_Handler
  44              		.syntax unified
  45              		.code	16
  46              		.thumb_func
  48              	HardFault_Handler:
  49              	.LFB64:
  55:Core/Src/gd32e23x_it.c **** }
  56:Core/Src/gd32e23x_it.c **** 
  57:Core/Src/gd32e23x_it.c **** /*!
  58:Core/Src/gd32e23x_it.c ****     \brief      this function handles HardFault exception
  59:Core/Src/gd32e23x_it.c ****     \param[in]  none
  60:Core/Src/gd32e23x_it.c ****     \param[out] none
  61:Core/Src/gd32e23x_it.c ****     \retval     none
  62:Core/Src/gd32e23x_it.c **** */
  63:Core/Src/gd32e23x_it.c **** void HardFault_Handler(void)
  64:Core/Src/gd32e23x_it.c **** {
  50              		.loc 1 64 1 view -0
  51              		.cfi_startproc
  52              		@ Volatile: function does not return.
ARM GAS  D:\noval\Temp\cclYsjr9.s 			page 3


  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55              		@ link register save eliminated.
  56              	.L4:
  65:Core/Src/gd32e23x_it.c ****     /* if Hard Fault exception occurs, go to infinite loop */
  66:Core/Src/gd32e23x_it.c ****     while(1) {
  57              		.loc 1 66 5 view .LVU5
  67:Core/Src/gd32e23x_it.c ****     }
  58              		.loc 1 67 5 view .LVU6
  66:Core/Src/gd32e23x_it.c ****     }
  59              		.loc 1 66 10 view .LVU7
  60 0000 FEE7     		b	.L4
  61              		.cfi_endproc
  62              	.LFE64:
  64              		.section	.text.SVC_Handler,"ax",%progbits
  65              		.align	1
  66              		.global	SVC_Handler
  67              		.syntax unified
  68              		.code	16
  69              		.thumb_func
  71              	SVC_Handler:
  72              	.LFB65:
  68:Core/Src/gd32e23x_it.c **** }
  69:Core/Src/gd32e23x_it.c **** 
  70:Core/Src/gd32e23x_it.c **** /*!
  71:Core/Src/gd32e23x_it.c ****     \brief      this function handles SVC exception
  72:Core/Src/gd32e23x_it.c ****     \param[in]  none
  73:Core/Src/gd32e23x_it.c ****     \param[out] none
  74:Core/Src/gd32e23x_it.c ****     \retval     none
  75:Core/Src/gd32e23x_it.c **** */
  76:Core/Src/gd32e23x_it.c **** void SVC_Handler(void)
  77:Core/Src/gd32e23x_it.c **** {
  73              		.loc 1 77 1 view -0
  74              		.cfi_startproc
  75              		@ Volatile: function does not return.
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              		@ link register save eliminated.
  79              	.L6:
  78:Core/Src/gd32e23x_it.c ****     /* if SVC exception occurs, go to infinite loop */
  79:Core/Src/gd32e23x_it.c ****     while(1) {
  80              		.loc 1 79 5 view .LVU9
  80:Core/Src/gd32e23x_it.c ****     }
  81              		.loc 1 80 5 view .LVU10
  79:Core/Src/gd32e23x_it.c ****     }
  82              		.loc 1 79 10 view .LVU11
  83 0000 FEE7     		b	.L6
  84              		.cfi_endproc
  85              	.LFE65:
  87              		.section	.text.PendSV_Handler,"ax",%progbits
  88              		.align	1
  89              		.global	PendSV_Handler
  90              		.syntax unified
  91              		.code	16
  92              		.thumb_func
  94              	PendSV_Handler:
  95              	.LFB66:
ARM GAS  D:\noval\Temp\cclYsjr9.s 			page 4


  81:Core/Src/gd32e23x_it.c **** }
  82:Core/Src/gd32e23x_it.c **** 
  83:Core/Src/gd32e23x_it.c **** /*!
  84:Core/Src/gd32e23x_it.c ****     \brief      this function handles PendSV exception
  85:Core/Src/gd32e23x_it.c ****     \param[in]  none
  86:Core/Src/gd32e23x_it.c ****     \param[out] none
  87:Core/Src/gd32e23x_it.c ****     \retval     none
  88:Core/Src/gd32e23x_it.c **** */
  89:Core/Src/gd32e23x_it.c **** void PendSV_Handler(void)
  90:Core/Src/gd32e23x_it.c **** {
  96              		.loc 1 90 1 view -0
  97              		.cfi_startproc
  98              		@ Volatile: function does not return.
  99              		@ args = 0, pretend = 0, frame = 0
 100              		@ frame_needed = 0, uses_anonymous_args = 0
 101              		@ link register save eliminated.
 102              	.L8:
  91:Core/Src/gd32e23x_it.c ****     /* if PendSV exception occurs, go to infinite loop */
  92:Core/Src/gd32e23x_it.c ****     while(1) {
 103              		.loc 1 92 5 view .LVU13
  93:Core/Src/gd32e23x_it.c ****     }
 104              		.loc 1 93 5 view .LVU14
  92:Core/Src/gd32e23x_it.c ****     }
 105              		.loc 1 92 10 view .LVU15
 106 0000 FEE7     		b	.L8
 107              		.cfi_endproc
 108              	.LFE66:
 110              		.section	.text.SysTick_Handler,"ax",%progbits
 111              		.align	1
 112              		.global	SysTick_Handler
 113              		.syntax unified
 114              		.code	16
 115              		.thumb_func
 117              	SysTick_Handler:
 118              	.LFB67:
  94:Core/Src/gd32e23x_it.c **** }
  95:Core/Src/gd32e23x_it.c **** 
  96:Core/Src/gd32e23x_it.c **** /*!
  97:Core/Src/gd32e23x_it.c ****     \brief      this function handles SysTick exception
  98:Core/Src/gd32e23x_it.c ****     \param[in]  none
  99:Core/Src/gd32e23x_it.c ****     \param[out] none
 100:Core/Src/gd32e23x_it.c ****     \retval     none
 101:Core/Src/gd32e23x_it.c **** */
 102:Core/Src/gd32e23x_it.c **** void SysTick_Handler(void)
 103:Core/Src/gd32e23x_it.c **** {
 119              		.loc 1 103 1 view -0
 120              		.cfi_startproc
 121              		@ args = 0, pretend = 0, frame = 0
 122              		@ frame_needed = 0, uses_anonymous_args = 0
 123 0000 10B5     		push	{r4, lr}
 124              	.LCFI0:
 125              		.cfi_def_cfa_offset 8
 126              		.cfi_offset 4, -8
 127              		.cfi_offset 14, -4
 104:Core/Src/gd32e23x_it.c ****     // led_spark();
 105:Core/Src/gd32e23x_it.c ****     delay_decrement();
 128              		.loc 1 105 5 view .LVU17
ARM GAS  D:\noval\Temp\cclYsjr9.s 			page 5


 129 0002 FFF7FEFF 		bl	delay_decrement
 130              	.LVL0:
 106:Core/Src/gd32e23x_it.c **** }
 131              		.loc 1 106 1 is_stmt 0 view .LVU18
 132              		@ sp needed
 133 0006 10BD     		pop	{r4, pc}
 134              		.cfi_endproc
 135              	.LFE67:
 137              		.section	.text.EXTI4_15_IRQHandler,"ax",%progbits
 138              		.align	1
 139              		.global	EXTI4_15_IRQHandler
 140              		.syntax unified
 141              		.code	16
 142              		.thumb_func
 144              	EXTI4_15_IRQHandler:
 145              	.LFB68:
 107:Core/Src/gd32e23x_it.c **** 
 108:Core/Src/gd32e23x_it.c **** /*
 109:Core/Src/gd32e23x_it.c ****  * @brief    this function handles EXTI4 exception
 110:Core/Src/gd32e23x_it.c ****  * @param    None
 111:Core/Src/gd32e23x_it.c ****  * @retval   None
 112:Core/Src/gd32e23x_it.c ****  */
 113:Core/Src/gd32e23x_it.c **** void EXTI4_15_IRQHandler(void)
 114:Core/Src/gd32e23x_it.c **** {
 146              		.loc 1 114 1 is_stmt 1 view -0
 147              		.cfi_startproc
 148              		@ args = 0, pretend = 0, frame = 0
 149              		@ frame_needed = 0, uses_anonymous_args = 0
 150 0000 10B5     		push	{r4, lr}
 151              	.LCFI1:
 152              		.cfi_def_cfa_offset 8
 153              		.cfi_offset 4, -8
 154              		.cfi_offset 14, -4
 115:Core/Src/gd32e23x_it.c ****     if (SET == exti_interrupt_flag_get(EXTI_4)) {
 155              		.loc 1 115 5 view .LVU20
 156              		.loc 1 115 16 is_stmt 0 view .LVU21
 157 0002 1020     		movs	r0, #16
 158 0004 FFF7FEFF 		bl	exti_interrupt_flag_get
 159              	.LVL1:
 160              		.loc 1 115 8 discriminator 1 view .LVU22
 161 0008 0128     		cmp	r0, #1
 162 000a 15D0     		beq	.L36
 116:Core/Src/gd32e23x_it.c ****         exti_interrupt_flag_clear(EXTI_4);
 117:Core/Src/gd32e23x_it.c ****         if (app_state.waveform_update == WAVEFORM_UPDATE_DISABLE) return ;
 118:Core/Src/gd32e23x_it.c ****         delay_1ms(10);
 119:Core/Src/gd32e23x_it.c ****         if (RESET == gpio_input_bit_get(GPIOB, GPIO_PIN_3)) {
 120:Core/Src/gd32e23x_it.c ****             // turn right
 121:Core/Src/gd32e23x_it.c ****             switch(app_data.wave_samp_freq)
 122:Core/Src/gd32e23x_it.c ****             {
 123:Core/Src/gd32e23x_it.c ****                 case ADC_SAMPLETIME_239POINT5:
 124:Core/Src/gd32e23x_it.c ****                     app_data.wave_samp_freq=ADC_SAMPLETIME_71POINT5;
 125:Core/Src/gd32e23x_it.c ****                     break;
 126:Core/Src/gd32e23x_it.c ****                 case ADC_SAMPLETIME_71POINT5:
 127:Core/Src/gd32e23x_it.c ****                     app_data.wave_samp_freq=ADC_SAMPLETIME_55POINT5;
 128:Core/Src/gd32e23x_it.c ****                     break;
 129:Core/Src/gd32e23x_it.c ****                 case ADC_SAMPLETIME_55POINT5:
 130:Core/Src/gd32e23x_it.c ****                     app_data.wave_samp_freq=ADC_SAMPLETIME_41POINT5;
ARM GAS  D:\noval\Temp\cclYsjr9.s 			page 6


 131:Core/Src/gd32e23x_it.c ****                     break;
 132:Core/Src/gd32e23x_it.c ****                 case ADC_SAMPLETIME_41POINT5:
 133:Core/Src/gd32e23x_it.c ****                     app_data.wave_samp_freq=ADC_SAMPLETIME_28POINT5;
 134:Core/Src/gd32e23x_it.c ****                     break;
 135:Core/Src/gd32e23x_it.c ****                 case ADC_SAMPLETIME_28POINT5:
 136:Core/Src/gd32e23x_it.c ****                     app_data.wave_samp_freq=ADC_SAMPLETIME_239POINT5;
 137:Core/Src/gd32e23x_it.c ****                     break;
 138:Core/Src/gd32e23x_it.c ****                 default:
 139:Core/Src/gd32e23x_it.c ****                     app_data.wave_samp_freq=ADC_SAMPLETIME_239POINT5;
 140:Core/Src/gd32e23x_it.c ****                     break;
 141:Core/Src/gd32e23x_it.c ****             }
 142:Core/Src/gd32e23x_it.c ****         } else {
 143:Core/Src/gd32e23x_it.c ****             // turn left
 144:Core/Src/gd32e23x_it.c ****             switch(app_data.wave_samp_freq)
 145:Core/Src/gd32e23x_it.c ****             {
 146:Core/Src/gd32e23x_it.c ****                 case ADC_SAMPLETIME_28POINT5:
 147:Core/Src/gd32e23x_it.c ****                     app_data.wave_samp_freq=ADC_SAMPLETIME_41POINT5;
 148:Core/Src/gd32e23x_it.c ****                     break;
 149:Core/Src/gd32e23x_it.c ****                 case ADC_SAMPLETIME_41POINT5:
 150:Core/Src/gd32e23x_it.c ****                     app_data.wave_samp_freq=ADC_SAMPLETIME_55POINT5;
 151:Core/Src/gd32e23x_it.c ****                     break;
 152:Core/Src/gd32e23x_it.c ****                 case ADC_SAMPLETIME_55POINT5:
 153:Core/Src/gd32e23x_it.c ****                     app_data.wave_samp_freq=ADC_SAMPLETIME_71POINT5;
 154:Core/Src/gd32e23x_it.c ****                     break;
 155:Core/Src/gd32e23x_it.c ****                 case ADC_SAMPLETIME_71POINT5:
 156:Core/Src/gd32e23x_it.c ****                     app_data.wave_samp_freq=ADC_SAMPLETIME_239POINT5;
 157:Core/Src/gd32e23x_it.c ****                     break;
 158:Core/Src/gd32e23x_it.c ****                 case ADC_SAMPLETIME_239POINT5:
 159:Core/Src/gd32e23x_it.c ****                     app_data.wave_samp_freq=ADC_SAMPLETIME_28POINT5;
 160:Core/Src/gd32e23x_it.c ****                     break;
 161:Core/Src/gd32e23x_it.c ****                 default:
 162:Core/Src/gd32e23x_it.c ****                     app_data.wave_samp_freq=ADC_SAMPLETIME_239POINT5;
 163:Core/Src/gd32e23x_it.c ****                     break;
 164:Core/Src/gd32e23x_it.c ****             }
 165:Core/Src/gd32e23x_it.c ****         }
 166:Core/Src/gd32e23x_it.c ****         app_state.update_samp_val = APP_STATE_ENABLE;
 167:Core/Src/gd32e23x_it.c ****     } else if (SET == exti_interrupt_flag_get(EXTI_13)) {
 163              		.loc 1 167 12 is_stmt 1 view .LVU23
 164              		.loc 1 167 23 is_stmt 0 view .LVU24
 165 000c 42F20000 		movw	r0, #8192
 166 0010 FFF7FEFF 		bl	exti_interrupt_flag_get
 167              	.LVL2:
 168              		.loc 1 167 15 discriminator 1 view .LVU25
 169 0014 0128     		cmp	r0, #1
 170 0016 00D1     		bne	.LCB80
 171 0018 99E0     		b	.L37	@long jump
 172              	.LCB80:
 168:Core/Src/gd32e23x_it.c ****         exti_interrupt_flag_clear(EXTI_13);
 169:Core/Src/gd32e23x_it.c ****         if (RESET == gpio_input_bit_get(GPIOB, GPIO_PIN_13)) {
 170:Core/Src/gd32e23x_it.c ****             if (app_state.pwm_state == PWM_STATE_DISABLE) return ;
 171:Core/Src/gd32e23x_it.c ****             if (app_data.pwm_duty >= 100) {
 172:Core/Src/gd32e23x_it.c ****                 app_data.pwm_duty = 0;
 173:Core/Src/gd32e23x_it.c ****             } else {
 174:Core/Src/gd32e23x_it.c ****                 app_data.pwm_duty += 5;
 175:Core/Src/gd32e23x_it.c ****             }
 176:Core/Src/gd32e23x_it.c ****             app_state.pwm_state = PWM_STATE_UPDATE;
 177:Core/Src/gd32e23x_it.c ****         }
ARM GAS  D:\noval\Temp\cclYsjr9.s 			page 7


 178:Core/Src/gd32e23x_it.c ****     } else if (SET == exti_interrupt_flag_get(EXTI_14)) {
 173              		.loc 1 178 12 is_stmt 1 view .LVU26
 174              		.loc 1 178 23 is_stmt 0 view .LVU27
 175 001a 44F20000 		movw	r0, #16384
 176 001e FFF7FEFF 		bl	exti_interrupt_flag_get
 177              	.LVL3:
 178              		.loc 1 178 15 discriminator 1 view .LVU28
 179 0022 0128     		cmp	r0, #1
 180 0024 00D1     		bne	.LCB86
 181 0026 CAE0     		b	.L38	@long jump
 182              	.LCB86:
 179:Core/Src/gd32e23x_it.c ****         exti_interrupt_flag_clear(EXTI_14);
 180:Core/Src/gd32e23x_it.c ****         if (app_state.pwm_state == PWM_STATE_DISABLE) return ;
 181:Core/Src/gd32e23x_it.c ****         if (RESET == gpio_input_bit_get(GPIOB, GPIO_PIN_14)) {
 182:Core/Src/gd32e23x_it.c ****             if (app_data.pwm_freq <= 5) {
 183:Core/Src/gd32e23x_it.c ****                 app_data.pwm_freq = 50;
 184:Core/Src/gd32e23x_it.c ****             } else {
 185:Core/Src/gd32e23x_it.c ****                 app_data.pwm_freq -= 5;
 186:Core/Src/gd32e23x_it.c ****             }
 187:Core/Src/gd32e23x_it.c ****             app_state.pwm_state = PWM_STATE_UPDATE;
 188:Core/Src/gd32e23x_it.c ****         }
 189:Core/Src/gd32e23x_it.c ****     } else if (SET == exti_interrupt_flag_get(EXTI_15)) {
 183              		.loc 1 189 12 is_stmt 1 view .LVU29
 184              		.loc 1 189 23 is_stmt 0 view .LVU30
 185 0028 48F20000 		movw	r0, #32768
 186 002c FFF7FEFF 		bl	exti_interrupt_flag_get
 187              	.LVL4:
 188              		.loc 1 189 15 discriminator 1 view .LVU31
 189 0030 0128     		cmp	r0, #1
 190 0032 00D1     		bne	.LCB92
 191 0034 FBE0     		b	.L39	@long jump
 192              	.LCB92:
 193              	.L10:
 190:Core/Src/gd32e23x_it.c ****         exti_interrupt_flag_clear(EXTI_15);
 191:Core/Src/gd32e23x_it.c ****         if (RESET == gpio_input_bit_get(GPIOB, GPIO_PIN_15)) {
 192:Core/Src/gd32e23x_it.c ****             if (app_state.pwm_state != PWM_STATE_DISABLE) {
 193:Core/Src/gd32e23x_it.c ****                 app_state.pwm_state = PWM_STATE_CLOSE;
 194:Core/Src/gd32e23x_it.c ****             } else {
 195:Core/Src/gd32e23x_it.c ****                 app_state.pwm_state = PWM_STATE_OPEN;
 196:Core/Src/gd32e23x_it.c ****             }
 197:Core/Src/gd32e23x_it.c ****         }
 198:Core/Src/gd32e23x_it.c ****     }
 199:Core/Src/gd32e23x_it.c **** }
 194              		.loc 1 199 1 view .LVU32
 195              		@ sp needed
 196 0036 10BD     		pop	{r4, pc}
 197              	.L36:
 116:Core/Src/gd32e23x_it.c ****         if (app_state.waveform_update == WAVEFORM_UPDATE_DISABLE) return ;
 198              		.loc 1 116 9 is_stmt 1 view .LVU33
 199 0038 0F30     		adds	r0, r0, #15
 200 003a FFF7FEFF 		bl	exti_interrupt_flag_clear
 201              	.LVL5:
 117:Core/Src/gd32e23x_it.c ****         delay_1ms(10);
 202              		.loc 1 117 9 view .LVU34
 117:Core/Src/gd32e23x_it.c ****         delay_1ms(10);
 203              		.loc 1 117 39 is_stmt 0 view .LVU35
 204 003e 40F20003 		movw	r3, #:lower16:app_state
ARM GAS  D:\noval\Temp\cclYsjr9.s 			page 8


 205 0042 C0F20003 		movt	r3, #:upper16:app_state
 206 0046 1A78     		ldrb	r2, [r3]
 207 0048 0C23     		movs	r3, #12
 208 004a 1340     		ands	r3, r2
 117:Core/Src/gd32e23x_it.c ****         delay_1ms(10);
 209              		.loc 1 117 12 view .LVU36
 210 004c 082B     		cmp	r3, #8
 211 004e F2D0     		beq	.L10
 118:Core/Src/gd32e23x_it.c ****         if (RESET == gpio_input_bit_get(GPIOB, GPIO_PIN_3)) {
 212              		.loc 1 118 9 is_stmt 1 view .LVU37
 213 0050 0A20     		movs	r0, #10
 214 0052 FFF7FEFF 		bl	delay_1ms
 215              	.LVL6:
 119:Core/Src/gd32e23x_it.c ****             // turn right
 216              		.loc 1 119 9 view .LVU38
 119:Core/Src/gd32e23x_it.c ****             // turn right
 217              		.loc 1 119 22 is_stmt 0 view .LVU39
 218 0056 40F20040 		movw	r0, #1024
 219 005a C4F60000 		movt	r0, 18432
 220 005e 0821     		movs	r1, #8
 221 0060 FFF7FEFF 		bl	gpio_input_bit_get
 222              	.LVL7:
 119:Core/Src/gd32e23x_it.c ****             // turn right
 223              		.loc 1 119 12 discriminator 1 view .LVU40
 224 0064 E8BB     		cbnz	r0, .L13
 121:Core/Src/gd32e23x_it.c ****             {
 225              		.loc 1 121 13 is_stmt 1 view .LVU41
 121:Core/Src/gd32e23x_it.c ****             {
 226              		.loc 1 121 28 is_stmt 0 view .LVU42
 227 0066 40F20003 		movw	r3, #:lower16:app_data
 228 006a C0F20003 		movt	r3, #:upper16:app_data
 229 006e 9B68     		ldr	r3, [r3, #8]
 121:Core/Src/gd32e23x_it.c ****             {
 230              		.loc 1 121 13 view .LVU43
 231 0070 033B     		subs	r3, r3, #3
 232 0072 042B     		cmp	r3, #4
 233 0074 2ED8     		bhi	.L14
 234 0076 9B00     		lsls	r3, r3, #2
 235 0078 844A     		ldr	r2, .L40
 236 007a D358     		ldr	r3, [r2, r3]
 237 007c 9F46     		mov	pc, r3
 238              		.section	.rodata.EXTI4_15_IRQHandler,"a",%progbits
 239              		.align	2
 240              	.L16:
 241 0000 C6000000 		.word	.L20
 242 0004 B8000000 		.word	.L19
 243 0008 AA000000 		.word	.L18
 244 000c 9C000000 		.word	.L17
 245 0010 7E000000 		.word	.L15
 246              		.section	.text.EXTI4_15_IRQHandler
 247              	.L15:
 124:Core/Src/gd32e23x_it.c ****                     break;
 248              		.loc 1 124 21 is_stmt 1 view .LVU44
 124:Core/Src/gd32e23x_it.c ****                     break;
 249              		.loc 1 124 44 is_stmt 0 view .LVU45
 250 007e 40F20003 		movw	r3, #:lower16:app_data
 251 0082 C0F20003 		movt	r3, #:upper16:app_data
ARM GAS  D:\noval\Temp\cclYsjr9.s 			page 9


 252 0086 0622     		movs	r2, #6
 253 0088 9A60     		str	r2, [r3, #8]
 125:Core/Src/gd32e23x_it.c ****                 case ADC_SAMPLETIME_71POINT5:
 254              		.loc 1 125 21 is_stmt 1 view .LVU46
 255              	.L21:
 166:Core/Src/gd32e23x_it.c ****     } else if (SET == exti_interrupt_flag_get(EXTI_13)) {
 256              		.loc 1 166 9 view .LVU47
 166:Core/Src/gd32e23x_it.c ****     } else if (SET == exti_interrupt_flag_get(EXTI_13)) {
 257              		.loc 1 166 35 is_stmt 0 view .LVU48
 258 008a 40F20003 		movw	r3, #:lower16:app_state
 259 008e C0F20003 		movt	r3, #:upper16:app_state
 260 0092 1A78     		ldrb	r2, [r3]
 261 0094 0221     		movs	r1, #2
 262 0096 0A43     		orrs	r2, r1
 263 0098 1A70     		strb	r2, [r3]
 264 009a CCE7     		b	.L10
 265              	.L17:
 127:Core/Src/gd32e23x_it.c ****                     break;
 266              		.loc 1 127 21 is_stmt 1 view .LVU49
 127:Core/Src/gd32e23x_it.c ****                     break;
 267              		.loc 1 127 44 is_stmt 0 view .LVU50
 268 009c 40F20003 		movw	r3, #:lower16:app_data
 269 00a0 C0F20003 		movt	r3, #:upper16:app_data
 270 00a4 0522     		movs	r2, #5
 271 00a6 9A60     		str	r2, [r3, #8]
 128:Core/Src/gd32e23x_it.c ****                 case ADC_SAMPLETIME_55POINT5:
 272              		.loc 1 128 21 is_stmt 1 view .LVU51
 273 00a8 EFE7     		b	.L21
 274              	.L18:
 130:Core/Src/gd32e23x_it.c ****                     break;
 275              		.loc 1 130 21 view .LVU52
 130:Core/Src/gd32e23x_it.c ****                     break;
 276              		.loc 1 130 44 is_stmt 0 view .LVU53
 277 00aa 40F20003 		movw	r3, #:lower16:app_data
 278 00ae C0F20003 		movt	r3, #:upper16:app_data
 279 00b2 0422     		movs	r2, #4
 280 00b4 9A60     		str	r2, [r3, #8]
 131:Core/Src/gd32e23x_it.c ****                 case ADC_SAMPLETIME_41POINT5:
 281              		.loc 1 131 21 is_stmt 1 view .LVU54
 282 00b6 E8E7     		b	.L21
 283              	.L19:
 133:Core/Src/gd32e23x_it.c ****                     break;
 284              		.loc 1 133 21 view .LVU55
 133:Core/Src/gd32e23x_it.c ****                     break;
 285              		.loc 1 133 44 is_stmt 0 view .LVU56
 286 00b8 40F20003 		movw	r3, #:lower16:app_data
 287 00bc C0F20003 		movt	r3, #:upper16:app_data
 288 00c0 0322     		movs	r2, #3
 289 00c2 9A60     		str	r2, [r3, #8]
 134:Core/Src/gd32e23x_it.c ****                 case ADC_SAMPLETIME_28POINT5:
 290              		.loc 1 134 21 is_stmt 1 view .LVU57
 291 00c4 E1E7     		b	.L21
 292              	.L20:
 136:Core/Src/gd32e23x_it.c ****                     break;
 293              		.loc 1 136 21 view .LVU58
 136:Core/Src/gd32e23x_it.c ****                     break;
 294              		.loc 1 136 44 is_stmt 0 view .LVU59
ARM GAS  D:\noval\Temp\cclYsjr9.s 			page 10


 295 00c6 40F20003 		movw	r3, #:lower16:app_data
 296 00ca C0F20003 		movt	r3, #:upper16:app_data
 297 00ce 0722     		movs	r2, #7
 298 00d0 9A60     		str	r2, [r3, #8]
 137:Core/Src/gd32e23x_it.c ****                 default:
 299              		.loc 1 137 21 is_stmt 1 view .LVU60
 300 00d2 DAE7     		b	.L21
 301              	.L14:
 139:Core/Src/gd32e23x_it.c ****                     break;
 302              		.loc 1 139 21 view .LVU61
 139:Core/Src/gd32e23x_it.c ****                     break;
 303              		.loc 1 139 44 is_stmt 0 view .LVU62
 304 00d4 40F20003 		movw	r3, #:lower16:app_data
 305 00d8 C0F20003 		movt	r3, #:upper16:app_data
 306 00dc 0722     		movs	r2, #7
 307 00de 9A60     		str	r2, [r3, #8]
 140:Core/Src/gd32e23x_it.c ****             }
 308              		.loc 1 140 21 is_stmt 1 view .LVU63
 309 00e0 D3E7     		b	.L21
 310              	.L13:
 144:Core/Src/gd32e23x_it.c ****             {
 311              		.loc 1 144 13 view .LVU64
 144:Core/Src/gd32e23x_it.c ****             {
 312              		.loc 1 144 28 is_stmt 0 view .LVU65
 313 00e2 40F20003 		movw	r3, #:lower16:app_data
 314 00e6 C0F20003 		movt	r3, #:upper16:app_data
 315 00ea 9B68     		ldr	r3, [r3, #8]
 144:Core/Src/gd32e23x_it.c ****             {
 316              		.loc 1 144 13 view .LVU66
 317 00ec 033B     		subs	r3, r3, #3
 318 00ee 042B     		cmp	r3, #4
 319 00f0 26D8     		bhi	.L22
 320 00f2 9B00     		lsls	r3, r3, #2
 321 00f4 664A     		ldr	r2, .L40+4
 322 00f6 D358     		ldr	r3, [r2, r3]
 323 00f8 9F46     		mov	pc, r3
 324              		.section	.rodata.EXTI4_15_IRQHandler
 325              		.align	2
 326              	.L24:
 327 0014 FA000000 		.word	.L28
 328 0018 08010000 		.word	.L27
 329 001c 16010000 		.word	.L26
 330 0020 24010000 		.word	.L25
 331 0024 32010000 		.word	.L23
 332              		.section	.text.EXTI4_15_IRQHandler
 333              	.L28:
 147:Core/Src/gd32e23x_it.c ****                     break;
 334              		.loc 1 147 21 is_stmt 1 view .LVU67
 147:Core/Src/gd32e23x_it.c ****                     break;
 335              		.loc 1 147 44 is_stmt 0 view .LVU68
 336 00fa 40F20003 		movw	r3, #:lower16:app_data
 337 00fe C0F20003 		movt	r3, #:upper16:app_data
 338 0102 0422     		movs	r2, #4
 339 0104 9A60     		str	r2, [r3, #8]
 148:Core/Src/gd32e23x_it.c ****                 case ADC_SAMPLETIME_41POINT5:
 340              		.loc 1 148 21 is_stmt 1 view .LVU69
 341 0106 C0E7     		b	.L21
ARM GAS  D:\noval\Temp\cclYsjr9.s 			page 11


 342              	.L27:
 150:Core/Src/gd32e23x_it.c ****                     break;
 343              		.loc 1 150 21 view .LVU70
 150:Core/Src/gd32e23x_it.c ****                     break;
 344              		.loc 1 150 44 is_stmt 0 view .LVU71
 345 0108 40F20003 		movw	r3, #:lower16:app_data
 346 010c C0F20003 		movt	r3, #:upper16:app_data
 347 0110 0522     		movs	r2, #5
 348 0112 9A60     		str	r2, [r3, #8]
 151:Core/Src/gd32e23x_it.c ****                 case ADC_SAMPLETIME_55POINT5:
 349              		.loc 1 151 21 is_stmt 1 view .LVU72
 350 0114 B9E7     		b	.L21
 351              	.L26:
 153:Core/Src/gd32e23x_it.c ****                     break;
 352              		.loc 1 153 21 view .LVU73
 153:Core/Src/gd32e23x_it.c ****                     break;
 353              		.loc 1 153 44 is_stmt 0 view .LVU74
 354 0116 40F20003 		movw	r3, #:lower16:app_data
 355 011a C0F20003 		movt	r3, #:upper16:app_data
 356 011e 0622     		movs	r2, #6
 357 0120 9A60     		str	r2, [r3, #8]
 154:Core/Src/gd32e23x_it.c ****                 case ADC_SAMPLETIME_71POINT5:
 358              		.loc 1 154 21 is_stmt 1 view .LVU75
 359 0122 B2E7     		b	.L21
 360              	.L25:
 156:Core/Src/gd32e23x_it.c ****                     break;
 361              		.loc 1 156 21 view .LVU76
 156:Core/Src/gd32e23x_it.c ****                     break;
 362              		.loc 1 156 44 is_stmt 0 view .LVU77
 363 0124 40F20003 		movw	r3, #:lower16:app_data
 364 0128 C0F20003 		movt	r3, #:upper16:app_data
 365 012c 0722     		movs	r2, #7
 366 012e 9A60     		str	r2, [r3, #8]
 157:Core/Src/gd32e23x_it.c ****                 case ADC_SAMPLETIME_239POINT5:
 367              		.loc 1 157 21 is_stmt 1 view .LVU78
 368 0130 ABE7     		b	.L21
 369              	.L23:
 159:Core/Src/gd32e23x_it.c ****                     break;
 370              		.loc 1 159 21 view .LVU79
 159:Core/Src/gd32e23x_it.c ****                     break;
 371              		.loc 1 159 44 is_stmt 0 view .LVU80
 372 0132 40F20003 		movw	r3, #:lower16:app_data
 373 0136 C0F20003 		movt	r3, #:upper16:app_data
 374 013a 0322     		movs	r2, #3
 375 013c 9A60     		str	r2, [r3, #8]
 160:Core/Src/gd32e23x_it.c ****                 default:
 376              		.loc 1 160 21 is_stmt 1 view .LVU81
 377 013e A4E7     		b	.L21
 378              	.L22:
 162:Core/Src/gd32e23x_it.c ****                     break;
 379              		.loc 1 162 21 view .LVU82
 162:Core/Src/gd32e23x_it.c ****                     break;
 380              		.loc 1 162 44 is_stmt 0 view .LVU83
 381 0140 40F20003 		movw	r3, #:lower16:app_data
 382 0144 C0F20003 		movt	r3, #:upper16:app_data
 383 0148 0722     		movs	r2, #7
 384 014a 9A60     		str	r2, [r3, #8]
ARM GAS  D:\noval\Temp\cclYsjr9.s 			page 12


 163:Core/Src/gd32e23x_it.c ****             }
 385              		.loc 1 163 21 is_stmt 1 view .LVU84
 386 014c 9DE7     		b	.L21
 387              	.L37:
 168:Core/Src/gd32e23x_it.c ****         if (RESET == gpio_input_bit_get(GPIOB, GPIO_PIN_13)) {
 388              		.loc 1 168 9 view .LVU85
 389 014e 42F20000 		movw	r0, #8192
 390 0152 FFF7FEFF 		bl	exti_interrupt_flag_clear
 391              	.LVL8:
 169:Core/Src/gd32e23x_it.c ****             if (app_state.pwm_state == PWM_STATE_DISABLE) return ;
 392              		.loc 1 169 9 view .LVU86
 169:Core/Src/gd32e23x_it.c ****             if (app_state.pwm_state == PWM_STATE_DISABLE) return ;
 393              		.loc 1 169 22 is_stmt 0 view .LVU87
 394 0156 40F20040 		movw	r0, #1024
 395 015a C4F60000 		movt	r0, 18432
 396 015e 42F20001 		movw	r1, #8192
 397 0162 FFF7FEFF 		bl	gpio_input_bit_get
 398              	.LVL9:
 169:Core/Src/gd32e23x_it.c ****             if (app_state.pwm_state == PWM_STATE_DISABLE) return ;
 399              		.loc 1 169 12 discriminator 1 view .LVU88
 400 0166 0028     		cmp	r0, #0
 401 0168 00D064E7 		beq	.LCB298;b	.L10	@long jump
 402              	.LCB298:
 170:Core/Src/gd32e23x_it.c ****             if (app_data.pwm_duty >= 100) {
 403              		.loc 1 170 13 is_stmt 1 view .LVU89
 170:Core/Src/gd32e23x_it.c ****             if (app_data.pwm_duty >= 100) {
 404              		.loc 1 170 37 is_stmt 0 view .LVU90
 405 016c 40F20003 		movw	r3, #:lower16:app_state
 406 0170 C0F20003 		movt	r3, #:upper16:app_state
 407 0174 1B78     		ldrb	r3, [r3]
 408 0176 0F22     		movs	r2, #15
 409 0178 9343     		bics	r3, r2
 170:Core/Src/gd32e23x_it.c ****             if (app_data.pwm_duty >= 100) {
 410              		.loc 1 170 16 view .LVU91
 411 017a 402B     		cmp	r3, #64
 412 017c 00D1     		bne	.LCB307
 413 017e 5AE7     		b	.L10	@long jump
 414              	.LCB307:
 171:Core/Src/gd32e23x_it.c ****                 app_data.pwm_duty = 0;
 415              		.loc 1 171 13 is_stmt 1 view .LVU92
 171:Core/Src/gd32e23x_it.c ****                 app_data.pwm_duty = 0;
 416              		.loc 1 171 25 is_stmt 0 view .LVU93
 417 0180 40F20003 		movw	r3, #:lower16:app_data
 418 0184 C0F20003 		movt	r3, #:upper16:app_data
 419 0188 9B88     		ldrh	r3, [r3, #4]
 171:Core/Src/gd32e23x_it.c ****                 app_data.pwm_duty = 0;
 420              		.loc 1 171 16 view .LVU94
 421 018a 632B     		cmp	r3, #99
 422 018c 10D9     		bls	.L30
 172:Core/Src/gd32e23x_it.c ****             } else {
 423              		.loc 1 172 17 is_stmt 1 view .LVU95
 172:Core/Src/gd32e23x_it.c ****             } else {
 424              		.loc 1 172 35 is_stmt 0 view .LVU96
 425 018e 40F20003 		movw	r3, #:lower16:app_data
 426 0192 C0F20003 		movt	r3, #:upper16:app_data
 427 0196 0022     		movs	r2, #0
 428 0198 9A80     		strh	r2, [r3, #4]
ARM GAS  D:\noval\Temp\cclYsjr9.s 			page 13


 429              	.L31:
 176:Core/Src/gd32e23x_it.c ****         }
 430              		.loc 1 176 13 is_stmt 1 view .LVU97
 176:Core/Src/gd32e23x_it.c ****         }
 431              		.loc 1 176 33 is_stmt 0 view .LVU98
 432 019a 40F20002 		movw	r2, #:lower16:app_state
 433 019e C0F20002 		movt	r2, #:upper16:app_state
 434 01a2 1178     		ldrb	r1, [r2]
 435 01a4 0F23     		movs	r3, #15
 436 01a6 0B40     		ands	r3, r1
 437 01a8 1021     		movs	r1, #16
 438 01aa 0B43     		orrs	r3, r1
 439 01ac 1370     		strb	r3, [r2]
 440 01ae 42E7     		b	.L10
 441              	.L30:
 174:Core/Src/gd32e23x_it.c ****             }
 442              		.loc 1 174 17 is_stmt 1 view .LVU99
 174:Core/Src/gd32e23x_it.c ****             }
 443              		.loc 1 174 35 is_stmt 0 view .LVU100
 444 01b0 40F20002 		movw	r2, #:lower16:app_data
 445 01b4 C0F20002 		movt	r2, #:upper16:app_data
 446 01b8 0533     		adds	r3, r3, #5
 447 01ba 9380     		strh	r3, [r2, #4]
 448 01bc EDE7     		b	.L31
 449              	.L38:
 179:Core/Src/gd32e23x_it.c ****         if (app_state.pwm_state == PWM_STATE_DISABLE) return ;
 450              		.loc 1 179 9 is_stmt 1 view .LVU101
 451 01be 44F20000 		movw	r0, #16384
 452 01c2 FFF7FEFF 		bl	exti_interrupt_flag_clear
 453              	.LVL10:
 180:Core/Src/gd32e23x_it.c ****         if (RESET == gpio_input_bit_get(GPIOB, GPIO_PIN_14)) {
 454              		.loc 1 180 9 view .LVU102
 180:Core/Src/gd32e23x_it.c ****         if (RESET == gpio_input_bit_get(GPIOB, GPIO_PIN_14)) {
 455              		.loc 1 180 33 is_stmt 0 view .LVU103
 456 01c6 40F20003 		movw	r3, #:lower16:app_state
 457 01ca C0F20003 		movt	r3, #:upper16:app_state
 458 01ce 1B78     		ldrb	r3, [r3]
 459 01d0 0F22     		movs	r2, #15
 460 01d2 9343     		bics	r3, r2
 180:Core/Src/gd32e23x_it.c ****         if (RESET == gpio_input_bit_get(GPIOB, GPIO_PIN_14)) {
 461              		.loc 1 180 12 view .LVU104
 462 01d4 402B     		cmp	r3, #64
 463 01d6 00D1     		bne	.LCB354
 464 01d8 2DE7     		b	.L10	@long jump
 465              	.LCB354:
 181:Core/Src/gd32e23x_it.c ****             if (app_data.pwm_freq <= 5) {
 466              		.loc 1 181 9 is_stmt 1 view .LVU105
 181:Core/Src/gd32e23x_it.c ****             if (app_data.pwm_freq <= 5) {
 467              		.loc 1 181 22 is_stmt 0 view .LVU106
 468 01da 40F20040 		movw	r0, #1024
 469 01de C4F60000 		movt	r0, 18432
 470 01e2 44F20001 		movw	r1, #16384
 471 01e6 FFF7FEFF 		bl	gpio_input_bit_get
 472              	.LVL11:
 181:Core/Src/gd32e23x_it.c ****             if (app_data.pwm_freq <= 5) {
 473              		.loc 1 181 12 discriminator 1 view .LVU107
 474 01ea 0028     		cmp	r0, #0
ARM GAS  D:\noval\Temp\cclYsjr9.s 			page 14


 475 01ec 00D022E7 		beq	.LCB362;b	.L10	@long jump
 476              	.LCB362:
 182:Core/Src/gd32e23x_it.c ****                 app_data.pwm_freq = 50;
 477              		.loc 1 182 13 is_stmt 1 view .LVU108
 182:Core/Src/gd32e23x_it.c ****                 app_data.pwm_freq = 50;
 478              		.loc 1 182 25 is_stmt 0 view .LVU109
 479 01f0 40F20003 		movw	r3, #:lower16:app_data
 480 01f4 C0F20003 		movt	r3, #:upper16:app_data
 481 01f8 1B68     		ldr	r3, [r3]
 182:Core/Src/gd32e23x_it.c ****                 app_data.pwm_freq = 50;
 482              		.loc 1 182 16 view .LVU110
 483 01fa 052B     		cmp	r3, #5
 484 01fc 10D8     		bhi	.L33
 183:Core/Src/gd32e23x_it.c ****             } else {
 485              		.loc 1 183 17 is_stmt 1 view .LVU111
 183:Core/Src/gd32e23x_it.c ****             } else {
 486              		.loc 1 183 35 is_stmt 0 view .LVU112
 487 01fe 40F20003 		movw	r3, #:lower16:app_data
 488 0202 C0F20003 		movt	r3, #:upper16:app_data
 489 0206 3222     		movs	r2, #50
 490 0208 1A60     		str	r2, [r3]
 491              	.L34:
 187:Core/Src/gd32e23x_it.c ****         }
 492              		.loc 1 187 13 is_stmt 1 view .LVU113
 187:Core/Src/gd32e23x_it.c ****         }
 493              		.loc 1 187 33 is_stmt 0 view .LVU114
 494 020a 40F20002 		movw	r2, #:lower16:app_state
 495 020e C0F20002 		movt	r2, #:upper16:app_state
 496 0212 1178     		ldrb	r1, [r2]
 497 0214 0F23     		movs	r3, #15
 498 0216 0B40     		ands	r3, r1
 499 0218 1021     		movs	r1, #16
 500 021a 0B43     		orrs	r3, r1
 501 021c 1370     		strb	r3, [r2]
 502 021e 0AE7     		b	.L10
 503              	.L33:
 185:Core/Src/gd32e23x_it.c ****             }
 504              		.loc 1 185 17 is_stmt 1 view .LVU115
 185:Core/Src/gd32e23x_it.c ****             }
 505              		.loc 1 185 35 is_stmt 0 view .LVU116
 506 0220 40F20002 		movw	r2, #:lower16:app_data
 507 0224 C0F20002 		movt	r2, #:upper16:app_data
 508 0228 053B     		subs	r3, r3, #5
 509 022a 1360     		str	r3, [r2]
 510 022c EDE7     		b	.L34
 511              	.L39:
 190:Core/Src/gd32e23x_it.c ****         if (RESET == gpio_input_bit_get(GPIOB, GPIO_PIN_15)) {
 512              		.loc 1 190 9 is_stmt 1 view .LVU117
 513 022e 48F20000 		movw	r0, #32768
 514 0232 FFF7FEFF 		bl	exti_interrupt_flag_clear
 515              	.LVL12:
 191:Core/Src/gd32e23x_it.c ****             if (app_state.pwm_state != PWM_STATE_DISABLE) {
 516              		.loc 1 191 9 view .LVU118
 191:Core/Src/gd32e23x_it.c ****             if (app_state.pwm_state != PWM_STATE_DISABLE) {
 517              		.loc 1 191 22 is_stmt 0 view .LVU119
 518 0236 40F20040 		movw	r0, #1024
 519 023a C4F60000 		movt	r0, 18432
ARM GAS  D:\noval\Temp\cclYsjr9.s 			page 15


 520 023e 48F20001 		movw	r1, #32768
 521 0242 FFF7FEFF 		bl	gpio_input_bit_get
 522              	.LVL13:
 191:Core/Src/gd32e23x_it.c ****             if (app_state.pwm_state != PWM_STATE_DISABLE) {
 523              		.loc 1 191 12 discriminator 1 view .LVU120
 524 0246 0028     		cmp	r0, #0
 525 0248 00D0F4E6 		beq	.LCB408;b	.L10	@long jump
 526              	.LCB408:
 192:Core/Src/gd32e23x_it.c ****                 app_state.pwm_state = PWM_STATE_CLOSE;
 527              		.loc 1 192 13 is_stmt 1 view .LVU121
 192:Core/Src/gd32e23x_it.c ****                 app_state.pwm_state = PWM_STATE_CLOSE;
 528              		.loc 1 192 37 is_stmt 0 view .LVU122
 529 024c 40F20003 		movw	r3, #:lower16:app_state
 530 0250 C0F20003 		movt	r3, #:upper16:app_state
 531 0254 1B78     		ldrb	r3, [r3]
 532 0256 0F22     		movs	r2, #15
 533 0258 9343     		bics	r3, r2
 192:Core/Src/gd32e23x_it.c ****                 app_state.pwm_state = PWM_STATE_CLOSE;
 534              		.loc 1 192 16 view .LVU123
 535 025a 402B     		cmp	r3, #64
 536 025c 0AD0     		beq	.L35
 193:Core/Src/gd32e23x_it.c ****             } else {
 537              		.loc 1 193 17 is_stmt 1 view .LVU124
 193:Core/Src/gd32e23x_it.c ****             } else {
 538              		.loc 1 193 37 is_stmt 0 view .LVU125
 539 025e 40F20002 		movw	r2, #:lower16:app_state
 540 0262 C0F20002 		movt	r2, #:upper16:app_state
 541 0266 1178     		ldrb	r1, [r2]
 542 0268 0F23     		movs	r3, #15
 543 026a 0B40     		ands	r3, r1
 544 026c 2021     		movs	r1, #32
 545 026e 0B43     		orrs	r3, r1
 546 0270 1370     		strb	r3, [r2]
 547 0272 E0E6     		b	.L10
 548              	.L35:
 195:Core/Src/gd32e23x_it.c ****             }
 549              		.loc 1 195 17 is_stmt 1 view .LVU126
 195:Core/Src/gd32e23x_it.c ****             }
 550              		.loc 1 195 37 is_stmt 0 view .LVU127
 551 0274 40F20002 		movw	r2, #:lower16:app_state
 552 0278 C0F20002 		movt	r2, #:upper16:app_state
 553 027c 1178     		ldrb	r1, [r2]
 554 027e 0F23     		movs	r3, #15
 555 0280 0B40     		ands	r3, r1
 556 0282 3021     		movs	r1, #48
 557 0284 0B43     		orrs	r3, r1
 558 0286 1370     		strb	r3, [r2]
 559 0288 D5E6     		b	.L10
 560              	.L41:
 561 028a C046     		.align	2
 562              	.L40:
 563 028c 00000000 		.word	.L16
 564 0290 14000000 		.word	.L24
 565              		.cfi_endproc
 566              	.LFE68:
 568              		.section	.rodata.DMA_Channel0_IRQHandler.str1.4,"aMS",%progbits,1
 569              		.align	2
ARM GAS  D:\noval\Temp\cclYsjr9.s 			page 16


 570              	.LC2:
 571 0000 444D4120 		.ascii	"DMA execute...\000"
 571      65786563 
 571      7574652E 
 571      2E2E00
 572              		.section	.text.DMA_Channel0_IRQHandler,"ax",%progbits
 573              		.align	1
 574              		.global	DMA_Channel0_IRQHandler
 575              		.syntax unified
 576              		.code	16
 577              		.thumb_func
 579              	DMA_Channel0_IRQHandler:
 580              	.LFB69:
 200:Core/Src/gd32e23x_it.c **** 
 201:Core/Src/gd32e23x_it.c **** /*
 202:Core/Src/gd32e23x_it.c ****  * @brief    This function handles DMA exception
 203:Core/Src/gd32e23x_it.c ****  * @param    None
 204:Core/Src/gd32e23x_it.c ****  * @retval   None
 205:Core/Src/gd32e23x_it.c ****  */
 206:Core/Src/gd32e23x_it.c **** void DMA_Channel0_IRQHandler(void)
 207:Core/Src/gd32e23x_it.c **** {
 581              		.loc 1 207 1 is_stmt 1 view -0
 582              		.cfi_startproc
 583              		@ args = 0, pretend = 0, frame = 0
 584              		@ frame_needed = 0, uses_anonymous_args = 0
 585 0000 10B5     		push	{r4, lr}
 586              	.LCFI2:
 587              		.cfi_def_cfa_offset 8
 588              		.cfi_offset 4, -8
 589              		.cfi_offset 14, -4
 208:Core/Src/gd32e23x_it.c ****     EMLOG(LOG_DEBUG, "DMA execute...");
 590              		.loc 1 208 5 view .LVU129
 591 0002 40F20003 		movw	r3, #:lower16:.LC2
 592 0006 C0F20003 		movt	r3, #:upper16:.LC2
 593 000a 40F20001 		movw	r1, #:lower16:__FUNCTION__.3
 594 000e C0F20001 		movt	r1, #:upper16:__FUNCTION__.3
 595 0012 D022     		movs	r2, #208
 596 0014 0020     		movs	r0, #0
 597 0016 FFF7FEFF 		bl	EM_LOG
 598              	.LVL14:
 209:Core/Src/gd32e23x_it.c **** 
 210:Core/Src/gd32e23x_it.c ****     if(dma_interrupt_flag_get(DMA_CH0, DMA_INT_FLAG_FTF)){
 599              		.loc 1 210 5 view .LVU130
 600              		.loc 1 210 8 is_stmt 0 view .LVU131
 601 001a 0221     		movs	r1, #2
 602 001c 0020     		movs	r0, #0
 603 001e FFF7FEFF 		bl	dma_interrupt_flag_get
 604              	.LVL15:
 605              		.loc 1 210 7 discriminator 1 view .LVU132
 606 0022 00B9     		cbnz	r0, .L44
 607              	.L42:
 211:Core/Src/gd32e23x_it.c ****         dma_channel_disable(DMA_CH0);
 212:Core/Src/gd32e23x_it.c ****         dma_interrupt_flag_clear(DMA_CH0, DMA_INT_FLAG_G);
 213:Core/Src/gd32e23x_it.c ****     }
 214:Core/Src/gd32e23x_it.c **** }
 608              		.loc 1 214 1 view .LVU133
 609              		@ sp needed
ARM GAS  D:\noval\Temp\cclYsjr9.s 			page 17


 610 0024 10BD     		pop	{r4, pc}
 611              	.L44:
 211:Core/Src/gd32e23x_it.c ****         dma_channel_disable(DMA_CH0);
 612              		.loc 1 211 9 is_stmt 1 view .LVU134
 613 0026 0020     		movs	r0, #0
 614 0028 FFF7FEFF 		bl	dma_channel_disable
 615              	.LVL16:
 212:Core/Src/gd32e23x_it.c ****     }
 616              		.loc 1 212 9 view .LVU135
 617 002c 0121     		movs	r1, #1
 618 002e 0020     		movs	r0, #0
 619 0030 FFF7FEFF 		bl	dma_interrupt_flag_clear
 620              	.LVL17:
 621              		.loc 1 214 1 is_stmt 0 view .LVU136
 622 0034 F6E7     		b	.L42
 623              		.cfi_endproc
 624              	.LFE69:
 626              		.section	.text.TIMER15_IRQHandler,"ax",%progbits
 627              		.align	1
 628              		.global	TIMER15_IRQHandler
 629              		.syntax unified
 630              		.code	16
 631              		.thumb_func
 633              	TIMER15_IRQHandler:
 634              	.LFB70:
 215:Core/Src/gd32e23x_it.c **** 
 216:Core/Src/gd32e23x_it.c **** /*
 217:Core/Src/gd32e23x_it.c ****  * @brief    This function handles TIMER15 exception
 218:Core/Src/gd32e23x_it.c ****  * @param    None
 219:Core/Src/gd32e23x_it.c ****  * @retval   None
 220:Core/Src/gd32e23x_it.c ****  */
 221:Core/Src/gd32e23x_it.c **** void TIMER15_IRQHandler(void)
 222:Core/Src/gd32e23x_it.c **** {
 635              		.loc 1 222 1 is_stmt 1 view -0
 636              		.cfi_startproc
 637              		@ args = 0, pretend = 0, frame = 0
 638              		@ frame_needed = 0, uses_anonymous_args = 0
 639 0000 10B5     		push	{r4, lr}
 640              	.LCFI3:
 641              		.cfi_def_cfa_offset 8
 642              		.cfi_offset 4, -8
 643              		.cfi_offset 14, -4
 223:Core/Src/gd32e23x_it.c ****     // static uint32_t counter, display_update;//, wave_update, vpp_update, samp_update;
 224:Core/Src/gd32e23x_it.c ****     // static uint16_t idx, voltage;
 225:Core/Src/gd32e23x_it.c **** 
 226:Core/Src/gd32e23x_it.c ****     if (SET == timer_interrupt_flag_get(TIMER15, TIMER_INT_FLAG_UP)) {
 644              		.loc 1 226 5 view .LVU138
 645              		.loc 1 226 16 is_stmt 0 view .LVU139
 646 0002 44F20040 		movw	r0, #17408
 647 0006 C4F20100 		movt	r0, 16385
 648 000a 0121     		movs	r1, #1
 649 000c FFF7FEFF 		bl	timer_interrupt_flag_get
 650              	.LVL18:
 651              		.loc 1 226 8 discriminator 1 view .LVU140
 652 0010 0128     		cmp	r0, #1
 653 0012 00D0     		beq	.L48
 654              	.L45:
ARM GAS  D:\noval\Temp\cclYsjr9.s 			page 18


 227:Core/Src/gd32e23x_it.c ****         timer_interrupt_flag_clear(TIMER15, TIMER_INT_FLAG_UP);
 228:Core/Src/gd32e23x_it.c ****         // if (app_state.update_samp_val && samp_update == counter) {
 229:Core/Src/gd32e23x_it.c ****         //     samp_update = (counter + app_data.wave_samp_freq) % 0xFFFFFFFFU;
 230:Core/Src/gd32e23x_it.c ****         //     voltage = ADCGetValue(ADC_CHANNEL_3);
 231:Core/Src/gd32e23x_it.c ****         //     app_data.data[idx++] = voltage;
 232:Core/Src/gd32e23x_it.c ****         //     if (idx >= LENGTH) {
 233:Core/Src/gd32e23x_it.c ****         //         idx = 0;
 234:Core/Src/gd32e23x_it.c ****         //         app_state.update_samp_val = APP_STATE_DISABLE;
 235:Core/Src/gd32e23x_it.c ****         //     }
 236:Core/Src/gd32e23x_it.c ****         //     if (voltage > app_data.wave_vpp) {
 237:Core/Src/gd32e23x_it.c ****         //         app_data.wave_vpp = voltage;
 238:Core/Src/gd32e23x_it.c ****         //     } else if (voltage == 0) {
 239:Core/Src/gd32e23x_it.c ****         //         app_data.wave_vpp = 0;
 240:Core/Src/gd32e23x_it.c ****         //     }
 241:Core/Src/gd32e23x_it.c ****         // }
 242:Core/Src/gd32e23x_it.c ****         if (app_state.waveform_update == WAVEFORM_UPDATE_NONE) {
 243:Core/Src/gd32e23x_it.c ****             app_state.waveform_update = WAVEFORM_UPDATE_DONE;
 244:Core/Src/gd32e23x_it.c ****         }
 245:Core/Src/gd32e23x_it.c ****         // if (counter == wave_update) {
 246:Core/Src/gd32e23x_it.c ****         //     wave_update = (counter + 100000) % 0xFFFFFFFFU;
 247:Core/Src/gd32e23x_it.c ****         //     if (app_state.waveform_update == WAVEFORM_UPDATE_NONE)
 248:Core/Src/gd32e23x_it.c ****         //         app_state.waveform_update = WAVEFORM_UPDATE_DONE;                   // the defau
 249:Core/Src/gd32e23x_it.c ****         // }
 250:Core/Src/gd32e23x_it.c ****         // if (counter == display_update) {
 251:Core/Src/gd32e23x_it.c ****             // display_update = (counter + 50000) % 0xFFFFFFFFU;
 252:Core/Src/gd32e23x_it.c ****             app_state.display_update = APP_STATE_ENABLE;                            // the display 
 253:Core/Src/gd32e23x_it.c ****         // }
 254:Core/Src/gd32e23x_it.c ****     }
 255:Core/Src/gd32e23x_it.c ****     // counter ++;  // 10us
 256:Core/Src/gd32e23x_it.c **** }
 655              		.loc 1 256 1 view .LVU141
 656              		@ sp needed
 657 0014 10BD     		pop	{r4, pc}
 658              	.L48:
 227:Core/Src/gd32e23x_it.c ****         timer_interrupt_flag_clear(TIMER15, TIMER_INT_FLAG_UP);
 659              		.loc 1 227 9 is_stmt 1 view .LVU142
 660 0016 44F20040 		movw	r0, #17408
 661 001a C4F20100 		movt	r0, 16385
 662 001e 0121     		movs	r1, #1
 663 0020 FFF7FEFF 		bl	timer_interrupt_flag_clear
 664              	.LVL19:
 242:Core/Src/gd32e23x_it.c ****             app_state.waveform_update = WAVEFORM_UPDATE_DONE;
 665              		.loc 1 242 9 view .LVU143
 242:Core/Src/gd32e23x_it.c ****             app_state.waveform_update = WAVEFORM_UPDATE_DONE;
 666              		.loc 1 242 39 is_stmt 0 view .LVU144
 667 0024 40F20003 		movw	r3, #:lower16:app_state
 668 0028 C0F20003 		movt	r3, #:upper16:app_state
 669 002c 1B78     		ldrb	r3, [r3]
 670 002e 0C22     		movs	r2, #12
 242:Core/Src/gd32e23x_it.c ****             app_state.waveform_update = WAVEFORM_UPDATE_DONE;
 671              		.loc 1 242 12 view .LVU145
 672 0030 1A42     		tst	r2, r3
 673 0032 08D1     		bne	.L47
 243:Core/Src/gd32e23x_it.c ****         }
 674              		.loc 1 243 13 is_stmt 1 view .LVU146
 243:Core/Src/gd32e23x_it.c ****         }
 675              		.loc 1 243 39 is_stmt 0 view .LVU147
ARM GAS  D:\noval\Temp\cclYsjr9.s 			page 19


 676 0034 40F20002 		movw	r2, #:lower16:app_state
 677 0038 C0F20002 		movt	r2, #:upper16:app_state
 678 003c 0C21     		movs	r1, #12
 679 003e 8B43     		bics	r3, r1
 680 0040 0421     		movs	r1, #4
 681 0042 0B43     		orrs	r3, r1
 682 0044 1370     		strb	r3, [r2]
 683              	.L47:
 252:Core/Src/gd32e23x_it.c ****         // }
 684              		.loc 1 252 13 is_stmt 1 view .LVU148
 252:Core/Src/gd32e23x_it.c ****         // }
 685              		.loc 1 252 38 is_stmt 0 view .LVU149
 686 0046 40F20003 		movw	r3, #:lower16:app_state
 687 004a C0F20003 		movt	r3, #:upper16:app_state
 688 004e 1A78     		ldrb	r2, [r3]
 689 0050 0121     		movs	r1, #1
 690 0052 0A43     		orrs	r2, r1
 691 0054 1A70     		strb	r2, [r3]
 692              		.loc 1 256 1 view .LVU150
 693 0056 DDE7     		b	.L45
 694              		.cfi_endproc
 695              	.LFE70:
 697              		.section	.rodata.TIMER2_IRQHandler.str1.4,"aMS",%progbits,1
 698              		.align	2
 699              	.LC3:
 700 0000 54494D45 		.ascii	"TIMER2_IRQHandler\000"
 700      52325F49 
 700      52514861 
 700      6E646C65 
 700      7200
 701              		.section	.text.TIMER2_IRQHandler,"ax",%progbits
 702              		.align	1
 703              		.global	TIMER2_IRQHandler
 704              		.syntax unified
 705              		.code	16
 706              		.thumb_func
 708              	TIMER2_IRQHandler:
 709              	.LFB71:
 257:Core/Src/gd32e23x_it.c **** 
 258:Core/Src/gd32e23x_it.c **** /*
 259:Core/Src/gd32e23x_it.c ****  * @brief    This function handles TIMER2 exception
 260:Core/Src/gd32e23x_it.c ****  * @param    None
 261:Core/Src/gd32e23x_it.c ****  * @retval   None
 262:Core/Src/gd32e23x_it.c ****  */
 263:Core/Src/gd32e23x_it.c **** void TIMER2_IRQHandler(void)
 264:Core/Src/gd32e23x_it.c **** {
 710              		.loc 1 264 1 is_stmt 1 view -0
 711              		.cfi_startproc
 712              		@ args = 0, pretend = 0, frame = 0
 713              		@ frame_needed = 0, uses_anonymous_args = 0
 714 0000 10B5     		push	{r4, lr}
 715              	.LCFI4:
 716              		.cfi_def_cfa_offset 8
 717              		.cfi_offset 4, -8
 718              		.cfi_offset 14, -4
 265:Core/Src/gd32e23x_it.c ****     static uint32_t buf, value;
 719              		.loc 1 265 5 view .LVU152
ARM GAS  D:\noval\Temp\cclYsjr9.s 			page 20


 266:Core/Src/gd32e23x_it.c **** 
 267:Core/Src/gd32e23x_it.c ****     EMLOG(LOG_DEBUG, "TIMER2_IRQHandler");
 720              		.loc 1 267 5 view .LVU153
 721 0002 40F20003 		movw	r3, #:lower16:.LC3
 722 0006 C0F20003 		movt	r3, #:upper16:.LC3
 723 000a 40F20001 		movw	r1, #:lower16:__FUNCTION__.2
 724 000e C0F20001 		movt	r1, #:upper16:__FUNCTION__.2
 725 0012 40F20B12 		movw	r2, #267
 726 0016 0020     		movs	r0, #0
 727 0018 FFF7FEFF 		bl	EM_LOG
 728              	.LVL20:
 268:Core/Src/gd32e23x_it.c **** 
 269:Core/Src/gd32e23x_it.c ****     if (SET == timer_interrupt_flag_get(TIMER2, TIMER_INT_FLAG_CH0)) {
 729              		.loc 1 269 5 view .LVU154
 730              		.loc 1 269 16 is_stmt 0 view .LVU155
 731 001c 40F20040 		movw	r0, #1024
 732 0020 C4F20000 		movt	r0, 16384
 733 0024 0221     		movs	r1, #2
 734 0026 FFF7FEFF 		bl	timer_interrupt_flag_get
 735              	.LVL21:
 736              		.loc 1 269 8 discriminator 1 view .LVU156
 737 002a 0128     		cmp	r0, #1
 738 002c 00D0     		beq	.L52
 739              	.L49:
 270:Core/Src/gd32e23x_it.c ****         timer_interrupt_flag_clear(TIMER2, TIMER_INT_FLAG_CH0);
 271:Core/Src/gd32e23x_it.c ****         if (!value) {
 272:Core/Src/gd32e23x_it.c ****             value = timer_channel_capture_value_register_read(TIMER2, TIMER_CH_0);
 273:Core/Src/gd32e23x_it.c ****             return ;
 274:Core/Src/gd32e23x_it.c ****         }
 275:Core/Src/gd32e23x_it.c ****         buf = timer_channel_capture_value_register_read(TIMER2, TIMER_CH_0);
 276:Core/Src/gd32e23x_it.c ****         buf = (0xFFFFU + buf - value) % 0xFFFFU;
 277:Core/Src/gd32e23x_it.c ****         app_data.wave_freq = 1000000U / buf;
 278:Core/Src/gd32e23x_it.c ****         value = 0;
 279:Core/Src/gd32e23x_it.c ****     }
 280:Core/Src/gd32e23x_it.c **** }
 740              		.loc 1 280 1 view .LVU157
 741              		@ sp needed
 742 002e 10BD     		pop	{r4, pc}
 743              	.L52:
 270:Core/Src/gd32e23x_it.c ****         timer_interrupt_flag_clear(TIMER2, TIMER_INT_FLAG_CH0);
 744              		.loc 1 270 9 is_stmt 1 view .LVU158
 745 0030 40F20040 		movw	r0, #1024
 746 0034 C4F20000 		movt	r0, 16384
 747 0038 0221     		movs	r1, #2
 748 003a FFF7FEFF 		bl	timer_interrupt_flag_clear
 749              	.LVL22:
 271:Core/Src/gd32e23x_it.c ****             value = timer_channel_capture_value_register_read(TIMER2, TIMER_CH_0);
 750              		.loc 1 271 9 view .LVU159
 271:Core/Src/gd32e23x_it.c ****             value = timer_channel_capture_value_register_read(TIMER2, TIMER_CH_0);
 751              		.loc 1 271 13 is_stmt 0 view .LVU160
 752 003e 40F20003 		movw	r3, #:lower16:value.1
 753 0042 C0F20003 		movt	r3, #:upper16:value.1
 754 0046 1B68     		ldr	r3, [r3]
 271:Core/Src/gd32e23x_it.c ****             value = timer_channel_capture_value_register_read(TIMER2, TIMER_CH_0);
 755              		.loc 1 271 12 view .LVU161
 756 0048 53B3     		cbz	r3, .L53
 275:Core/Src/gd32e23x_it.c ****         buf = (0xFFFFU + buf - value) % 0xFFFFU;
ARM GAS  D:\noval\Temp\cclYsjr9.s 			page 21


 757              		.loc 1 275 9 is_stmt 1 view .LVU162
 275:Core/Src/gd32e23x_it.c ****         buf = (0xFFFFU + buf - value) % 0xFFFFU;
 758              		.loc 1 275 15 is_stmt 0 view .LVU163
 759 004a 40F20040 		movw	r0, #1024
 760 004e C4F20000 		movt	r0, 16384
 761 0052 0021     		movs	r1, #0
 762 0054 FFF7FEFF 		bl	timer_channel_capture_value_register_read
 763              	.LVL23:
 275:Core/Src/gd32e23x_it.c ****         buf = (0xFFFFU + buf - value) % 0xFFFFU;
 764              		.loc 1 275 13 discriminator 1 view .LVU164
 765 0058 40F20001 		movw	r1, #:lower16:buf.0
 766 005c C0F20001 		movt	r1, #:upper16:buf.0
 767 0060 0860     		str	r0, [r1]
 276:Core/Src/gd32e23x_it.c ****         app_data.wave_freq = 1000000U / buf;
 768              		.loc 1 276 9 is_stmt 1 view .LVU165
 276:Core/Src/gd32e23x_it.c ****         app_data.wave_freq = 1000000U / buf;
 769              		.loc 1 276 30 is_stmt 0 view .LVU166
 770 0062 40F20002 		movw	r2, #:lower16:value.1
 771 0066 C0F20002 		movt	r2, #:upper16:value.1
 772 006a 1368     		ldr	r3, [r2]
 773 006c C31A     		subs	r3, r0, r3
 774 006e 4FF6FF7C 		movw	ip, #65535
 775 0072 6344     		add	r3, r3, ip
 276:Core/Src/gd32e23x_it.c ****         app_data.wave_freq = 1000000U / buf;
 776              		.loc 1 276 39 view .LVU167
 777 0074 4FF6FF70 		movw	r0, #65535
 778 0078 B3FBF0F0 		udiv	r0, r3, r0
 779 007c 0404     		lsls	r4, r0, #16
 780 007e 201A     		subs	r0, r4, r0
 781 0080 1B1A     		subs	r3, r3, r0
 276:Core/Src/gd32e23x_it.c ****         app_data.wave_freq = 1000000U / buf;
 782              		.loc 1 276 13 view .LVU168
 783 0082 0B60     		str	r3, [r1]
 277:Core/Src/gd32e23x_it.c ****         value = 0;
 784              		.loc 1 277 9 is_stmt 1 view .LVU169
 277:Core/Src/gd32e23x_it.c ****         value = 0;
 785              		.loc 1 277 39 is_stmt 0 view .LVU170
 786 0084 44F24021 		movw	r1, #16960
 787 0088 C0F20F01 		movt	r1, 15
 788 008c B1FBF3F1 		udiv	r1, r1, r3
 277:Core/Src/gd32e23x_it.c ****         value = 0;
 789              		.loc 1 277 28 view .LVU171
 790 0090 40F20003 		movw	r3, #:lower16:app_data
 791 0094 C0F20003 		movt	r3, #:upper16:app_data
 792 0098 D960     		str	r1, [r3, #12]
 278:Core/Src/gd32e23x_it.c ****     }
 793              		.loc 1 278 9 is_stmt 1 view .LVU172
 278:Core/Src/gd32e23x_it.c ****     }
 794              		.loc 1 278 15 is_stmt 0 view .LVU173
 795 009a 0023     		movs	r3, #0
 796 009c 1360     		str	r3, [r2]
 797 009e C6E7     		b	.L49
 798              	.L53:
 272:Core/Src/gd32e23x_it.c ****             return ;
 799              		.loc 1 272 13 is_stmt 1 view .LVU174
 272:Core/Src/gd32e23x_it.c ****             return ;
 800              		.loc 1 272 21 is_stmt 0 view .LVU175
ARM GAS  D:\noval\Temp\cclYsjr9.s 			page 22


 801 00a0 40F20040 		movw	r0, #1024
 802 00a4 C4F20000 		movt	r0, 16384
 803 00a8 0021     		movs	r1, #0
 804 00aa FFF7FEFF 		bl	timer_channel_capture_value_register_read
 805              	.LVL24:
 272:Core/Src/gd32e23x_it.c ****             return ;
 806              		.loc 1 272 19 discriminator 1 view .LVU176
 807 00ae 40F20003 		movw	r3, #:lower16:value.1
 808 00b2 C0F20003 		movt	r3, #:upper16:value.1
 809 00b6 1860     		str	r0, [r3]
 273:Core/Src/gd32e23x_it.c ****         }
 810              		.loc 1 273 13 is_stmt 1 view .LVU177
 811 00b8 B9E7     		b	.L49
 812              		.cfi_endproc
 813              	.LFE71:
 815              		.section	.bss.buf.0,"aw",%nobits
 816              		.align	2
 819              	buf.0:
 820 0000 00000000 		.space	4
 821              		.section	.bss.value.1,"aw",%nobits
 822              		.align	2
 825              	value.1:
 826 0000 00000000 		.space	4
 827              		.section	.rodata.__FUNCTION__.2,"a"
 828              		.align	2
 831              	__FUNCTION__.2:
 832 0000 54494D45 		.ascii	"TIMER2_IRQHandler\000"
 832      52325F49 
 832      52514861 
 832      6E646C65 
 832      7200
 833              		.section	.rodata.__FUNCTION__.3,"a"
 834              		.align	2
 837              	__FUNCTION__.3:
 838 0000 444D415F 		.ascii	"DMA_Channel0_IRQHandler\000"
 838      4368616E 
 838      6E656C30 
 838      5F495251 
 838      48616E64 
 839              		.text
 840              	.Letext0:
 841              		.file 2 "D:/AppData/arm-gnu-toolchain-13.3.rel1-mingw-w64-i686-arm-none-eabi/arm-none-eabi/include
 842              		.file 3 "D:/AppData/arm-gnu-toolchain-13.3.rel1-mingw-w64-i686-arm-none-eabi/arm-none-eabi/include
 843              		.file 4 "Drivers/CMSIS/GD/GD32E23x/Include/gd32e23x.h"
 844              		.file 5 "Drivers/GD32E23x/Include/gd32e23x_dma.h"
 845              		.file 6 "Drivers/GD32E23x/Include/gd32e23x_exti.h"
 846              		.file 7 "Core/Inc/app.h"
 847              		.file 8 "Core/Inc/log.h"
 848              		.file 9 "Drivers/GD32E23x/Include/gd32e23x_timer.h"
 849              		.file 10 "Drivers/GD32E23x/Include/gd32e23x_gpio.h"
 850              		.file 11 "Core/Inc/systick.h"
ARM GAS  D:\noval\Temp\cclYsjr9.s 			page 23


DEFINED SYMBOLS
                            *ABS*:00000000 gd32e23x_it.c
D:\noval\Temp\cclYsjr9.s:19     .text.NMI_Handler:00000000 $t
D:\noval\Temp\cclYsjr9.s:25     .text.NMI_Handler:00000000 NMI_Handler
D:\noval\Temp\cclYsjr9.s:42     .text.HardFault_Handler:00000000 $t
D:\noval\Temp\cclYsjr9.s:48     .text.HardFault_Handler:00000000 HardFault_Handler
D:\noval\Temp\cclYsjr9.s:65     .text.SVC_Handler:00000000 $t
D:\noval\Temp\cclYsjr9.s:71     .text.SVC_Handler:00000000 SVC_Handler
D:\noval\Temp\cclYsjr9.s:88     .text.PendSV_Handler:00000000 $t
D:\noval\Temp\cclYsjr9.s:94     .text.PendSV_Handler:00000000 PendSV_Handler
D:\noval\Temp\cclYsjr9.s:111    .text.SysTick_Handler:00000000 $t
D:\noval\Temp\cclYsjr9.s:117    .text.SysTick_Handler:00000000 SysTick_Handler
D:\noval\Temp\cclYsjr9.s:138    .text.EXTI4_15_IRQHandler:00000000 $t
D:\noval\Temp\cclYsjr9.s:144    .text.EXTI4_15_IRQHandler:00000000 EXTI4_15_IRQHandler
D:\noval\Temp\cclYsjr9.s:239    .rodata.EXTI4_15_IRQHandler:00000000 $d
D:\noval\Temp\cclYsjr9.s:563    .text.EXTI4_15_IRQHandler:0000028c $d
D:\noval\Temp\cclYsjr9.s:569    .rodata.DMA_Channel0_IRQHandler.str1.4:00000000 $d
D:\noval\Temp\cclYsjr9.s:570    .rodata.DMA_Channel0_IRQHandler.str1.4:00000000 .LC2
D:\noval\Temp\cclYsjr9.s:573    .text.DMA_Channel0_IRQHandler:00000000 $t
D:\noval\Temp\cclYsjr9.s:579    .text.DMA_Channel0_IRQHandler:00000000 DMA_Channel0_IRQHandler
D:\noval\Temp\cclYsjr9.s:837    .rodata.__FUNCTION__.3:00000000 __FUNCTION__.3
D:\noval\Temp\cclYsjr9.s:627    .text.TIMER15_IRQHandler:00000000 $t
D:\noval\Temp\cclYsjr9.s:633    .text.TIMER15_IRQHandler:00000000 TIMER15_IRQHandler
D:\noval\Temp\cclYsjr9.s:698    .rodata.TIMER2_IRQHandler.str1.4:00000000 $d
D:\noval\Temp\cclYsjr9.s:699    .rodata.TIMER2_IRQHandler.str1.4:00000000 .LC3
D:\noval\Temp\cclYsjr9.s:702    .text.TIMER2_IRQHandler:00000000 $t
D:\noval\Temp\cclYsjr9.s:708    .text.TIMER2_IRQHandler:00000000 TIMER2_IRQHandler
D:\noval\Temp\cclYsjr9.s:831    .rodata.__FUNCTION__.2:00000000 __FUNCTION__.2
D:\noval\Temp\cclYsjr9.s:825    .bss.value.1:00000000 value.1
D:\noval\Temp\cclYsjr9.s:819    .bss.buf.0:00000000 buf.0
D:\noval\Temp\cclYsjr9.s:816    .bss.buf.0:00000000 $d
D:\noval\Temp\cclYsjr9.s:822    .bss.value.1:00000000 $d
D:\noval\Temp\cclYsjr9.s:828    .rodata.__FUNCTION__.2:00000000 $d
D:\noval\Temp\cclYsjr9.s:834    .rodata.__FUNCTION__.3:00000000 $d

UNDEFINED SYMBOLS
delay_decrement
exti_interrupt_flag_get
exti_interrupt_flag_clear
app_state
delay_1ms
gpio_input_bit_get
app_data
EM_LOG
dma_interrupt_flag_get
dma_channel_disable
dma_interrupt_flag_clear
timer_interrupt_flag_get
timer_interrupt_flag_clear
timer_channel_capture_value_register_read
