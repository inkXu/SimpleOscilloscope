ARM GAS  D:\noval\Temp\cc0D8957.s 			page 1


   1              		.cpu cortex-m23
   2              		.arch armv8-m.base
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"gd32e23x_misc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Drivers/GD32E23x/Source/gd32e23x_misc.c"
  18              		.section	.text.__NVIC_DisableIRQ,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	__NVIC_DisableIRQ:
  25              	.LVL0:
  26              	.LFB48:
  27              		.file 2 "Drivers/CMSIS/core_cm23.h"
   1:Drivers/CMSIS/core_cm23.h **** /**************************************************************************//**
   2:Drivers/CMSIS/core_cm23.h ****  * @file     core_cm23.h
   3:Drivers/CMSIS/core_cm23.h ****  * @brief    CMSIS Cortex-M23 Core Peripheral Access Layer Header File
   4:Drivers/CMSIS/core_cm23.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/core_cm23.h ****  * @date     10. January 2018
   6:Drivers/CMSIS/core_cm23.h ****  ******************************************************************************/
   7:Drivers/CMSIS/core_cm23.h **** /*
   8:Drivers/CMSIS/core_cm23.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/core_cm23.h ****  *
  10:Drivers/CMSIS/core_cm23.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/core_cm23.h ****  *
  12:Drivers/CMSIS/core_cm23.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/core_cm23.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/core_cm23.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/core_cm23.h ****  *
  16:Drivers/CMSIS/core_cm23.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/core_cm23.h ****  *
  18:Drivers/CMSIS/core_cm23.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/core_cm23.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/core_cm23.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/core_cm23.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/core_cm23.h ****  * limitations under the License.
  23:Drivers/CMSIS/core_cm23.h ****  */
  24:Drivers/CMSIS/core_cm23.h **** 
  25:Drivers/CMSIS/core_cm23.h **** #if   defined ( __ICCARM__ )
  26:Drivers/CMSIS/core_cm23.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:Drivers/CMSIS/core_cm23.h **** #elif defined (__clang__)
  28:Drivers/CMSIS/core_cm23.h ****   #pragma clang system_header   /* treat file as system include file */
  29:Drivers/CMSIS/core_cm23.h **** #endif
  30:Drivers/CMSIS/core_cm23.h **** 
  31:Drivers/CMSIS/core_cm23.h **** #ifndef __CORE_CM23_H_GENERIC
ARM GAS  D:\noval\Temp\cc0D8957.s 			page 2


  32:Drivers/CMSIS/core_cm23.h **** #define __CORE_CM23_H_GENERIC
  33:Drivers/CMSIS/core_cm23.h **** 
  34:Drivers/CMSIS/core_cm23.h **** #include <stdint.h>
  35:Drivers/CMSIS/core_cm23.h **** 
  36:Drivers/CMSIS/core_cm23.h **** #ifdef __cplusplus
  37:Drivers/CMSIS/core_cm23.h ****  extern "C" {
  38:Drivers/CMSIS/core_cm23.h **** #endif
  39:Drivers/CMSIS/core_cm23.h **** 
  40:Drivers/CMSIS/core_cm23.h **** /**
  41:Drivers/CMSIS/core_cm23.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:Drivers/CMSIS/core_cm23.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:Drivers/CMSIS/core_cm23.h **** 
  44:Drivers/CMSIS/core_cm23.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:Drivers/CMSIS/core_cm23.h ****      Function definitions in header files are used to allow 'inlining'.
  46:Drivers/CMSIS/core_cm23.h **** 
  47:Drivers/CMSIS/core_cm23.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:Drivers/CMSIS/core_cm23.h ****      Unions are used for effective representation of core registers.
  49:Drivers/CMSIS/core_cm23.h **** 
  50:Drivers/CMSIS/core_cm23.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:Drivers/CMSIS/core_cm23.h ****      Function-like macros are used to allow more efficient code.
  52:Drivers/CMSIS/core_cm23.h ****  */
  53:Drivers/CMSIS/core_cm23.h **** 
  54:Drivers/CMSIS/core_cm23.h **** 
  55:Drivers/CMSIS/core_cm23.h **** /*******************************************************************************
  56:Drivers/CMSIS/core_cm23.h ****  *                 CMSIS definitions
  57:Drivers/CMSIS/core_cm23.h ****  ******************************************************************************/
  58:Drivers/CMSIS/core_cm23.h **** /**
  59:Drivers/CMSIS/core_cm23.h ****   \ingroup Cortex_M23
  60:Drivers/CMSIS/core_cm23.h ****   @{
  61:Drivers/CMSIS/core_cm23.h ****  */
  62:Drivers/CMSIS/core_cm23.h **** 
  63:Drivers/CMSIS/core_cm23.h **** #include "cmsis_version.h"
  64:Drivers/CMSIS/core_cm23.h **** 
  65:Drivers/CMSIS/core_cm23.h **** /*  CMSIS definitions */
  66:Drivers/CMSIS/core_cm23.h **** #define __CM23_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)                   /*!< \deprecated [31
  67:Drivers/CMSIS/core_cm23.h **** #define __CM23_CMSIS_VERSION_SUB   (__CM_CMSIS_VERSION_SUB)                    /*!< \deprecated [15
  68:Drivers/CMSIS/core_cm23.h **** #define __CM23_CMSIS_VERSION       ((__CM23_CMSIS_VERSION_MAIN << 16U) | \
  69:Drivers/CMSIS/core_cm23.h ****                                      __CM23_CMSIS_VERSION_SUB           )      /*!< \deprecated CMS
  70:Drivers/CMSIS/core_cm23.h **** 
  71:Drivers/CMSIS/core_cm23.h **** #define __CORTEX_M                     (23U)                                   /*!< Cortex-M Core *
  72:Drivers/CMSIS/core_cm23.h **** 
  73:Drivers/CMSIS/core_cm23.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:Drivers/CMSIS/core_cm23.h ****     This core does not support an FPU at all
  75:Drivers/CMSIS/core_cm23.h **** */
  76:Drivers/CMSIS/core_cm23.h **** #define __FPU_USED       0U
  77:Drivers/CMSIS/core_cm23.h **** 
  78:Drivers/CMSIS/core_cm23.h **** #if defined ( __CC_ARM )
  79:Drivers/CMSIS/core_cm23.h ****   #if defined __TARGET_FPU_VFP
  80:Drivers/CMSIS/core_cm23.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  81:Drivers/CMSIS/core_cm23.h ****   #endif
  82:Drivers/CMSIS/core_cm23.h **** 
  83:Drivers/CMSIS/core_cm23.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  84:Drivers/CMSIS/core_cm23.h ****   #if defined __ARM_PCS_VFP
  85:Drivers/CMSIS/core_cm23.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  86:Drivers/CMSIS/core_cm23.h ****   #endif
  87:Drivers/CMSIS/core_cm23.h **** 
  88:Drivers/CMSIS/core_cm23.h **** #elif defined ( __GNUC__ )
ARM GAS  D:\noval\Temp\cc0D8957.s 			page 3


  89:Drivers/CMSIS/core_cm23.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
  90:Drivers/CMSIS/core_cm23.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  91:Drivers/CMSIS/core_cm23.h ****   #endif
  92:Drivers/CMSIS/core_cm23.h **** 
  93:Drivers/CMSIS/core_cm23.h **** #elif defined ( __ICCARM__ )
  94:Drivers/CMSIS/core_cm23.h ****   #if defined __ARMVFP__
  95:Drivers/CMSIS/core_cm23.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  96:Drivers/CMSIS/core_cm23.h ****   #endif
  97:Drivers/CMSIS/core_cm23.h **** 
  98:Drivers/CMSIS/core_cm23.h **** #elif defined ( __TI_ARM__ )
  99:Drivers/CMSIS/core_cm23.h ****   #if defined __TI_VFP_SUPPORT__
 100:Drivers/CMSIS/core_cm23.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 101:Drivers/CMSIS/core_cm23.h ****   #endif
 102:Drivers/CMSIS/core_cm23.h **** 
 103:Drivers/CMSIS/core_cm23.h **** #elif defined ( __TASKING__ )
 104:Drivers/CMSIS/core_cm23.h ****   #if defined __FPU_VFP__
 105:Drivers/CMSIS/core_cm23.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 106:Drivers/CMSIS/core_cm23.h ****   #endif
 107:Drivers/CMSIS/core_cm23.h **** 
 108:Drivers/CMSIS/core_cm23.h **** #elif defined ( __CSMC__ )
 109:Drivers/CMSIS/core_cm23.h ****   #if ( __CSMC__ & 0x400U)
 110:Drivers/CMSIS/core_cm23.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 111:Drivers/CMSIS/core_cm23.h ****   #endif
 112:Drivers/CMSIS/core_cm23.h **** 
 113:Drivers/CMSIS/core_cm23.h **** #endif
 114:Drivers/CMSIS/core_cm23.h **** 
 115:Drivers/CMSIS/core_cm23.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 116:Drivers/CMSIS/core_cm23.h **** 
 117:Drivers/CMSIS/core_cm23.h **** 
 118:Drivers/CMSIS/core_cm23.h **** #ifdef __cplusplus
 119:Drivers/CMSIS/core_cm23.h **** }
 120:Drivers/CMSIS/core_cm23.h **** #endif
 121:Drivers/CMSIS/core_cm23.h **** 
 122:Drivers/CMSIS/core_cm23.h **** #endif /* __CORE_CM23_H_GENERIC */
 123:Drivers/CMSIS/core_cm23.h **** 
 124:Drivers/CMSIS/core_cm23.h **** #ifndef __CMSIS_GENERIC
 125:Drivers/CMSIS/core_cm23.h **** 
 126:Drivers/CMSIS/core_cm23.h **** #ifndef __CORE_CM23_H_DEPENDANT
 127:Drivers/CMSIS/core_cm23.h **** #define __CORE_CM23_H_DEPENDANT
 128:Drivers/CMSIS/core_cm23.h **** 
 129:Drivers/CMSIS/core_cm23.h **** #ifdef __cplusplus
 130:Drivers/CMSIS/core_cm23.h ****  extern "C" {
 131:Drivers/CMSIS/core_cm23.h **** #endif
 132:Drivers/CMSIS/core_cm23.h **** 
 133:Drivers/CMSIS/core_cm23.h **** /* check device defines and use defaults */
 134:Drivers/CMSIS/core_cm23.h **** #if defined __CHECK_DEVICE_DEFINES
 135:Drivers/CMSIS/core_cm23.h ****   #ifndef __CM23_REV
 136:Drivers/CMSIS/core_cm23.h ****     #define __CM23_REV                0x0000U
 137:Drivers/CMSIS/core_cm23.h ****     #warning "__CM23_REV not defined in device header file; using default!"
 138:Drivers/CMSIS/core_cm23.h ****   #endif
 139:Drivers/CMSIS/core_cm23.h **** 
 140:Drivers/CMSIS/core_cm23.h ****   #ifndef __FPU_PRESENT
 141:Drivers/CMSIS/core_cm23.h ****     #define __FPU_PRESENT             0U
 142:Drivers/CMSIS/core_cm23.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 143:Drivers/CMSIS/core_cm23.h ****   #endif
 144:Drivers/CMSIS/core_cm23.h **** 
 145:Drivers/CMSIS/core_cm23.h ****   #ifndef __MPU_PRESENT
ARM GAS  D:\noval\Temp\cc0D8957.s 			page 4


 146:Drivers/CMSIS/core_cm23.h ****     #define __MPU_PRESENT             0U
 147:Drivers/CMSIS/core_cm23.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 148:Drivers/CMSIS/core_cm23.h ****   #endif
 149:Drivers/CMSIS/core_cm23.h **** 
 150:Drivers/CMSIS/core_cm23.h ****   #ifndef __SAUREGION_PRESENT
 151:Drivers/CMSIS/core_cm23.h ****     #define __SAUREGION_PRESENT       0U
 152:Drivers/CMSIS/core_cm23.h ****     #warning "__SAUREGION_PRESENT not defined in device header file; using default!"
 153:Drivers/CMSIS/core_cm23.h ****   #endif
 154:Drivers/CMSIS/core_cm23.h **** 
 155:Drivers/CMSIS/core_cm23.h ****   #ifndef __VTOR_PRESENT
 156:Drivers/CMSIS/core_cm23.h ****     #define __VTOR_PRESENT            0U
 157:Drivers/CMSIS/core_cm23.h ****     #warning "__VTOR_PRESENT not defined in device header file; using default!"
 158:Drivers/CMSIS/core_cm23.h ****   #endif
 159:Drivers/CMSIS/core_cm23.h **** 
 160:Drivers/CMSIS/core_cm23.h ****   #ifndef __NVIC_PRIO_BITS
 161:Drivers/CMSIS/core_cm23.h ****     #define __NVIC_PRIO_BITS          2U
 162:Drivers/CMSIS/core_cm23.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 163:Drivers/CMSIS/core_cm23.h ****   #endif
 164:Drivers/CMSIS/core_cm23.h **** 
 165:Drivers/CMSIS/core_cm23.h ****   #ifndef __Vendor_SysTickConfig
 166:Drivers/CMSIS/core_cm23.h ****     #define __Vendor_SysTickConfig    0U
 167:Drivers/CMSIS/core_cm23.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 168:Drivers/CMSIS/core_cm23.h ****   #endif
 169:Drivers/CMSIS/core_cm23.h **** 
 170:Drivers/CMSIS/core_cm23.h ****   #ifndef __ETM_PRESENT
 171:Drivers/CMSIS/core_cm23.h ****     #define __ETM_PRESENT             0U
 172:Drivers/CMSIS/core_cm23.h ****     #warning "__ETM_PRESENT not defined in device header file; using default!"
 173:Drivers/CMSIS/core_cm23.h ****   #endif
 174:Drivers/CMSIS/core_cm23.h **** 
 175:Drivers/CMSIS/core_cm23.h ****   #ifndef __MTB_PRESENT
 176:Drivers/CMSIS/core_cm23.h ****     #define __MTB_PRESENT             0U
 177:Drivers/CMSIS/core_cm23.h ****     #warning "__MTB_PRESENT not defined in device header file; using default!"
 178:Drivers/CMSIS/core_cm23.h ****   #endif
 179:Drivers/CMSIS/core_cm23.h **** 
 180:Drivers/CMSIS/core_cm23.h **** #endif
 181:Drivers/CMSIS/core_cm23.h **** 
 182:Drivers/CMSIS/core_cm23.h **** /* IO definitions (access restrictions to peripheral registers) */
 183:Drivers/CMSIS/core_cm23.h **** /**
 184:Drivers/CMSIS/core_cm23.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 185:Drivers/CMSIS/core_cm23.h **** 
 186:Drivers/CMSIS/core_cm23.h ****     <strong>IO Type Qualifiers</strong> are used
 187:Drivers/CMSIS/core_cm23.h ****     \li to specify the access to peripheral variables.
 188:Drivers/CMSIS/core_cm23.h ****     \li for automatic generation of peripheral register debug information.
 189:Drivers/CMSIS/core_cm23.h **** */
 190:Drivers/CMSIS/core_cm23.h **** #ifdef __cplusplus
 191:Drivers/CMSIS/core_cm23.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 192:Drivers/CMSIS/core_cm23.h **** #else
 193:Drivers/CMSIS/core_cm23.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 194:Drivers/CMSIS/core_cm23.h **** #endif
 195:Drivers/CMSIS/core_cm23.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 196:Drivers/CMSIS/core_cm23.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 197:Drivers/CMSIS/core_cm23.h **** 
 198:Drivers/CMSIS/core_cm23.h **** /* following defines should be used for structure members */
 199:Drivers/CMSIS/core_cm23.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 200:Drivers/CMSIS/core_cm23.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 201:Drivers/CMSIS/core_cm23.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 202:Drivers/CMSIS/core_cm23.h **** 
ARM GAS  D:\noval\Temp\cc0D8957.s 			page 5


 203:Drivers/CMSIS/core_cm23.h **** /*@} end of group Cortex_M23 */
 204:Drivers/CMSIS/core_cm23.h **** 
 205:Drivers/CMSIS/core_cm23.h **** 
 206:Drivers/CMSIS/core_cm23.h **** 
 207:Drivers/CMSIS/core_cm23.h **** /*******************************************************************************
 208:Drivers/CMSIS/core_cm23.h ****  *                 Register Abstraction
 209:Drivers/CMSIS/core_cm23.h ****   Core Register contain:
 210:Drivers/CMSIS/core_cm23.h ****   - Core Register
 211:Drivers/CMSIS/core_cm23.h ****   - Core NVIC Register
 212:Drivers/CMSIS/core_cm23.h ****   - Core SCB Register
 213:Drivers/CMSIS/core_cm23.h ****   - Core SysTick Register
 214:Drivers/CMSIS/core_cm23.h ****   - Core Debug Register
 215:Drivers/CMSIS/core_cm23.h ****   - Core MPU Register
 216:Drivers/CMSIS/core_cm23.h ****   - Core SAU Register
 217:Drivers/CMSIS/core_cm23.h ****  ******************************************************************************/
 218:Drivers/CMSIS/core_cm23.h **** /**
 219:Drivers/CMSIS/core_cm23.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 220:Drivers/CMSIS/core_cm23.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 221:Drivers/CMSIS/core_cm23.h **** */
 222:Drivers/CMSIS/core_cm23.h **** 
 223:Drivers/CMSIS/core_cm23.h **** /**
 224:Drivers/CMSIS/core_cm23.h ****   \ingroup    CMSIS_core_register
 225:Drivers/CMSIS/core_cm23.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 226:Drivers/CMSIS/core_cm23.h ****   \brief      Core Register type definitions.
 227:Drivers/CMSIS/core_cm23.h ****   @{
 228:Drivers/CMSIS/core_cm23.h ****  */
 229:Drivers/CMSIS/core_cm23.h **** 
 230:Drivers/CMSIS/core_cm23.h **** /**
 231:Drivers/CMSIS/core_cm23.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 232:Drivers/CMSIS/core_cm23.h ****  */
 233:Drivers/CMSIS/core_cm23.h **** typedef union
 234:Drivers/CMSIS/core_cm23.h **** {
 235:Drivers/CMSIS/core_cm23.h ****   struct
 236:Drivers/CMSIS/core_cm23.h ****   {
 237:Drivers/CMSIS/core_cm23.h ****     uint32_t _reserved0:28;              /*!< bit:  0..27  Reserved */
 238:Drivers/CMSIS/core_cm23.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 239:Drivers/CMSIS/core_cm23.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 240:Drivers/CMSIS/core_cm23.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 241:Drivers/CMSIS/core_cm23.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 242:Drivers/CMSIS/core_cm23.h ****   } b;                                   /*!< Structure used for bit  access */
 243:Drivers/CMSIS/core_cm23.h ****   uint32_t w;                            /*!< Type      used for word access */
 244:Drivers/CMSIS/core_cm23.h **** } APSR_Type;
 245:Drivers/CMSIS/core_cm23.h **** 
 246:Drivers/CMSIS/core_cm23.h **** /* APSR Register Definitions */
 247:Drivers/CMSIS/core_cm23.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 248:Drivers/CMSIS/core_cm23.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 249:Drivers/CMSIS/core_cm23.h **** 
 250:Drivers/CMSIS/core_cm23.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 251:Drivers/CMSIS/core_cm23.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 252:Drivers/CMSIS/core_cm23.h **** 
 253:Drivers/CMSIS/core_cm23.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 254:Drivers/CMSIS/core_cm23.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 255:Drivers/CMSIS/core_cm23.h **** 
 256:Drivers/CMSIS/core_cm23.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 257:Drivers/CMSIS/core_cm23.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 258:Drivers/CMSIS/core_cm23.h **** 
 259:Drivers/CMSIS/core_cm23.h **** 
ARM GAS  D:\noval\Temp\cc0D8957.s 			page 6


 260:Drivers/CMSIS/core_cm23.h **** /**
 261:Drivers/CMSIS/core_cm23.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 262:Drivers/CMSIS/core_cm23.h ****  */
 263:Drivers/CMSIS/core_cm23.h **** typedef union
 264:Drivers/CMSIS/core_cm23.h **** {
 265:Drivers/CMSIS/core_cm23.h ****   struct
 266:Drivers/CMSIS/core_cm23.h ****   {
 267:Drivers/CMSIS/core_cm23.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 268:Drivers/CMSIS/core_cm23.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 269:Drivers/CMSIS/core_cm23.h ****   } b;                                   /*!< Structure used for bit  access */
 270:Drivers/CMSIS/core_cm23.h ****   uint32_t w;                            /*!< Type      used for word access */
 271:Drivers/CMSIS/core_cm23.h **** } IPSR_Type;
 272:Drivers/CMSIS/core_cm23.h **** 
 273:Drivers/CMSIS/core_cm23.h **** /* IPSR Register Definitions */
 274:Drivers/CMSIS/core_cm23.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 275:Drivers/CMSIS/core_cm23.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 276:Drivers/CMSIS/core_cm23.h **** 
 277:Drivers/CMSIS/core_cm23.h **** 
 278:Drivers/CMSIS/core_cm23.h **** /**
 279:Drivers/CMSIS/core_cm23.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 280:Drivers/CMSIS/core_cm23.h ****  */
 281:Drivers/CMSIS/core_cm23.h **** typedef union
 282:Drivers/CMSIS/core_cm23.h **** {
 283:Drivers/CMSIS/core_cm23.h ****   struct
 284:Drivers/CMSIS/core_cm23.h ****   {
 285:Drivers/CMSIS/core_cm23.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 286:Drivers/CMSIS/core_cm23.h ****     uint32_t _reserved0:15;              /*!< bit:  9..23  Reserved */
 287:Drivers/CMSIS/core_cm23.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0) */
 288:Drivers/CMSIS/core_cm23.h ****     uint32_t _reserved1:3;               /*!< bit: 25..27  Reserved */
 289:Drivers/CMSIS/core_cm23.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 290:Drivers/CMSIS/core_cm23.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 291:Drivers/CMSIS/core_cm23.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 292:Drivers/CMSIS/core_cm23.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 293:Drivers/CMSIS/core_cm23.h ****   } b;                                   /*!< Structure used for bit  access */
 294:Drivers/CMSIS/core_cm23.h ****   uint32_t w;                            /*!< Type      used for word access */
 295:Drivers/CMSIS/core_cm23.h **** } xPSR_Type;
 296:Drivers/CMSIS/core_cm23.h **** 
 297:Drivers/CMSIS/core_cm23.h **** /* xPSR Register Definitions */
 298:Drivers/CMSIS/core_cm23.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 299:Drivers/CMSIS/core_cm23.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 300:Drivers/CMSIS/core_cm23.h **** 
 301:Drivers/CMSIS/core_cm23.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 302:Drivers/CMSIS/core_cm23.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 303:Drivers/CMSIS/core_cm23.h **** 
 304:Drivers/CMSIS/core_cm23.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 305:Drivers/CMSIS/core_cm23.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 306:Drivers/CMSIS/core_cm23.h **** 
 307:Drivers/CMSIS/core_cm23.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 308:Drivers/CMSIS/core_cm23.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 309:Drivers/CMSIS/core_cm23.h **** 
 310:Drivers/CMSIS/core_cm23.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 311:Drivers/CMSIS/core_cm23.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 312:Drivers/CMSIS/core_cm23.h **** 
 313:Drivers/CMSIS/core_cm23.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 314:Drivers/CMSIS/core_cm23.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 315:Drivers/CMSIS/core_cm23.h **** 
 316:Drivers/CMSIS/core_cm23.h **** 
ARM GAS  D:\noval\Temp\cc0D8957.s 			page 7


 317:Drivers/CMSIS/core_cm23.h **** /**
 318:Drivers/CMSIS/core_cm23.h ****   \brief  Union type to access the Control Registers (CONTROL).
 319:Drivers/CMSIS/core_cm23.h ****  */
 320:Drivers/CMSIS/core_cm23.h **** typedef union
 321:Drivers/CMSIS/core_cm23.h **** {
 322:Drivers/CMSIS/core_cm23.h ****   struct
 323:Drivers/CMSIS/core_cm23.h ****   {
 324:Drivers/CMSIS/core_cm23.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 325:Drivers/CMSIS/core_cm23.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack-pointer select */
 326:Drivers/CMSIS/core_cm23.h ****     uint32_t _reserved1:30;              /*!< bit:  2..31  Reserved */
 327:Drivers/CMSIS/core_cm23.h ****   } b;                                   /*!< Structure used for bit  access */
 328:Drivers/CMSIS/core_cm23.h ****   uint32_t w;                            /*!< Type      used for word access */
 329:Drivers/CMSIS/core_cm23.h **** } CONTROL_Type;
 330:Drivers/CMSIS/core_cm23.h **** 
 331:Drivers/CMSIS/core_cm23.h **** /* CONTROL Register Definitions */
 332:Drivers/CMSIS/core_cm23.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 333:Drivers/CMSIS/core_cm23.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 334:Drivers/CMSIS/core_cm23.h **** 
 335:Drivers/CMSIS/core_cm23.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 336:Drivers/CMSIS/core_cm23.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 337:Drivers/CMSIS/core_cm23.h **** 
 338:Drivers/CMSIS/core_cm23.h **** /*@} end of group CMSIS_CORE */
 339:Drivers/CMSIS/core_cm23.h **** 
 340:Drivers/CMSIS/core_cm23.h **** 
 341:Drivers/CMSIS/core_cm23.h **** /**
 342:Drivers/CMSIS/core_cm23.h ****   \ingroup    CMSIS_core_register
 343:Drivers/CMSIS/core_cm23.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 344:Drivers/CMSIS/core_cm23.h ****   \brief      Type definitions for the NVIC Registers
 345:Drivers/CMSIS/core_cm23.h ****   @{
 346:Drivers/CMSIS/core_cm23.h ****  */
 347:Drivers/CMSIS/core_cm23.h **** 
 348:Drivers/CMSIS/core_cm23.h **** /**
 349:Drivers/CMSIS/core_cm23.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 350:Drivers/CMSIS/core_cm23.h ****  */
 351:Drivers/CMSIS/core_cm23.h **** typedef struct
 352:Drivers/CMSIS/core_cm23.h **** {
 353:Drivers/CMSIS/core_cm23.h ****   __IOM uint32_t ISER[16U];              /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 354:Drivers/CMSIS/core_cm23.h ****         uint32_t RESERVED0[16U];
 355:Drivers/CMSIS/core_cm23.h ****   __IOM uint32_t ICER[16U];              /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 356:Drivers/CMSIS/core_cm23.h ****         uint32_t RSERVED1[16U];
 357:Drivers/CMSIS/core_cm23.h ****   __IOM uint32_t ISPR[16U];              /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 358:Drivers/CMSIS/core_cm23.h ****         uint32_t RESERVED2[16U];
 359:Drivers/CMSIS/core_cm23.h ****   __IOM uint32_t ICPR[16U];              /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 360:Drivers/CMSIS/core_cm23.h ****         uint32_t RESERVED3[16U];
 361:Drivers/CMSIS/core_cm23.h ****   __IOM uint32_t IABR[16U];              /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 362:Drivers/CMSIS/core_cm23.h ****         uint32_t RESERVED4[16U];
 363:Drivers/CMSIS/core_cm23.h ****   __IOM uint32_t ITNS[16U];              /*!< Offset: 0x280 (R/W)  Interrupt Non-Secure State Regis
 364:Drivers/CMSIS/core_cm23.h ****         uint32_t RESERVED5[16U];
 365:Drivers/CMSIS/core_cm23.h ****   __IOM uint32_t IPR[124U];              /*!< Offset: 0x300 (R/W)  Interrupt Priority Register */
 366:Drivers/CMSIS/core_cm23.h **** }  NVIC_Type;
 367:Drivers/CMSIS/core_cm23.h **** 
 368:Drivers/CMSIS/core_cm23.h **** /*@} end of group CMSIS_NVIC */
 369:Drivers/CMSIS/core_cm23.h **** 
 370:Drivers/CMSIS/core_cm23.h **** 
 371:Drivers/CMSIS/core_cm23.h **** /**
 372:Drivers/CMSIS/core_cm23.h ****   \ingroup  CMSIS_core_register
 373:Drivers/CMSIS/core_cm23.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
ARM GAS  D:\noval\Temp\cc0D8957.s 			page 8


 374:Drivers/CMSIS/core_cm23.h ****   \brief    Type definitions for the System Control Block Registers
 375:Drivers/CMSIS/core_cm23.h ****   @{
 376:Drivers/CMSIS/core_cm23.h ****  */
 377:Drivers/CMSIS/core_cm23.h **** 
 378:Drivers/CMSIS/core_cm23.h **** /**
 379:Drivers/CMSIS/core_cm23.h ****   \brief  Structure type to access the System Control Block (SCB).
 380:Drivers/CMSIS/core_cm23.h ****  */
 381:Drivers/CMSIS/core_cm23.h **** typedef struct
 382:Drivers/CMSIS/core_cm23.h **** {
 383:Drivers/CMSIS/core_cm23.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 384:Drivers/CMSIS/core_cm23.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 385:Drivers/CMSIS/core_cm23.h **** #if defined (__VTOR_PRESENT) && (__VTOR_PRESENT == 1U)
 386:Drivers/CMSIS/core_cm23.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 387:Drivers/CMSIS/core_cm23.h **** #else
 388:Drivers/CMSIS/core_cm23.h ****         uint32_t RESERVED0;
 389:Drivers/CMSIS/core_cm23.h **** #endif
 390:Drivers/CMSIS/core_cm23.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 391:Drivers/CMSIS/core_cm23.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 392:Drivers/CMSIS/core_cm23.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 393:Drivers/CMSIS/core_cm23.h ****         uint32_t RESERVED1;
 394:Drivers/CMSIS/core_cm23.h ****   __IOM uint32_t SHPR[2U];               /*!< Offset: 0x01C (R/W)  System Handlers Priority Registe
 395:Drivers/CMSIS/core_cm23.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 396:Drivers/CMSIS/core_cm23.h **** } SCB_Type;
 397:Drivers/CMSIS/core_cm23.h **** 
 398:Drivers/CMSIS/core_cm23.h **** /* SCB CPUID Register Definitions */
 399:Drivers/CMSIS/core_cm23.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 400:Drivers/CMSIS/core_cm23.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 401:Drivers/CMSIS/core_cm23.h **** 
 402:Drivers/CMSIS/core_cm23.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 403:Drivers/CMSIS/core_cm23.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 404:Drivers/CMSIS/core_cm23.h **** 
 405:Drivers/CMSIS/core_cm23.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 406:Drivers/CMSIS/core_cm23.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 407:Drivers/CMSIS/core_cm23.h **** 
 408:Drivers/CMSIS/core_cm23.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 409:Drivers/CMSIS/core_cm23.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 410:Drivers/CMSIS/core_cm23.h **** 
 411:Drivers/CMSIS/core_cm23.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 412:Drivers/CMSIS/core_cm23.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 413:Drivers/CMSIS/core_cm23.h **** 
 414:Drivers/CMSIS/core_cm23.h **** /* SCB Interrupt Control State Register Definitions */
 415:Drivers/CMSIS/core_cm23.h **** #define SCB_ICSR_PENDNMISET_Pos            31U                                            /*!< SCB 
 416:Drivers/CMSIS/core_cm23.h **** #define SCB_ICSR_PENDNMISET_Msk            (1UL << SCB_ICSR_PENDNMISET_Pos)               /*!< SCB 
 417:Drivers/CMSIS/core_cm23.h **** 
 418:Drivers/CMSIS/core_cm23.h **** #define SCB_ICSR_PENDNMICLR_Pos            30U                                            /*!< SCB 
 419:Drivers/CMSIS/core_cm23.h **** #define SCB_ICSR_PENDNMICLR_Msk            (1UL << SCB_ICSR_PENDNMICLR_Pos)               /*!< SCB 
 420:Drivers/CMSIS/core_cm23.h **** 
 421:Drivers/CMSIS/core_cm23.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 422:Drivers/CMSIS/core_cm23.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 423:Drivers/CMSIS/core_cm23.h **** 
 424:Drivers/CMSIS/core_cm23.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 425:Drivers/CMSIS/core_cm23.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 426:Drivers/CMSIS/core_cm23.h **** 
 427:Drivers/CMSIS/core_cm23.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 428:Drivers/CMSIS/core_cm23.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 429:Drivers/CMSIS/core_cm23.h **** 
 430:Drivers/CMSIS/core_cm23.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
ARM GAS  D:\noval\Temp\cc0D8957.s 			page 9


 431:Drivers/CMSIS/core_cm23.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 432:Drivers/CMSIS/core_cm23.h **** 
 433:Drivers/CMSIS/core_cm23.h **** #define SCB_ICSR_STTNS_Pos                 24U                                            /*!< SCB 
 434:Drivers/CMSIS/core_cm23.h **** #define SCB_ICSR_STTNS_Msk                 (1UL << SCB_ICSR_STTNS_Pos)                    /*!< SCB 
 435:Drivers/CMSIS/core_cm23.h **** 
 436:Drivers/CMSIS/core_cm23.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 437:Drivers/CMSIS/core_cm23.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 438:Drivers/CMSIS/core_cm23.h **** 
 439:Drivers/CMSIS/core_cm23.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 440:Drivers/CMSIS/core_cm23.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 441:Drivers/CMSIS/core_cm23.h **** 
 442:Drivers/CMSIS/core_cm23.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 443:Drivers/CMSIS/core_cm23.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 444:Drivers/CMSIS/core_cm23.h **** 
 445:Drivers/CMSIS/core_cm23.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 446:Drivers/CMSIS/core_cm23.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 447:Drivers/CMSIS/core_cm23.h **** 
 448:Drivers/CMSIS/core_cm23.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 449:Drivers/CMSIS/core_cm23.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 450:Drivers/CMSIS/core_cm23.h **** 
 451:Drivers/CMSIS/core_cm23.h **** #if defined (__VTOR_PRESENT) && (__VTOR_PRESENT == 1U)
 452:Drivers/CMSIS/core_cm23.h **** /* SCB Vector Table Offset Register Definitions */
 453:Drivers/CMSIS/core_cm23.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 454:Drivers/CMSIS/core_cm23.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 455:Drivers/CMSIS/core_cm23.h **** #endif
 456:Drivers/CMSIS/core_cm23.h **** 
 457:Drivers/CMSIS/core_cm23.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 458:Drivers/CMSIS/core_cm23.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 459:Drivers/CMSIS/core_cm23.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 460:Drivers/CMSIS/core_cm23.h **** 
 461:Drivers/CMSIS/core_cm23.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 462:Drivers/CMSIS/core_cm23.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 463:Drivers/CMSIS/core_cm23.h **** 
 464:Drivers/CMSIS/core_cm23.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 465:Drivers/CMSIS/core_cm23.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 466:Drivers/CMSIS/core_cm23.h **** 
 467:Drivers/CMSIS/core_cm23.h **** #define SCB_AIRCR_PRIS_Pos                 14U                                            /*!< SCB 
 468:Drivers/CMSIS/core_cm23.h **** #define SCB_AIRCR_PRIS_Msk                 (1UL << SCB_AIRCR_PRIS_Pos)                    /*!< SCB 
 469:Drivers/CMSIS/core_cm23.h **** 
 470:Drivers/CMSIS/core_cm23.h **** #define SCB_AIRCR_BFHFNMINS_Pos            13U                                            /*!< SCB 
 471:Drivers/CMSIS/core_cm23.h **** #define SCB_AIRCR_BFHFNMINS_Msk            (1UL << SCB_AIRCR_BFHFNMINS_Pos)               /*!< SCB 
 472:Drivers/CMSIS/core_cm23.h **** 
 473:Drivers/CMSIS/core_cm23.h **** #define SCB_AIRCR_SYSRESETREQS_Pos          3U                                            /*!< SCB 
 474:Drivers/CMSIS/core_cm23.h **** #define SCB_AIRCR_SYSRESETREQS_Msk         (1UL << SCB_AIRCR_SYSRESETREQS_Pos)            /*!< SCB 
 475:Drivers/CMSIS/core_cm23.h **** 
 476:Drivers/CMSIS/core_cm23.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 477:Drivers/CMSIS/core_cm23.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 478:Drivers/CMSIS/core_cm23.h **** 
 479:Drivers/CMSIS/core_cm23.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 480:Drivers/CMSIS/core_cm23.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 481:Drivers/CMSIS/core_cm23.h **** 
 482:Drivers/CMSIS/core_cm23.h **** /* SCB System Control Register Definitions */
 483:Drivers/CMSIS/core_cm23.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 484:Drivers/CMSIS/core_cm23.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 485:Drivers/CMSIS/core_cm23.h **** 
 486:Drivers/CMSIS/core_cm23.h **** #define SCB_SCR_SLEEPDEEPS_Pos              3U                                            /*!< SCB 
 487:Drivers/CMSIS/core_cm23.h **** #define SCB_SCR_SLEEPDEEPS_Msk             (1UL << SCB_SCR_SLEEPDEEPS_Pos)                /*!< SCB 
ARM GAS  D:\noval\Temp\cc0D8957.s 			page 10


 488:Drivers/CMSIS/core_cm23.h **** 
 489:Drivers/CMSIS/core_cm23.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 490:Drivers/CMSIS/core_cm23.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 491:Drivers/CMSIS/core_cm23.h **** 
 492:Drivers/CMSIS/core_cm23.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 493:Drivers/CMSIS/core_cm23.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 494:Drivers/CMSIS/core_cm23.h **** 
 495:Drivers/CMSIS/core_cm23.h **** /* SCB Configuration Control Register Definitions */
 496:Drivers/CMSIS/core_cm23.h **** #define SCB_CCR_BP_Pos                     18U                                            /*!< SCB 
 497:Drivers/CMSIS/core_cm23.h **** #define SCB_CCR_BP_Msk                     (1UL << SCB_CCR_BP_Pos)                        /*!< SCB 
 498:Drivers/CMSIS/core_cm23.h **** 
 499:Drivers/CMSIS/core_cm23.h **** #define SCB_CCR_IC_Pos                     17U                                            /*!< SCB 
 500:Drivers/CMSIS/core_cm23.h **** #define SCB_CCR_IC_Msk                     (1UL << SCB_CCR_IC_Pos)                        /*!< SCB 
 501:Drivers/CMSIS/core_cm23.h **** 
 502:Drivers/CMSIS/core_cm23.h **** #define SCB_CCR_DC_Pos                     16U                                            /*!< SCB 
 503:Drivers/CMSIS/core_cm23.h **** #define SCB_CCR_DC_Msk                     (1UL << SCB_CCR_DC_Pos)                        /*!< SCB 
 504:Drivers/CMSIS/core_cm23.h **** 
 505:Drivers/CMSIS/core_cm23.h **** #define SCB_CCR_STKOFHFNMIGN_Pos           10U                                            /*!< SCB 
 506:Drivers/CMSIS/core_cm23.h **** #define SCB_CCR_STKOFHFNMIGN_Msk           (1UL << SCB_CCR_STKOFHFNMIGN_Pos)              /*!< SCB 
 507:Drivers/CMSIS/core_cm23.h **** 
 508:Drivers/CMSIS/core_cm23.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 509:Drivers/CMSIS/core_cm23.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 510:Drivers/CMSIS/core_cm23.h **** 
 511:Drivers/CMSIS/core_cm23.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 512:Drivers/CMSIS/core_cm23.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 513:Drivers/CMSIS/core_cm23.h **** 
 514:Drivers/CMSIS/core_cm23.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 515:Drivers/CMSIS/core_cm23.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 516:Drivers/CMSIS/core_cm23.h **** 
 517:Drivers/CMSIS/core_cm23.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 518:Drivers/CMSIS/core_cm23.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 519:Drivers/CMSIS/core_cm23.h **** 
 520:Drivers/CMSIS/core_cm23.h **** /* SCB System Handler Control and State Register Definitions */
 521:Drivers/CMSIS/core_cm23.h **** #define SCB_SHCSR_HARDFAULTPENDED_Pos      21U                                            /*!< SCB 
 522:Drivers/CMSIS/core_cm23.h **** #define SCB_SHCSR_HARDFAULTPENDED_Msk      (1UL << SCB_SHCSR_HARDFAULTPENDED_Pos)         /*!< SCB 
 523:Drivers/CMSIS/core_cm23.h **** 
 524:Drivers/CMSIS/core_cm23.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 525:Drivers/CMSIS/core_cm23.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 526:Drivers/CMSIS/core_cm23.h **** 
 527:Drivers/CMSIS/core_cm23.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 528:Drivers/CMSIS/core_cm23.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 529:Drivers/CMSIS/core_cm23.h **** 
 530:Drivers/CMSIS/core_cm23.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 531:Drivers/CMSIS/core_cm23.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 532:Drivers/CMSIS/core_cm23.h **** 
 533:Drivers/CMSIS/core_cm23.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 534:Drivers/CMSIS/core_cm23.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 535:Drivers/CMSIS/core_cm23.h **** 
 536:Drivers/CMSIS/core_cm23.h **** #define SCB_SHCSR_NMIACT_Pos                5U                                            /*!< SCB 
 537:Drivers/CMSIS/core_cm23.h **** #define SCB_SHCSR_NMIACT_Msk               (1UL << SCB_SHCSR_NMIACT_Pos)                  /*!< SCB 
 538:Drivers/CMSIS/core_cm23.h **** 
 539:Drivers/CMSIS/core_cm23.h **** #define SCB_SHCSR_HARDFAULTACT_Pos          2U                                            /*!< SCB 
 540:Drivers/CMSIS/core_cm23.h **** #define SCB_SHCSR_HARDFAULTACT_Msk         (1UL << SCB_SHCSR_HARDFAULTACT_Pos)            /*!< SCB 
 541:Drivers/CMSIS/core_cm23.h **** 
 542:Drivers/CMSIS/core_cm23.h **** /*@} end of group CMSIS_SCB */
 543:Drivers/CMSIS/core_cm23.h **** 
 544:Drivers/CMSIS/core_cm23.h **** 
ARM GAS  D:\noval\Temp\cc0D8957.s 			page 11


 545:Drivers/CMSIS/core_cm23.h **** /**
 546:Drivers/CMSIS/core_cm23.h ****   \ingroup  CMSIS_core_register
 547:Drivers/CMSIS/core_cm23.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 548:Drivers/CMSIS/core_cm23.h ****   \brief    Type definitions for the System Timer Registers.
 549:Drivers/CMSIS/core_cm23.h ****   @{
 550:Drivers/CMSIS/core_cm23.h ****  */
 551:Drivers/CMSIS/core_cm23.h **** 
 552:Drivers/CMSIS/core_cm23.h **** /**
 553:Drivers/CMSIS/core_cm23.h ****   \brief  Structure type to access the System Timer (SysTick).
 554:Drivers/CMSIS/core_cm23.h ****  */
 555:Drivers/CMSIS/core_cm23.h **** typedef struct
 556:Drivers/CMSIS/core_cm23.h **** {
 557:Drivers/CMSIS/core_cm23.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 558:Drivers/CMSIS/core_cm23.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 559:Drivers/CMSIS/core_cm23.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 560:Drivers/CMSIS/core_cm23.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 561:Drivers/CMSIS/core_cm23.h **** } SysTick_Type;
 562:Drivers/CMSIS/core_cm23.h **** 
 563:Drivers/CMSIS/core_cm23.h **** /* SysTick Control / Status Register Definitions */
 564:Drivers/CMSIS/core_cm23.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 565:Drivers/CMSIS/core_cm23.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 566:Drivers/CMSIS/core_cm23.h **** 
 567:Drivers/CMSIS/core_cm23.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 568:Drivers/CMSIS/core_cm23.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 569:Drivers/CMSIS/core_cm23.h **** 
 570:Drivers/CMSIS/core_cm23.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 571:Drivers/CMSIS/core_cm23.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 572:Drivers/CMSIS/core_cm23.h **** 
 573:Drivers/CMSIS/core_cm23.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 574:Drivers/CMSIS/core_cm23.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 575:Drivers/CMSIS/core_cm23.h **** 
 576:Drivers/CMSIS/core_cm23.h **** /* SysTick Reload Register Definitions */
 577:Drivers/CMSIS/core_cm23.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 578:Drivers/CMSIS/core_cm23.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 579:Drivers/CMSIS/core_cm23.h **** 
 580:Drivers/CMSIS/core_cm23.h **** /* SysTick Current Register Definitions */
 581:Drivers/CMSIS/core_cm23.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 582:Drivers/CMSIS/core_cm23.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 583:Drivers/CMSIS/core_cm23.h **** 
 584:Drivers/CMSIS/core_cm23.h **** /* SysTick Calibration Register Definitions */
 585:Drivers/CMSIS/core_cm23.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 586:Drivers/CMSIS/core_cm23.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 587:Drivers/CMSIS/core_cm23.h **** 
 588:Drivers/CMSIS/core_cm23.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 589:Drivers/CMSIS/core_cm23.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 590:Drivers/CMSIS/core_cm23.h **** 
 591:Drivers/CMSIS/core_cm23.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 592:Drivers/CMSIS/core_cm23.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 593:Drivers/CMSIS/core_cm23.h **** 
 594:Drivers/CMSIS/core_cm23.h **** /*@} end of group CMSIS_SysTick */
 595:Drivers/CMSIS/core_cm23.h **** 
 596:Drivers/CMSIS/core_cm23.h **** 
 597:Drivers/CMSIS/core_cm23.h **** /**
 598:Drivers/CMSIS/core_cm23.h ****   \ingroup  CMSIS_core_register
 599:Drivers/CMSIS/core_cm23.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 600:Drivers/CMSIS/core_cm23.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 601:Drivers/CMSIS/core_cm23.h ****   @{
ARM GAS  D:\noval\Temp\cc0D8957.s 			page 12


 602:Drivers/CMSIS/core_cm23.h ****  */
 603:Drivers/CMSIS/core_cm23.h **** 
 604:Drivers/CMSIS/core_cm23.h **** /**
 605:Drivers/CMSIS/core_cm23.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 606:Drivers/CMSIS/core_cm23.h ****  */
 607:Drivers/CMSIS/core_cm23.h **** typedef struct
 608:Drivers/CMSIS/core_cm23.h **** {
 609:Drivers/CMSIS/core_cm23.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 610:Drivers/CMSIS/core_cm23.h ****         uint32_t RESERVED0[6U];
 611:Drivers/CMSIS/core_cm23.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 612:Drivers/CMSIS/core_cm23.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 613:Drivers/CMSIS/core_cm23.h ****         uint32_t RESERVED1[1U];
 614:Drivers/CMSIS/core_cm23.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 615:Drivers/CMSIS/core_cm23.h ****         uint32_t RESERVED2[1U];
 616:Drivers/CMSIS/core_cm23.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 617:Drivers/CMSIS/core_cm23.h ****         uint32_t RESERVED3[1U];
 618:Drivers/CMSIS/core_cm23.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 619:Drivers/CMSIS/core_cm23.h ****         uint32_t RESERVED4[1U];
 620:Drivers/CMSIS/core_cm23.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 621:Drivers/CMSIS/core_cm23.h ****         uint32_t RESERVED5[1U];
 622:Drivers/CMSIS/core_cm23.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 623:Drivers/CMSIS/core_cm23.h ****         uint32_t RESERVED6[1U];
 624:Drivers/CMSIS/core_cm23.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 625:Drivers/CMSIS/core_cm23.h ****         uint32_t RESERVED7[1U];
 626:Drivers/CMSIS/core_cm23.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 627:Drivers/CMSIS/core_cm23.h ****         uint32_t RESERVED8[1U];
 628:Drivers/CMSIS/core_cm23.h ****   __IOM uint32_t COMP4;                  /*!< Offset: 0x060 (R/W)  Comparator Register 4 */
 629:Drivers/CMSIS/core_cm23.h ****         uint32_t RESERVED9[1U];
 630:Drivers/CMSIS/core_cm23.h ****   __IOM uint32_t FUNCTION4;              /*!< Offset: 0x068 (R/W)  Function Register 4 */
 631:Drivers/CMSIS/core_cm23.h ****         uint32_t RESERVED10[1U];
 632:Drivers/CMSIS/core_cm23.h ****   __IOM uint32_t COMP5;                  /*!< Offset: 0x070 (R/W)  Comparator Register 5 */
 633:Drivers/CMSIS/core_cm23.h ****         uint32_t RESERVED11[1U];
 634:Drivers/CMSIS/core_cm23.h ****   __IOM uint32_t FUNCTION5;              /*!< Offset: 0x078 (R/W)  Function Register 5 */
 635:Drivers/CMSIS/core_cm23.h ****         uint32_t RESERVED12[1U];
 636:Drivers/CMSIS/core_cm23.h ****   __IOM uint32_t COMP6;                  /*!< Offset: 0x080 (R/W)  Comparator Register 6 */
 637:Drivers/CMSIS/core_cm23.h ****         uint32_t RESERVED13[1U];
 638:Drivers/CMSIS/core_cm23.h ****   __IOM uint32_t FUNCTION6;              /*!< Offset: 0x088 (R/W)  Function Register 6 */
 639:Drivers/CMSIS/core_cm23.h ****         uint32_t RESERVED14[1U];
 640:Drivers/CMSIS/core_cm23.h ****   __IOM uint32_t COMP7;                  /*!< Offset: 0x090 (R/W)  Comparator Register 7 */
 641:Drivers/CMSIS/core_cm23.h ****         uint32_t RESERVED15[1U];
 642:Drivers/CMSIS/core_cm23.h ****   __IOM uint32_t FUNCTION7;              /*!< Offset: 0x098 (R/W)  Function Register 7 */
 643:Drivers/CMSIS/core_cm23.h ****         uint32_t RESERVED16[1U];
 644:Drivers/CMSIS/core_cm23.h ****   __IOM uint32_t COMP8;                  /*!< Offset: 0x0A0 (R/W)  Comparator Register 8 */
 645:Drivers/CMSIS/core_cm23.h ****         uint32_t RESERVED17[1U];
 646:Drivers/CMSIS/core_cm23.h ****   __IOM uint32_t FUNCTION8;              /*!< Offset: 0x0A8 (R/W)  Function Register 8 */
 647:Drivers/CMSIS/core_cm23.h ****         uint32_t RESERVED18[1U];
 648:Drivers/CMSIS/core_cm23.h ****   __IOM uint32_t COMP9;                  /*!< Offset: 0x0B0 (R/W)  Comparator Register 9 */
 649:Drivers/CMSIS/core_cm23.h ****         uint32_t RESERVED19[1U];
 650:Drivers/CMSIS/core_cm23.h ****   __IOM uint32_t FUNCTION9;              /*!< Offset: 0x0B8 (R/W)  Function Register 9 */
 651:Drivers/CMSIS/core_cm23.h ****         uint32_t RESERVED20[1U];
 652:Drivers/CMSIS/core_cm23.h ****   __IOM uint32_t COMP10;                 /*!< Offset: 0x0C0 (R/W)  Comparator Register 10 */
 653:Drivers/CMSIS/core_cm23.h ****         uint32_t RESERVED21[1U];
 654:Drivers/CMSIS/core_cm23.h ****   __IOM uint32_t FUNCTION10;             /*!< Offset: 0x0C8 (R/W)  Function Register 10 */
 655:Drivers/CMSIS/core_cm23.h ****         uint32_t RESERVED22[1U];
 656:Drivers/CMSIS/core_cm23.h ****   __IOM uint32_t COMP11;                 /*!< Offset: 0x0D0 (R/W)  Comparator Register 11 */
 657:Drivers/CMSIS/core_cm23.h ****         uint32_t RESERVED23[1U];
 658:Drivers/CMSIS/core_cm23.h ****   __IOM uint32_t FUNCTION11;             /*!< Offset: 0x0D8 (R/W)  Function Register 11 */
ARM GAS  D:\noval\Temp\cc0D8957.s 			page 13


 659:Drivers/CMSIS/core_cm23.h ****         uint32_t RESERVED24[1U];
 660:Drivers/CMSIS/core_cm23.h ****   __IOM uint32_t COMP12;                 /*!< Offset: 0x0E0 (R/W)  Comparator Register 12 */
 661:Drivers/CMSIS/core_cm23.h ****         uint32_t RESERVED25[1U];
 662:Drivers/CMSIS/core_cm23.h ****   __IOM uint32_t FUNCTION12;             /*!< Offset: 0x0E8 (R/W)  Function Register 12 */
 663:Drivers/CMSIS/core_cm23.h ****         uint32_t RESERVED26[1U];
 664:Drivers/CMSIS/core_cm23.h ****   __IOM uint32_t COMP13;                 /*!< Offset: 0x0F0 (R/W)  Comparator Register 13 */
 665:Drivers/CMSIS/core_cm23.h ****         uint32_t RESERVED27[1U];
 666:Drivers/CMSIS/core_cm23.h ****   __IOM uint32_t FUNCTION13;             /*!< Offset: 0x0F8 (R/W)  Function Register 13 */
 667:Drivers/CMSIS/core_cm23.h ****         uint32_t RESERVED28[1U];
 668:Drivers/CMSIS/core_cm23.h ****   __IOM uint32_t COMP14;                 /*!< Offset: 0x100 (R/W)  Comparator Register 14 */
 669:Drivers/CMSIS/core_cm23.h ****         uint32_t RESERVED29[1U];
 670:Drivers/CMSIS/core_cm23.h ****   __IOM uint32_t FUNCTION14;             /*!< Offset: 0x108 (R/W)  Function Register 14 */
 671:Drivers/CMSIS/core_cm23.h ****         uint32_t RESERVED30[1U];
 672:Drivers/CMSIS/core_cm23.h ****   __IOM uint32_t COMP15;                 /*!< Offset: 0x110 (R/W)  Comparator Register 15 */
 673:Drivers/CMSIS/core_cm23.h ****         uint32_t RESERVED31[1U];
 674:Drivers/CMSIS/core_cm23.h ****   __IOM uint32_t FUNCTION15;             /*!< Offset: 0x118 (R/W)  Function Register 15 */
 675:Drivers/CMSIS/core_cm23.h **** } DWT_Type;
 676:Drivers/CMSIS/core_cm23.h **** 
 677:Drivers/CMSIS/core_cm23.h **** /* DWT Control Register Definitions */
 678:Drivers/CMSIS/core_cm23.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 679:Drivers/CMSIS/core_cm23.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 680:Drivers/CMSIS/core_cm23.h **** 
 681:Drivers/CMSIS/core_cm23.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 682:Drivers/CMSIS/core_cm23.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 683:Drivers/CMSIS/core_cm23.h **** 
 684:Drivers/CMSIS/core_cm23.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 685:Drivers/CMSIS/core_cm23.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 686:Drivers/CMSIS/core_cm23.h **** 
 687:Drivers/CMSIS/core_cm23.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 688:Drivers/CMSIS/core_cm23.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 689:Drivers/CMSIS/core_cm23.h **** 
 690:Drivers/CMSIS/core_cm23.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 691:Drivers/CMSIS/core_cm23.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 692:Drivers/CMSIS/core_cm23.h **** 
 693:Drivers/CMSIS/core_cm23.h **** /* DWT Comparator Function Register Definitions */
 694:Drivers/CMSIS/core_cm23.h **** #define DWT_FUNCTION_ID_Pos                27U                                         /*!< DWT FUN
 695:Drivers/CMSIS/core_cm23.h **** #define DWT_FUNCTION_ID_Msk                (0x1FUL << DWT_FUNCTION_ID_Pos)             /*!< DWT FUN
 696:Drivers/CMSIS/core_cm23.h **** 
 697:Drivers/CMSIS/core_cm23.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
 698:Drivers/CMSIS/core_cm23.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
 699:Drivers/CMSIS/core_cm23.h **** 
 700:Drivers/CMSIS/core_cm23.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
 701:Drivers/CMSIS/core_cm23.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
 702:Drivers/CMSIS/core_cm23.h **** 
 703:Drivers/CMSIS/core_cm23.h **** #define DWT_FUNCTION_ACTION_Pos             4U                                         /*!< DWT FUN
 704:Drivers/CMSIS/core_cm23.h **** #define DWT_FUNCTION_ACTION_Msk            (0x3UL << DWT_FUNCTION_ACTION_Pos)          /*!< DWT FUN
 705:Drivers/CMSIS/core_cm23.h **** 
 706:Drivers/CMSIS/core_cm23.h **** #define DWT_FUNCTION_MATCH_Pos              0U                                         /*!< DWT FUN
 707:Drivers/CMSIS/core_cm23.h **** #define DWT_FUNCTION_MATCH_Msk             (0xFUL /*<< DWT_FUNCTION_MATCH_Pos*/)       /*!< DWT FUN
 708:Drivers/CMSIS/core_cm23.h **** 
 709:Drivers/CMSIS/core_cm23.h **** /*@}*/ /* end of group CMSIS_DWT */
 710:Drivers/CMSIS/core_cm23.h **** 
 711:Drivers/CMSIS/core_cm23.h **** 
 712:Drivers/CMSIS/core_cm23.h **** /**
 713:Drivers/CMSIS/core_cm23.h ****   \ingroup  CMSIS_core_register
 714:Drivers/CMSIS/core_cm23.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
 715:Drivers/CMSIS/core_cm23.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
ARM GAS  D:\noval\Temp\cc0D8957.s 			page 14


 716:Drivers/CMSIS/core_cm23.h ****   @{
 717:Drivers/CMSIS/core_cm23.h ****  */
 718:Drivers/CMSIS/core_cm23.h **** 
 719:Drivers/CMSIS/core_cm23.h **** /**
 720:Drivers/CMSIS/core_cm23.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
 721:Drivers/CMSIS/core_cm23.h ****  */
 722:Drivers/CMSIS/core_cm23.h **** typedef struct
 723:Drivers/CMSIS/core_cm23.h **** {
 724:Drivers/CMSIS/core_cm23.h ****   __IOM uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
 725:Drivers/CMSIS/core_cm23.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
 726:Drivers/CMSIS/core_cm23.h ****         uint32_t RESERVED0[2U];
 727:Drivers/CMSIS/core_cm23.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
 728:Drivers/CMSIS/core_cm23.h ****         uint32_t RESERVED1[55U];
 729:Drivers/CMSIS/core_cm23.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
 730:Drivers/CMSIS/core_cm23.h ****         uint32_t RESERVED2[131U];
 731:Drivers/CMSIS/core_cm23.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
 732:Drivers/CMSIS/core_cm23.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
 733:Drivers/CMSIS/core_cm23.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
 734:Drivers/CMSIS/core_cm23.h ****         uint32_t RESERVED3[759U];
 735:Drivers/CMSIS/core_cm23.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER */
 736:Drivers/CMSIS/core_cm23.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
 737:Drivers/CMSIS/core_cm23.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
 738:Drivers/CMSIS/core_cm23.h ****         uint32_t RESERVED4[1U];
 739:Drivers/CMSIS/core_cm23.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
 740:Drivers/CMSIS/core_cm23.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
 741:Drivers/CMSIS/core_cm23.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
 742:Drivers/CMSIS/core_cm23.h ****         uint32_t RESERVED5[39U];
 743:Drivers/CMSIS/core_cm23.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
 744:Drivers/CMSIS/core_cm23.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
 745:Drivers/CMSIS/core_cm23.h ****         uint32_t RESERVED7[8U];
 746:Drivers/CMSIS/core_cm23.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
 747:Drivers/CMSIS/core_cm23.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
 748:Drivers/CMSIS/core_cm23.h **** } TPI_Type;
 749:Drivers/CMSIS/core_cm23.h **** 
 750:Drivers/CMSIS/core_cm23.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
 751:Drivers/CMSIS/core_cm23.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< @Deprec
 752:Drivers/CMSIS/core_cm23.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< @Deprec
 753:Drivers/CMSIS/core_cm23.h **** 
 754:Drivers/CMSIS/core_cm23.h **** #define TPI_ACPR_SWOSCALER_Pos              0U                                         /*!< TPI ACP
 755:Drivers/CMSIS/core_cm23.h **** #define TPI_ACPR_SWOSCALER_Msk             (0xFFFFUL /*<< TPI_ACPR_SWOSCALER_Pos*/)    /*!< TPI ACP
 756:Drivers/CMSIS/core_cm23.h **** 
 757:Drivers/CMSIS/core_cm23.h **** /* TPI Selected Pin Protocol Register Definitions */
 758:Drivers/CMSIS/core_cm23.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
 759:Drivers/CMSIS/core_cm23.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
 760:Drivers/CMSIS/core_cm23.h **** 
 761:Drivers/CMSIS/core_cm23.h **** /* TPI Formatter and Flush Status Register Definitions */
 762:Drivers/CMSIS/core_cm23.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
 763:Drivers/CMSIS/core_cm23.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
 764:Drivers/CMSIS/core_cm23.h **** 
 765:Drivers/CMSIS/core_cm23.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
 766:Drivers/CMSIS/core_cm23.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
 767:Drivers/CMSIS/core_cm23.h **** 
 768:Drivers/CMSIS/core_cm23.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
 769:Drivers/CMSIS/core_cm23.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
 770:Drivers/CMSIS/core_cm23.h **** 
 771:Drivers/CMSIS/core_cm23.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
 772:Drivers/CMSIS/core_cm23.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
ARM GAS  D:\noval\Temp\cc0D8957.s 			page 15


 773:Drivers/CMSIS/core_cm23.h **** 
 774:Drivers/CMSIS/core_cm23.h **** /* TPI Formatter and Flush Control Register Definitions */
 775:Drivers/CMSIS/core_cm23.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
 776:Drivers/CMSIS/core_cm23.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
 777:Drivers/CMSIS/core_cm23.h **** 
 778:Drivers/CMSIS/core_cm23.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
 779:Drivers/CMSIS/core_cm23.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
 780:Drivers/CMSIS/core_cm23.h **** 
 781:Drivers/CMSIS/core_cm23.h **** /* TPI TRIGGER Register Definitions */
 782:Drivers/CMSIS/core_cm23.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
 783:Drivers/CMSIS/core_cm23.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
 784:Drivers/CMSIS/core_cm23.h **** 
 785:Drivers/CMSIS/core_cm23.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
 786:Drivers/CMSIS/core_cm23.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
 787:Drivers/CMSIS/core_cm23.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
 788:Drivers/CMSIS/core_cm23.h **** 
 789:Drivers/CMSIS/core_cm23.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
 790:Drivers/CMSIS/core_cm23.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
 791:Drivers/CMSIS/core_cm23.h **** 
 792:Drivers/CMSIS/core_cm23.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
 793:Drivers/CMSIS/core_cm23.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
 794:Drivers/CMSIS/core_cm23.h **** 
 795:Drivers/CMSIS/core_cm23.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
 796:Drivers/CMSIS/core_cm23.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
 797:Drivers/CMSIS/core_cm23.h **** 
 798:Drivers/CMSIS/core_cm23.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
 799:Drivers/CMSIS/core_cm23.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
 800:Drivers/CMSIS/core_cm23.h **** 
 801:Drivers/CMSIS/core_cm23.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
 802:Drivers/CMSIS/core_cm23.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
 803:Drivers/CMSIS/core_cm23.h **** 
 804:Drivers/CMSIS/core_cm23.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
 805:Drivers/CMSIS/core_cm23.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
 806:Drivers/CMSIS/core_cm23.h **** 
 807:Drivers/CMSIS/core_cm23.h **** /* TPI ITATBCTR2 Register Definitions */
 808:Drivers/CMSIS/core_cm23.h **** #define TPI_ITATBCTR2_ATREADY_Pos           0U                                         /*!< TPI ITA
 809:Drivers/CMSIS/core_cm23.h **** #define TPI_ITATBCTR2_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR2_ATREADY_Pos*/)    /*!< TPI ITA
 810:Drivers/CMSIS/core_cm23.h **** 
 811:Drivers/CMSIS/core_cm23.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
 812:Drivers/CMSIS/core_cm23.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
 813:Drivers/CMSIS/core_cm23.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
 814:Drivers/CMSIS/core_cm23.h **** 
 815:Drivers/CMSIS/core_cm23.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
 816:Drivers/CMSIS/core_cm23.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
 817:Drivers/CMSIS/core_cm23.h **** 
 818:Drivers/CMSIS/core_cm23.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
 819:Drivers/CMSIS/core_cm23.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
 820:Drivers/CMSIS/core_cm23.h **** 
 821:Drivers/CMSIS/core_cm23.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
 822:Drivers/CMSIS/core_cm23.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
 823:Drivers/CMSIS/core_cm23.h **** 
 824:Drivers/CMSIS/core_cm23.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
 825:Drivers/CMSIS/core_cm23.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
 826:Drivers/CMSIS/core_cm23.h **** 
 827:Drivers/CMSIS/core_cm23.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
 828:Drivers/CMSIS/core_cm23.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
 829:Drivers/CMSIS/core_cm23.h **** 
ARM GAS  D:\noval\Temp\cc0D8957.s 			page 16


 830:Drivers/CMSIS/core_cm23.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
 831:Drivers/CMSIS/core_cm23.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
 832:Drivers/CMSIS/core_cm23.h **** 
 833:Drivers/CMSIS/core_cm23.h **** /* TPI ITATBCTR0 Register Definitions */
 834:Drivers/CMSIS/core_cm23.h **** #define TPI_ITATBCTR0_ATREADY_Pos           0U                                         /*!< TPI ITA
 835:Drivers/CMSIS/core_cm23.h **** #define TPI_ITATBCTR0_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR0_ATREADY_Pos*/)    /*!< TPI ITA
 836:Drivers/CMSIS/core_cm23.h **** 
 837:Drivers/CMSIS/core_cm23.h **** /* TPI Integration Mode Control Register Definitions */
 838:Drivers/CMSIS/core_cm23.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
 839:Drivers/CMSIS/core_cm23.h **** #define TPI_ITCTRL_Mode_Msk                (0x1UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
 840:Drivers/CMSIS/core_cm23.h **** 
 841:Drivers/CMSIS/core_cm23.h **** /* TPI DEVID Register Definitions */
 842:Drivers/CMSIS/core_cm23.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
 843:Drivers/CMSIS/core_cm23.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
 844:Drivers/CMSIS/core_cm23.h **** 
 845:Drivers/CMSIS/core_cm23.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
 846:Drivers/CMSIS/core_cm23.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
 847:Drivers/CMSIS/core_cm23.h **** 
 848:Drivers/CMSIS/core_cm23.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
 849:Drivers/CMSIS/core_cm23.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
 850:Drivers/CMSIS/core_cm23.h **** 
 851:Drivers/CMSIS/core_cm23.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
 852:Drivers/CMSIS/core_cm23.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
 853:Drivers/CMSIS/core_cm23.h **** 
 854:Drivers/CMSIS/core_cm23.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
 855:Drivers/CMSIS/core_cm23.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
 856:Drivers/CMSIS/core_cm23.h **** 
 857:Drivers/CMSIS/core_cm23.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
 858:Drivers/CMSIS/core_cm23.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
 859:Drivers/CMSIS/core_cm23.h **** 
 860:Drivers/CMSIS/core_cm23.h **** /* TPI DEVTYPE Register Definitions */
 861:Drivers/CMSIS/core_cm23.h **** #define TPI_DEVTYPE_MajorType_Pos           4U                                         /*!< TPI DEV
 862:Drivers/CMSIS/core_cm23.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
 863:Drivers/CMSIS/core_cm23.h **** 
 864:Drivers/CMSIS/core_cm23.h **** #define TPI_DEVTYPE_SubType_Pos             0U                                         /*!< TPI DEV
 865:Drivers/CMSIS/core_cm23.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
 866:Drivers/CMSIS/core_cm23.h **** 
 867:Drivers/CMSIS/core_cm23.h **** /*@}*/ /* end of group CMSIS_TPI */
 868:Drivers/CMSIS/core_cm23.h **** 
 869:Drivers/CMSIS/core_cm23.h **** 
 870:Drivers/CMSIS/core_cm23.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
 871:Drivers/CMSIS/core_cm23.h **** /**
 872:Drivers/CMSIS/core_cm23.h ****   \ingroup  CMSIS_core_register
 873:Drivers/CMSIS/core_cm23.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
 874:Drivers/CMSIS/core_cm23.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
 875:Drivers/CMSIS/core_cm23.h ****   @{
 876:Drivers/CMSIS/core_cm23.h ****  */
 877:Drivers/CMSIS/core_cm23.h **** 
 878:Drivers/CMSIS/core_cm23.h **** /**
 879:Drivers/CMSIS/core_cm23.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
 880:Drivers/CMSIS/core_cm23.h ****  */
 881:Drivers/CMSIS/core_cm23.h **** typedef struct
 882:Drivers/CMSIS/core_cm23.h **** {
 883:Drivers/CMSIS/core_cm23.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
 884:Drivers/CMSIS/core_cm23.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
 885:Drivers/CMSIS/core_cm23.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region Number Register */
 886:Drivers/CMSIS/core_cm23.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
ARM GAS  D:\noval\Temp\cc0D8957.s 			page 17


 887:Drivers/CMSIS/core_cm23.h ****   __IOM uint32_t RLAR;                   /*!< Offset: 0x010 (R/W)  MPU Region Limit Address Registe
 888:Drivers/CMSIS/core_cm23.h ****         uint32_t RESERVED0[7U];
 889:Drivers/CMSIS/core_cm23.h ****   union {
 890:Drivers/CMSIS/core_cm23.h ****   __IOM uint32_t MAIR[2];
 891:Drivers/CMSIS/core_cm23.h ****   struct {
 892:Drivers/CMSIS/core_cm23.h ****   __IOM uint32_t MAIR0;                  /*!< Offset: 0x030 (R/W)  MPU Memory Attribute Indirection
 893:Drivers/CMSIS/core_cm23.h ****   __IOM uint32_t MAIR1;                  /*!< Offset: 0x034 (R/W)  MPU Memory Attribute Indirection
 894:Drivers/CMSIS/core_cm23.h ****   };
 895:Drivers/CMSIS/core_cm23.h ****   };
 896:Drivers/CMSIS/core_cm23.h **** } MPU_Type;
 897:Drivers/CMSIS/core_cm23.h **** 
 898:Drivers/CMSIS/core_cm23.h **** #define MPU_TYPE_RALIASES                  1U
 899:Drivers/CMSIS/core_cm23.h **** 
 900:Drivers/CMSIS/core_cm23.h **** /* MPU Type Register Definitions */
 901:Drivers/CMSIS/core_cm23.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
 902:Drivers/CMSIS/core_cm23.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
 903:Drivers/CMSIS/core_cm23.h **** 
 904:Drivers/CMSIS/core_cm23.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
 905:Drivers/CMSIS/core_cm23.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
 906:Drivers/CMSIS/core_cm23.h **** 
 907:Drivers/CMSIS/core_cm23.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
 908:Drivers/CMSIS/core_cm23.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
 909:Drivers/CMSIS/core_cm23.h **** 
 910:Drivers/CMSIS/core_cm23.h **** /* MPU Control Register Definitions */
 911:Drivers/CMSIS/core_cm23.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
 912:Drivers/CMSIS/core_cm23.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
 913:Drivers/CMSIS/core_cm23.h **** 
 914:Drivers/CMSIS/core_cm23.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
 915:Drivers/CMSIS/core_cm23.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
 916:Drivers/CMSIS/core_cm23.h **** 
 917:Drivers/CMSIS/core_cm23.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
 918:Drivers/CMSIS/core_cm23.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
 919:Drivers/CMSIS/core_cm23.h **** 
 920:Drivers/CMSIS/core_cm23.h **** /* MPU Region Number Register Definitions */
 921:Drivers/CMSIS/core_cm23.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
 922:Drivers/CMSIS/core_cm23.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
 923:Drivers/CMSIS/core_cm23.h **** 
 924:Drivers/CMSIS/core_cm23.h **** /* MPU Region Base Address Register Definitions */
 925:Drivers/CMSIS/core_cm23.h **** #define MPU_RBAR_BASE_Pos                   5U                                            /*!< MPU 
 926:Drivers/CMSIS/core_cm23.h **** #define MPU_RBAR_BASE_Msk                  (0x7FFFFFFUL << MPU_RBAR_BASE_Pos)             /*!< MPU 
 927:Drivers/CMSIS/core_cm23.h **** 
 928:Drivers/CMSIS/core_cm23.h **** #define MPU_RBAR_SH_Pos                     3U                                            /*!< MPU 
 929:Drivers/CMSIS/core_cm23.h **** #define MPU_RBAR_SH_Msk                    (0x3UL << MPU_RBAR_SH_Pos)                     /*!< MPU 
 930:Drivers/CMSIS/core_cm23.h **** 
 931:Drivers/CMSIS/core_cm23.h **** #define MPU_RBAR_AP_Pos                     1U                                            /*!< MPU 
 932:Drivers/CMSIS/core_cm23.h **** #define MPU_RBAR_AP_Msk                    (0x3UL << MPU_RBAR_AP_Pos)                     /*!< MPU 
 933:Drivers/CMSIS/core_cm23.h **** 
 934:Drivers/CMSIS/core_cm23.h **** #define MPU_RBAR_XN_Pos                     0U                                            /*!< MPU 
 935:Drivers/CMSIS/core_cm23.h **** #define MPU_RBAR_XN_Msk                    (01UL /*<< MPU_RBAR_XN_Pos*/)                  /*!< MPU 
 936:Drivers/CMSIS/core_cm23.h **** 
 937:Drivers/CMSIS/core_cm23.h **** /* MPU Region Limit Address Register Definitions */
 938:Drivers/CMSIS/core_cm23.h **** #define MPU_RLAR_LIMIT_Pos                  5U                                            /*!< MPU 
 939:Drivers/CMSIS/core_cm23.h **** #define MPU_RLAR_LIMIT_Msk                 (0x7FFFFFFUL << MPU_RLAR_LIMIT_Pos)            /*!< MPU 
 940:Drivers/CMSIS/core_cm23.h **** 
 941:Drivers/CMSIS/core_cm23.h **** #define MPU_RLAR_AttrIndx_Pos               1U                                            /*!< MPU 
 942:Drivers/CMSIS/core_cm23.h **** #define MPU_RLAR_AttrIndx_Msk              (0x7UL << MPU_RLAR_AttrIndx_Pos)               /*!< MPU 
 943:Drivers/CMSIS/core_cm23.h **** 
ARM GAS  D:\noval\Temp\cc0D8957.s 			page 18


 944:Drivers/CMSIS/core_cm23.h **** #define MPU_RLAR_EN_Pos                     0U                                            /*!< MPU 
 945:Drivers/CMSIS/core_cm23.h **** #define MPU_RLAR_EN_Msk                    (1UL /*<< MPU_RLAR_EN_Pos*/)                   /*!< MPU 
 946:Drivers/CMSIS/core_cm23.h **** 
 947:Drivers/CMSIS/core_cm23.h **** /* MPU Memory Attribute Indirection Register 0 Definitions */
 948:Drivers/CMSIS/core_cm23.h **** #define MPU_MAIR0_Attr3_Pos                24U                                            /*!< MPU 
 949:Drivers/CMSIS/core_cm23.h **** #define MPU_MAIR0_Attr3_Msk                (0xFFUL << MPU_MAIR0_Attr3_Pos)                /*!< MPU 
 950:Drivers/CMSIS/core_cm23.h **** 
 951:Drivers/CMSIS/core_cm23.h **** #define MPU_MAIR0_Attr2_Pos                16U                                            /*!< MPU 
 952:Drivers/CMSIS/core_cm23.h **** #define MPU_MAIR0_Attr2_Msk                (0xFFUL << MPU_MAIR0_Attr2_Pos)                /*!< MPU 
 953:Drivers/CMSIS/core_cm23.h **** 
 954:Drivers/CMSIS/core_cm23.h **** #define MPU_MAIR0_Attr1_Pos                 8U                                            /*!< MPU 
 955:Drivers/CMSIS/core_cm23.h **** #define MPU_MAIR0_Attr1_Msk                (0xFFUL << MPU_MAIR0_Attr1_Pos)                /*!< MPU 
 956:Drivers/CMSIS/core_cm23.h **** 
 957:Drivers/CMSIS/core_cm23.h **** #define MPU_MAIR0_Attr0_Pos                 0U                                            /*!< MPU 
 958:Drivers/CMSIS/core_cm23.h **** #define MPU_MAIR0_Attr0_Msk                (0xFFUL /*<< MPU_MAIR0_Attr0_Pos*/)            /*!< MPU 
 959:Drivers/CMSIS/core_cm23.h **** 
 960:Drivers/CMSIS/core_cm23.h **** /* MPU Memory Attribute Indirection Register 1 Definitions */
 961:Drivers/CMSIS/core_cm23.h **** #define MPU_MAIR1_Attr7_Pos                24U                                            /*!< MPU 
 962:Drivers/CMSIS/core_cm23.h **** #define MPU_MAIR1_Attr7_Msk                (0xFFUL << MPU_MAIR1_Attr7_Pos)                /*!< MPU 
 963:Drivers/CMSIS/core_cm23.h **** 
 964:Drivers/CMSIS/core_cm23.h **** #define MPU_MAIR1_Attr6_Pos                16U                                            /*!< MPU 
 965:Drivers/CMSIS/core_cm23.h **** #define MPU_MAIR1_Attr6_Msk                (0xFFUL << MPU_MAIR1_Attr6_Pos)                /*!< MPU 
 966:Drivers/CMSIS/core_cm23.h **** 
 967:Drivers/CMSIS/core_cm23.h **** #define MPU_MAIR1_Attr5_Pos                 8U                                            /*!< MPU 
 968:Drivers/CMSIS/core_cm23.h **** #define MPU_MAIR1_Attr5_Msk                (0xFFUL << MPU_MAIR1_Attr5_Pos)                /*!< MPU 
 969:Drivers/CMSIS/core_cm23.h **** 
 970:Drivers/CMSIS/core_cm23.h **** #define MPU_MAIR1_Attr4_Pos                 0U                                            /*!< MPU 
 971:Drivers/CMSIS/core_cm23.h **** #define MPU_MAIR1_Attr4_Msk                (0xFFUL /*<< MPU_MAIR1_Attr4_Pos*/)            /*!< MPU 
 972:Drivers/CMSIS/core_cm23.h **** 
 973:Drivers/CMSIS/core_cm23.h **** /*@} end of group CMSIS_MPU */
 974:Drivers/CMSIS/core_cm23.h **** #endif
 975:Drivers/CMSIS/core_cm23.h **** 
 976:Drivers/CMSIS/core_cm23.h **** 
 977:Drivers/CMSIS/core_cm23.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 978:Drivers/CMSIS/core_cm23.h **** /**
 979:Drivers/CMSIS/core_cm23.h ****   \ingroup  CMSIS_core_register
 980:Drivers/CMSIS/core_cm23.h ****   \defgroup CMSIS_SAU     Security Attribution Unit (SAU)
 981:Drivers/CMSIS/core_cm23.h ****   \brief    Type definitions for the Security Attribution Unit (SAU)
 982:Drivers/CMSIS/core_cm23.h ****   @{
 983:Drivers/CMSIS/core_cm23.h ****  */
 984:Drivers/CMSIS/core_cm23.h **** 
 985:Drivers/CMSIS/core_cm23.h **** /**
 986:Drivers/CMSIS/core_cm23.h ****   \brief  Structure type to access the Security Attribution Unit (SAU).
 987:Drivers/CMSIS/core_cm23.h ****  */
 988:Drivers/CMSIS/core_cm23.h **** typedef struct
 989:Drivers/CMSIS/core_cm23.h **** {
 990:Drivers/CMSIS/core_cm23.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SAU Control Register */
 991:Drivers/CMSIS/core_cm23.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x004 (R/ )  SAU Type Register */
 992:Drivers/CMSIS/core_cm23.h **** #if defined (__SAUREGION_PRESENT) && (__SAUREGION_PRESENT == 1U)
 993:Drivers/CMSIS/core_cm23.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  SAU Region Number Register */
 994:Drivers/CMSIS/core_cm23.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  SAU Region Base Address Register
 995:Drivers/CMSIS/core_cm23.h ****   __IOM uint32_t RLAR;                   /*!< Offset: 0x010 (R/W)  SAU Region Limit Address Registe
 996:Drivers/CMSIS/core_cm23.h **** #endif
 997:Drivers/CMSIS/core_cm23.h **** } SAU_Type;
 998:Drivers/CMSIS/core_cm23.h **** 
 999:Drivers/CMSIS/core_cm23.h **** /* SAU Control Register Definitions */
1000:Drivers/CMSIS/core_cm23.h **** #define SAU_CTRL_ALLNS_Pos                  1U                                            /*!< SAU 
ARM GAS  D:\noval\Temp\cc0D8957.s 			page 19


1001:Drivers/CMSIS/core_cm23.h **** #define SAU_CTRL_ALLNS_Msk                 (1UL << SAU_CTRL_ALLNS_Pos)                    /*!< SAU 
1002:Drivers/CMSIS/core_cm23.h **** 
1003:Drivers/CMSIS/core_cm23.h **** #define SAU_CTRL_ENABLE_Pos                 0U                                            /*!< SAU 
1004:Drivers/CMSIS/core_cm23.h **** #define SAU_CTRL_ENABLE_Msk                (1UL /*<< SAU_CTRL_ENABLE_Pos*/)               /*!< SAU 
1005:Drivers/CMSIS/core_cm23.h **** 
1006:Drivers/CMSIS/core_cm23.h **** /* SAU Type Register Definitions */
1007:Drivers/CMSIS/core_cm23.h **** #define SAU_TYPE_SREGION_Pos                0U                                            /*!< SAU 
1008:Drivers/CMSIS/core_cm23.h **** #define SAU_TYPE_SREGION_Msk               (0xFFUL /*<< SAU_TYPE_SREGION_Pos*/)           /*!< SAU 
1009:Drivers/CMSIS/core_cm23.h **** 
1010:Drivers/CMSIS/core_cm23.h **** #if defined (__SAUREGION_PRESENT) && (__SAUREGION_PRESENT == 1U)
1011:Drivers/CMSIS/core_cm23.h **** /* SAU Region Number Register Definitions */
1012:Drivers/CMSIS/core_cm23.h **** #define SAU_RNR_REGION_Pos                  0U                                            /*!< SAU 
1013:Drivers/CMSIS/core_cm23.h **** #define SAU_RNR_REGION_Msk                 (0xFFUL /*<< SAU_RNR_REGION_Pos*/)             /*!< SAU 
1014:Drivers/CMSIS/core_cm23.h **** 
1015:Drivers/CMSIS/core_cm23.h **** /* SAU Region Base Address Register Definitions */
1016:Drivers/CMSIS/core_cm23.h **** #define SAU_RBAR_BADDR_Pos                  5U                                            /*!< SAU 
1017:Drivers/CMSIS/core_cm23.h **** #define SAU_RBAR_BADDR_Msk                 (0x7FFFFFFUL << SAU_RBAR_BADDR_Pos)            /*!< SAU 
1018:Drivers/CMSIS/core_cm23.h **** 
1019:Drivers/CMSIS/core_cm23.h **** /* SAU Region Limit Address Register Definitions */
1020:Drivers/CMSIS/core_cm23.h **** #define SAU_RLAR_LADDR_Pos                  5U                                            /*!< SAU 
1021:Drivers/CMSIS/core_cm23.h **** #define SAU_RLAR_LADDR_Msk                 (0x7FFFFFFUL << SAU_RLAR_LADDR_Pos)            /*!< SAU 
1022:Drivers/CMSIS/core_cm23.h **** 
1023:Drivers/CMSIS/core_cm23.h **** #define SAU_RLAR_NSC_Pos                    1U                                            /*!< SAU 
1024:Drivers/CMSIS/core_cm23.h **** #define SAU_RLAR_NSC_Msk                   (1UL << SAU_RLAR_NSC_Pos)                      /*!< SAU 
1025:Drivers/CMSIS/core_cm23.h **** 
1026:Drivers/CMSIS/core_cm23.h **** #define SAU_RLAR_ENABLE_Pos                 0U                                            /*!< SAU 
1027:Drivers/CMSIS/core_cm23.h **** #define SAU_RLAR_ENABLE_Msk                (1UL /*<< SAU_RLAR_ENABLE_Pos*/)               /*!< SAU 
1028:Drivers/CMSIS/core_cm23.h **** 
1029:Drivers/CMSIS/core_cm23.h **** #endif /* defined (__SAUREGION_PRESENT) && (__SAUREGION_PRESENT == 1U) */
1030:Drivers/CMSIS/core_cm23.h **** 
1031:Drivers/CMSIS/core_cm23.h **** /*@} end of group CMSIS_SAU */
1032:Drivers/CMSIS/core_cm23.h **** #endif /* defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U) */
1033:Drivers/CMSIS/core_cm23.h **** 
1034:Drivers/CMSIS/core_cm23.h **** 
1035:Drivers/CMSIS/core_cm23.h **** /**
1036:Drivers/CMSIS/core_cm23.h ****   \ingroup  CMSIS_core_register
1037:Drivers/CMSIS/core_cm23.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1038:Drivers/CMSIS/core_cm23.h ****   \brief    Type definitions for the Core Debug Registers
1039:Drivers/CMSIS/core_cm23.h ****   @{
1040:Drivers/CMSIS/core_cm23.h ****  */
1041:Drivers/CMSIS/core_cm23.h **** 
1042:Drivers/CMSIS/core_cm23.h **** /**
1043:Drivers/CMSIS/core_cm23.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1044:Drivers/CMSIS/core_cm23.h ****  */
1045:Drivers/CMSIS/core_cm23.h **** typedef struct
1046:Drivers/CMSIS/core_cm23.h **** {
1047:Drivers/CMSIS/core_cm23.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1048:Drivers/CMSIS/core_cm23.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1049:Drivers/CMSIS/core_cm23.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1050:Drivers/CMSIS/core_cm23.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1051:Drivers/CMSIS/core_cm23.h ****         uint32_t RESERVED4[1U];
1052:Drivers/CMSIS/core_cm23.h ****   __IOM uint32_t DAUTHCTRL;              /*!< Offset: 0x014 (R/W)  Debug Authentication Control Reg
1053:Drivers/CMSIS/core_cm23.h ****   __IOM uint32_t DSCSR;                  /*!< Offset: 0x018 (R/W)  Debug Security Control and Statu
1054:Drivers/CMSIS/core_cm23.h **** } CoreDebug_Type;
1055:Drivers/CMSIS/core_cm23.h **** 
1056:Drivers/CMSIS/core_cm23.h **** /* Debug Halting Control and Status Register Definitions */
1057:Drivers/CMSIS/core_cm23.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
ARM GAS  D:\noval\Temp\cc0D8957.s 			page 20


1058:Drivers/CMSIS/core_cm23.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1059:Drivers/CMSIS/core_cm23.h **** 
1060:Drivers/CMSIS/core_cm23.h **** #define CoreDebug_DHCSR_S_RESTART_ST_Pos   26U                                            /*!< Core
1061:Drivers/CMSIS/core_cm23.h **** #define CoreDebug_DHCSR_S_RESTART_ST_Msk   (1UL << CoreDebug_DHCSR_S_RESTART_ST_Pos)      /*!< Core
1062:Drivers/CMSIS/core_cm23.h **** 
1063:Drivers/CMSIS/core_cm23.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1064:Drivers/CMSIS/core_cm23.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1065:Drivers/CMSIS/core_cm23.h **** 
1066:Drivers/CMSIS/core_cm23.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1067:Drivers/CMSIS/core_cm23.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1068:Drivers/CMSIS/core_cm23.h **** 
1069:Drivers/CMSIS/core_cm23.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1070:Drivers/CMSIS/core_cm23.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1071:Drivers/CMSIS/core_cm23.h **** 
1072:Drivers/CMSIS/core_cm23.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1073:Drivers/CMSIS/core_cm23.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1074:Drivers/CMSIS/core_cm23.h **** 
1075:Drivers/CMSIS/core_cm23.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1076:Drivers/CMSIS/core_cm23.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1077:Drivers/CMSIS/core_cm23.h **** 
1078:Drivers/CMSIS/core_cm23.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1079:Drivers/CMSIS/core_cm23.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1080:Drivers/CMSIS/core_cm23.h **** 
1081:Drivers/CMSIS/core_cm23.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1082:Drivers/CMSIS/core_cm23.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1083:Drivers/CMSIS/core_cm23.h **** 
1084:Drivers/CMSIS/core_cm23.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1085:Drivers/CMSIS/core_cm23.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1086:Drivers/CMSIS/core_cm23.h **** 
1087:Drivers/CMSIS/core_cm23.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1088:Drivers/CMSIS/core_cm23.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1089:Drivers/CMSIS/core_cm23.h **** 
1090:Drivers/CMSIS/core_cm23.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1091:Drivers/CMSIS/core_cm23.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1092:Drivers/CMSIS/core_cm23.h **** 
1093:Drivers/CMSIS/core_cm23.h **** /* Debug Core Register Selector Register Definitions */
1094:Drivers/CMSIS/core_cm23.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1095:Drivers/CMSIS/core_cm23.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1096:Drivers/CMSIS/core_cm23.h **** 
1097:Drivers/CMSIS/core_cm23.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1098:Drivers/CMSIS/core_cm23.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1099:Drivers/CMSIS/core_cm23.h **** 
1100:Drivers/CMSIS/core_cm23.h **** /* Debug Exception and Monitor Control Register */
1101:Drivers/CMSIS/core_cm23.h **** #define CoreDebug_DEMCR_DWTENA_Pos         24U                                            /*!< Core
1102:Drivers/CMSIS/core_cm23.h **** #define CoreDebug_DEMCR_DWTENA_Msk         (1UL << CoreDebug_DEMCR_DWTENA_Pos)            /*!< Core
1103:Drivers/CMSIS/core_cm23.h **** 
1104:Drivers/CMSIS/core_cm23.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1105:Drivers/CMSIS/core_cm23.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1106:Drivers/CMSIS/core_cm23.h **** 
1107:Drivers/CMSIS/core_cm23.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1108:Drivers/CMSIS/core_cm23.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1109:Drivers/CMSIS/core_cm23.h **** 
1110:Drivers/CMSIS/core_cm23.h **** /* Debug Authentication Control Register Definitions */
1111:Drivers/CMSIS/core_cm23.h **** #define CoreDebug_DAUTHCTRL_INTSPNIDEN_Pos  3U                                            /*!< Core
1112:Drivers/CMSIS/core_cm23.h **** #define CoreDebug_DAUTHCTRL_INTSPNIDEN_Msk (1UL << CoreDebug_DAUTHCTRL_INTSPNIDEN_Pos)    /*!< Core
1113:Drivers/CMSIS/core_cm23.h **** 
1114:Drivers/CMSIS/core_cm23.h **** #define CoreDebug_DAUTHCTRL_SPNIDENSEL_Pos  2U                                            /*!< Core
ARM GAS  D:\noval\Temp\cc0D8957.s 			page 21


1115:Drivers/CMSIS/core_cm23.h **** #define CoreDebug_DAUTHCTRL_SPNIDENSEL_Msk (1UL << CoreDebug_DAUTHCTRL_SPNIDENSEL_Pos)    /*!< Core
1116:Drivers/CMSIS/core_cm23.h **** 
1117:Drivers/CMSIS/core_cm23.h **** #define CoreDebug_DAUTHCTRL_INTSPIDEN_Pos   1U                                            /*!< Core
1118:Drivers/CMSIS/core_cm23.h **** #define CoreDebug_DAUTHCTRL_INTSPIDEN_Msk  (1UL << CoreDebug_DAUTHCTRL_INTSPIDEN_Pos)     /*!< Core
1119:Drivers/CMSIS/core_cm23.h **** 
1120:Drivers/CMSIS/core_cm23.h **** #define CoreDebug_DAUTHCTRL_SPIDENSEL_Pos   0U                                            /*!< Core
1121:Drivers/CMSIS/core_cm23.h **** #define CoreDebug_DAUTHCTRL_SPIDENSEL_Msk  (1UL /*<< CoreDebug_DAUTHCTRL_SPIDENSEL_Pos*/) /*!< Core
1122:Drivers/CMSIS/core_cm23.h **** 
1123:Drivers/CMSIS/core_cm23.h **** /* Debug Security Control and Status Register Definitions */
1124:Drivers/CMSIS/core_cm23.h **** #define CoreDebug_DSCSR_CDS_Pos            16U                                            /*!< Core
1125:Drivers/CMSIS/core_cm23.h **** #define CoreDebug_DSCSR_CDS_Msk            (1UL << CoreDebug_DSCSR_CDS_Pos)               /*!< Core
1126:Drivers/CMSIS/core_cm23.h **** 
1127:Drivers/CMSIS/core_cm23.h **** #define CoreDebug_DSCSR_SBRSEL_Pos          1U                                            /*!< Core
1128:Drivers/CMSIS/core_cm23.h **** #define CoreDebug_DSCSR_SBRSEL_Msk         (1UL << CoreDebug_DSCSR_SBRSEL_Pos)            /*!< Core
1129:Drivers/CMSIS/core_cm23.h **** 
1130:Drivers/CMSIS/core_cm23.h **** #define CoreDebug_DSCSR_SBRSELEN_Pos        0U                                            /*!< Core
1131:Drivers/CMSIS/core_cm23.h **** #define CoreDebug_DSCSR_SBRSELEN_Msk       (1UL /*<< CoreDebug_DSCSR_SBRSELEN_Pos*/)      /*!< Core
1132:Drivers/CMSIS/core_cm23.h **** 
1133:Drivers/CMSIS/core_cm23.h **** /*@} end of group CMSIS_CoreDebug */
1134:Drivers/CMSIS/core_cm23.h **** 
1135:Drivers/CMSIS/core_cm23.h **** 
1136:Drivers/CMSIS/core_cm23.h **** /**
1137:Drivers/CMSIS/core_cm23.h ****   \ingroup    CMSIS_core_register
1138:Drivers/CMSIS/core_cm23.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1139:Drivers/CMSIS/core_cm23.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1140:Drivers/CMSIS/core_cm23.h ****   @{
1141:Drivers/CMSIS/core_cm23.h ****  */
1142:Drivers/CMSIS/core_cm23.h **** 
1143:Drivers/CMSIS/core_cm23.h **** /**
1144:Drivers/CMSIS/core_cm23.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1145:Drivers/CMSIS/core_cm23.h ****   \param[in] field  Name of the register bit field.
1146:Drivers/CMSIS/core_cm23.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
1147:Drivers/CMSIS/core_cm23.h ****   \return           Masked and shifted value.
1148:Drivers/CMSIS/core_cm23.h **** */
1149:Drivers/CMSIS/core_cm23.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
1150:Drivers/CMSIS/core_cm23.h **** 
1151:Drivers/CMSIS/core_cm23.h **** /**
1152:Drivers/CMSIS/core_cm23.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1153:Drivers/CMSIS/core_cm23.h ****   \param[in] field  Name of the register bit field.
1154:Drivers/CMSIS/core_cm23.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
1155:Drivers/CMSIS/core_cm23.h ****   \return           Masked and shifted bit field value.
1156:Drivers/CMSIS/core_cm23.h **** */
1157:Drivers/CMSIS/core_cm23.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
1158:Drivers/CMSIS/core_cm23.h **** 
1159:Drivers/CMSIS/core_cm23.h **** /*@} end of group CMSIS_core_bitfield */
1160:Drivers/CMSIS/core_cm23.h **** 
1161:Drivers/CMSIS/core_cm23.h **** 
1162:Drivers/CMSIS/core_cm23.h **** /**
1163:Drivers/CMSIS/core_cm23.h ****   \ingroup    CMSIS_core_register
1164:Drivers/CMSIS/core_cm23.h ****   \defgroup   CMSIS_core_base     Core Definitions
1165:Drivers/CMSIS/core_cm23.h ****   \brief      Definitions for base addresses, unions, and structures.
1166:Drivers/CMSIS/core_cm23.h ****   @{
1167:Drivers/CMSIS/core_cm23.h ****  */
1168:Drivers/CMSIS/core_cm23.h **** 
1169:Drivers/CMSIS/core_cm23.h **** /* Memory mapping of Core Hardware */
1170:Drivers/CMSIS/core_cm23.h ****   #define SCS_BASE            (0xE000E000UL)                             /*!< System Control Space 
1171:Drivers/CMSIS/core_cm23.h ****   #define DWT_BASE            (0xE0001000UL)                             /*!< DWT Base Address */
ARM GAS  D:\noval\Temp\cc0D8957.s 			page 22


1172:Drivers/CMSIS/core_cm23.h ****   #define TPI_BASE            (0xE0040000UL)                             /*!< TPI Base Address */
1173:Drivers/CMSIS/core_cm23.h ****   #define CoreDebug_BASE      (0xE000EDF0UL)                             /*!< Core Debug Base Addre
1174:Drivers/CMSIS/core_cm23.h ****   #define SysTick_BASE        (SCS_BASE +  0x0010UL)                     /*!< SysTick Base Address 
1175:Drivers/CMSIS/core_cm23.h ****   #define NVIC_BASE           (SCS_BASE +  0x0100UL)                     /*!< NVIC Base Address */
1176:Drivers/CMSIS/core_cm23.h ****   #define SCB_BASE            (SCS_BASE +  0x0D00UL)                     /*!< System Control Block 
1177:Drivers/CMSIS/core_cm23.h **** 
1178:Drivers/CMSIS/core_cm23.h **** 
1179:Drivers/CMSIS/core_cm23.h ****   #define SCB                 ((SCB_Type       *)     SCB_BASE         ) /*!< SCB configuration str
1180:Drivers/CMSIS/core_cm23.h ****   #define SysTick             ((SysTick_Type   *)     SysTick_BASE     ) /*!< SysTick configuration
1181:Drivers/CMSIS/core_cm23.h ****   #define NVIC                ((NVIC_Type      *)     NVIC_BASE        ) /*!< NVIC configuration st
1182:Drivers/CMSIS/core_cm23.h ****   #define DWT                 ((DWT_Type       *)     DWT_BASE         ) /*!< DWT configuration str
1183:Drivers/CMSIS/core_cm23.h ****   #define TPI                 ((TPI_Type       *)     TPI_BASE         ) /*!< TPI configuration str
1184:Drivers/CMSIS/core_cm23.h ****   #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE   ) /*!< Core Debug configurat
1185:Drivers/CMSIS/core_cm23.h **** 
1186:Drivers/CMSIS/core_cm23.h ****   #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1187:Drivers/CMSIS/core_cm23.h ****     #define MPU_BASE          (SCS_BASE +  0x0D90UL)                     /*!< Memory Protection Uni
1188:Drivers/CMSIS/core_cm23.h ****     #define MPU               ((MPU_Type       *)     MPU_BASE         ) /*!< Memory Protection Uni
1189:Drivers/CMSIS/core_cm23.h ****   #endif
1190:Drivers/CMSIS/core_cm23.h **** 
1191:Drivers/CMSIS/core_cm23.h ****   #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
1192:Drivers/CMSIS/core_cm23.h ****     #define SAU_BASE          (SCS_BASE +  0x0DD0UL)                     /*!< Security Attribution 
1193:Drivers/CMSIS/core_cm23.h ****     #define SAU               ((SAU_Type       *)     SAU_BASE         ) /*!< Security Attribution 
1194:Drivers/CMSIS/core_cm23.h ****   #endif
1195:Drivers/CMSIS/core_cm23.h **** 
1196:Drivers/CMSIS/core_cm23.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
1197:Drivers/CMSIS/core_cm23.h ****   #define SCS_BASE_NS         (0xE002E000UL)                             /*!< System Control Space 
1198:Drivers/CMSIS/core_cm23.h ****   #define CoreDebug_BASE_NS   (0xE002EDF0UL)                             /*!< Core Debug Base Addre
1199:Drivers/CMSIS/core_cm23.h ****   #define SysTick_BASE_NS     (SCS_BASE_NS +  0x0010UL)                  /*!< SysTick Base Address 
1200:Drivers/CMSIS/core_cm23.h ****   #define NVIC_BASE_NS        (SCS_BASE_NS +  0x0100UL)                  /*!< NVIC Base Address    
1201:Drivers/CMSIS/core_cm23.h ****   #define SCB_BASE_NS         (SCS_BASE_NS +  0x0D00UL)                  /*!< System Control Block 
1202:Drivers/CMSIS/core_cm23.h **** 
1203:Drivers/CMSIS/core_cm23.h ****   #define SCB_NS              ((SCB_Type       *)     SCB_BASE_NS      ) /*!< SCB configuration str
1204:Drivers/CMSIS/core_cm23.h ****   #define SysTick_NS          ((SysTick_Type   *)     SysTick_BASE_NS  ) /*!< SysTick configuration
1205:Drivers/CMSIS/core_cm23.h ****   #define NVIC_NS             ((NVIC_Type      *)     NVIC_BASE_NS     ) /*!< NVIC configuration st
1206:Drivers/CMSIS/core_cm23.h ****   #define CoreDebug_NS        ((CoreDebug_Type *)     CoreDebug_BASE_NS) /*!< Core Debug configurat
1207:Drivers/CMSIS/core_cm23.h **** 
1208:Drivers/CMSIS/core_cm23.h ****   #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1209:Drivers/CMSIS/core_cm23.h ****     #define MPU_BASE_NS       (SCS_BASE_NS +  0x0D90UL)                  /*!< Memory Protection Uni
1210:Drivers/CMSIS/core_cm23.h ****     #define MPU_NS            ((MPU_Type       *)     MPU_BASE_NS      ) /*!< Memory Protection Uni
1211:Drivers/CMSIS/core_cm23.h ****   #endif
1212:Drivers/CMSIS/core_cm23.h **** 
1213:Drivers/CMSIS/core_cm23.h **** #endif /* defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U) */
1214:Drivers/CMSIS/core_cm23.h **** /*@} */
1215:Drivers/CMSIS/core_cm23.h **** 
1216:Drivers/CMSIS/core_cm23.h **** 
1217:Drivers/CMSIS/core_cm23.h **** 
1218:Drivers/CMSIS/core_cm23.h **** /*******************************************************************************
1219:Drivers/CMSIS/core_cm23.h ****  *                Hardware Abstraction Layer
1220:Drivers/CMSIS/core_cm23.h ****   Core Function Interface contains:
1221:Drivers/CMSIS/core_cm23.h ****   - Core NVIC Functions
1222:Drivers/CMSIS/core_cm23.h ****   - Core SysTick Functions
1223:Drivers/CMSIS/core_cm23.h ****   - Core Register Access Functions
1224:Drivers/CMSIS/core_cm23.h ****  ******************************************************************************/
1225:Drivers/CMSIS/core_cm23.h **** /**
1226:Drivers/CMSIS/core_cm23.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1227:Drivers/CMSIS/core_cm23.h **** */
1228:Drivers/CMSIS/core_cm23.h **** 
ARM GAS  D:\noval\Temp\cc0D8957.s 			page 23


1229:Drivers/CMSIS/core_cm23.h **** 
1230:Drivers/CMSIS/core_cm23.h **** 
1231:Drivers/CMSIS/core_cm23.h **** /* ##########################   NVIC functions  #################################### */
1232:Drivers/CMSIS/core_cm23.h **** /**
1233:Drivers/CMSIS/core_cm23.h ****   \ingroup  CMSIS_Core_FunctionInterface
1234:Drivers/CMSIS/core_cm23.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1235:Drivers/CMSIS/core_cm23.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1236:Drivers/CMSIS/core_cm23.h ****   @{
1237:Drivers/CMSIS/core_cm23.h ****  */
1238:Drivers/CMSIS/core_cm23.h **** 
1239:Drivers/CMSIS/core_cm23.h **** #ifdef CMSIS_NVIC_VIRTUAL
1240:Drivers/CMSIS/core_cm23.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
1241:Drivers/CMSIS/core_cm23.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
1242:Drivers/CMSIS/core_cm23.h ****   #endif
1243:Drivers/CMSIS/core_cm23.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
1244:Drivers/CMSIS/core_cm23.h **** #else
1245:Drivers/CMSIS/core_cm23.h **** /*#define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping   not available for Cortex-M23 */
1246:Drivers/CMSIS/core_cm23.h **** /*#define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping   not available for Cortex-M23 */
1247:Drivers/CMSIS/core_cm23.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
1248:Drivers/CMSIS/core_cm23.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
1249:Drivers/CMSIS/core_cm23.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
1250:Drivers/CMSIS/core_cm23.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
1251:Drivers/CMSIS/core_cm23.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
1252:Drivers/CMSIS/core_cm23.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
1253:Drivers/CMSIS/core_cm23.h ****   #define NVIC_GetActive              __NVIC_GetActive
1254:Drivers/CMSIS/core_cm23.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
1255:Drivers/CMSIS/core_cm23.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
1256:Drivers/CMSIS/core_cm23.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
1257:Drivers/CMSIS/core_cm23.h **** #endif /* CMSIS_NVIC_VIRTUAL */
1258:Drivers/CMSIS/core_cm23.h **** 
1259:Drivers/CMSIS/core_cm23.h **** #ifdef CMSIS_VECTAB_VIRTUAL
1260:Drivers/CMSIS/core_cm23.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1261:Drivers/CMSIS/core_cm23.h ****     #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
1262:Drivers/CMSIS/core_cm23.h ****   #endif
1263:Drivers/CMSIS/core_cm23.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1264:Drivers/CMSIS/core_cm23.h **** #else
1265:Drivers/CMSIS/core_cm23.h ****   #define NVIC_SetVector              __NVIC_SetVector
1266:Drivers/CMSIS/core_cm23.h ****   #define NVIC_GetVector              __NVIC_GetVector
1267:Drivers/CMSIS/core_cm23.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
1268:Drivers/CMSIS/core_cm23.h **** 
1269:Drivers/CMSIS/core_cm23.h **** #define NVIC_USER_IRQ_OFFSET          16
1270:Drivers/CMSIS/core_cm23.h **** 
1271:Drivers/CMSIS/core_cm23.h **** 
1272:Drivers/CMSIS/core_cm23.h **** /* Interrupt Priorities are WORD accessible only under Armv6-M                  */
1273:Drivers/CMSIS/core_cm23.h **** /* The following MACROS handle generation of the register offset and byte masks */
1274:Drivers/CMSIS/core_cm23.h **** #define _BIT_SHIFT(IRQn)         (  ((((uint32_t)(int32_t)(IRQn))         )      &  0x03UL) * 8UL)
1275:Drivers/CMSIS/core_cm23.h **** #define _SHP_IDX(IRQn)           ( (((((uint32_t)(int32_t)(IRQn)) & 0x0FUL)-8UL) >>    2UL)      )
1276:Drivers/CMSIS/core_cm23.h **** #define _IP_IDX(IRQn)            (   (((uint32_t)(int32_t)(IRQn))                >>    2UL)      )
1277:Drivers/CMSIS/core_cm23.h **** 
1278:Drivers/CMSIS/core_cm23.h **** 
1279:Drivers/CMSIS/core_cm23.h **** /**
1280:Drivers/CMSIS/core_cm23.h ****   \brief   Enable Interrupt
1281:Drivers/CMSIS/core_cm23.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
1282:Drivers/CMSIS/core_cm23.h ****   \param [in]      IRQn  Device specific interrupt number.
1283:Drivers/CMSIS/core_cm23.h ****   \note    IRQn must not be negative.
1284:Drivers/CMSIS/core_cm23.h ****  */
1285:Drivers/CMSIS/core_cm23.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
ARM GAS  D:\noval\Temp\cc0D8957.s 			page 24


1286:Drivers/CMSIS/core_cm23.h **** {
1287:Drivers/CMSIS/core_cm23.h ****   if ((int32_t)(IRQn) >= 0)
1288:Drivers/CMSIS/core_cm23.h ****   {
1289:Drivers/CMSIS/core_cm23.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1290:Drivers/CMSIS/core_cm23.h ****   }
1291:Drivers/CMSIS/core_cm23.h **** }
1292:Drivers/CMSIS/core_cm23.h **** 
1293:Drivers/CMSIS/core_cm23.h **** 
1294:Drivers/CMSIS/core_cm23.h **** /**
1295:Drivers/CMSIS/core_cm23.h ****   \brief   Get Interrupt Enable status
1296:Drivers/CMSIS/core_cm23.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
1297:Drivers/CMSIS/core_cm23.h ****   \param [in]      IRQn  Device specific interrupt number.
1298:Drivers/CMSIS/core_cm23.h ****   \return             0  Interrupt is not enabled.
1299:Drivers/CMSIS/core_cm23.h ****   \return             1  Interrupt is enabled.
1300:Drivers/CMSIS/core_cm23.h ****   \note    IRQn must not be negative.
1301:Drivers/CMSIS/core_cm23.h ****  */
1302:Drivers/CMSIS/core_cm23.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
1303:Drivers/CMSIS/core_cm23.h **** {
1304:Drivers/CMSIS/core_cm23.h ****   if ((int32_t)(IRQn) >= 0)
1305:Drivers/CMSIS/core_cm23.h ****   {
1306:Drivers/CMSIS/core_cm23.h ****     return((uint32_t)(((NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1307:Drivers/CMSIS/core_cm23.h ****   }
1308:Drivers/CMSIS/core_cm23.h ****   else
1309:Drivers/CMSIS/core_cm23.h ****   {
1310:Drivers/CMSIS/core_cm23.h ****     return(0U);
1311:Drivers/CMSIS/core_cm23.h ****   }
1312:Drivers/CMSIS/core_cm23.h **** }
1313:Drivers/CMSIS/core_cm23.h **** 
1314:Drivers/CMSIS/core_cm23.h **** 
1315:Drivers/CMSIS/core_cm23.h **** /**
1316:Drivers/CMSIS/core_cm23.h ****   \brief   Disable Interrupt
1317:Drivers/CMSIS/core_cm23.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
1318:Drivers/CMSIS/core_cm23.h ****   \param [in]      IRQn  Device specific interrupt number.
1319:Drivers/CMSIS/core_cm23.h ****   \note    IRQn must not be negative.
1320:Drivers/CMSIS/core_cm23.h ****  */
1321:Drivers/CMSIS/core_cm23.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
1322:Drivers/CMSIS/core_cm23.h **** {
  28              		.loc 2 1322 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
1323:Drivers/CMSIS/core_cm23.h ****   if ((int32_t)(IRQn) >= 0)
  33              		.loc 2 1323 3 view .LVU1
  34              		.loc 2 1323 6 is_stmt 0 view .LVU2
  35 0000 0028     		cmp	r0, #0
  36 0002 0FDB     		blt	.L1
1324:Drivers/CMSIS/core_cm23.h ****   {
1325:Drivers/CMSIS/core_cm23.h ****     NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  37              		.loc 2 1325 5 is_stmt 1 view .LVU3
  38              		.loc 2 1325 81 is_stmt 0 view .LVU4
  39 0004 1F22     		movs	r2, #31
  40 0006 0240     		ands	r2, r0
  41              		.loc 2 1325 34 view .LVU5
  42 0008 4009     		lsrs	r0, r0, #5
  43              	.LVL1:
  44              		.loc 2 1325 45 view .LVU6
ARM GAS  D:\noval\Temp\cc0D8957.s 			page 25


  45 000a 0123     		movs	r3, #1
  46 000c 9340     		lsls	r3, r3, r2
  47              		.loc 2 1325 43 view .LVU7
  48 000e 4EF20012 		movw	r2, #57600
  49 0012 CEF20002 		movt	r2, 57344
  50 0016 2030     		adds	r0, r0, #32
  51 0018 8000     		lsls	r0, r0, #2
  52 001a 8350     		str	r3, [r0, r2]
1326:Drivers/CMSIS/core_cm23.h ****     __DSB();
  53              		.loc 2 1326 5 is_stmt 1 view .LVU8
  54              	.LBB14:
  55              	.LBI14:
  56              		.file 3 "Drivers/CMSIS/cmsis_gcc.h"
   1:Drivers/CMSIS/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/cmsis_gcc.h ****  * @version  V5.0.3
   5:Drivers/CMSIS/cmsis_gcc.h ****  * @date     16. January 2018
   6:Drivers/CMSIS/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/cmsis_gcc.h ****  * Copyright (c) 2009-2017 ARM Limited. All rights reserved.
   9:Drivers/CMSIS/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/cmsis_gcc.h **** 
  25:Drivers/CMSIS/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/cmsis_gcc.h **** 
  28:Drivers/CMSIS/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/cmsis_gcc.h **** 
  34:Drivers/CMSIS/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/cmsis_gcc.h **** 
  39:Drivers/CMSIS/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/cmsis_gcc.h ****   #define __INLINE                               inline
ARM GAS  D:\noval\Temp\cc0D8957.s 			page 26


  45:Drivers/CMSIS/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/cmsis_gcc.h **** #endif
ARM GAS  D:\noval\Temp\cc0D8957.s 			page 27


 102:Drivers/CMSIS/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/cmsis_gcc.h **** 
 117:Drivers/CMSIS/cmsis_gcc.h **** 
 118:Drivers/CMSIS/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/cmsis_gcc.h **** 
 124:Drivers/CMSIS/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/cmsis_gcc.h **** {
 131:Drivers/CMSIS/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/cmsis_gcc.h **** }
 133:Drivers/CMSIS/cmsis_gcc.h **** 
 134:Drivers/CMSIS/cmsis_gcc.h **** 
 135:Drivers/CMSIS/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/cmsis_gcc.h **** {
 142:Drivers/CMSIS/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:Drivers/CMSIS/cmsis_gcc.h **** }
 144:Drivers/CMSIS/cmsis_gcc.h **** 
 145:Drivers/CMSIS/cmsis_gcc.h **** 
 146:Drivers/CMSIS/cmsis_gcc.h **** /**
 147:Drivers/CMSIS/cmsis_gcc.h ****   \brief   Get Control Register
 148:Drivers/CMSIS/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:Drivers/CMSIS/cmsis_gcc.h ****   \return               Control Register value
 150:Drivers/CMSIS/cmsis_gcc.h ****  */
 151:Drivers/CMSIS/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:Drivers/CMSIS/cmsis_gcc.h **** {
 153:Drivers/CMSIS/cmsis_gcc.h ****   uint32_t result;
 154:Drivers/CMSIS/cmsis_gcc.h **** 
 155:Drivers/CMSIS/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:Drivers/CMSIS/cmsis_gcc.h ****   return(result);
 157:Drivers/CMSIS/cmsis_gcc.h **** }
 158:Drivers/CMSIS/cmsis_gcc.h **** 
ARM GAS  D:\noval\Temp\cc0D8957.s 			page 28


 159:Drivers/CMSIS/cmsis_gcc.h **** 
 160:Drivers/CMSIS/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:Drivers/CMSIS/cmsis_gcc.h **** /**
 162:Drivers/CMSIS/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:Drivers/CMSIS/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:Drivers/CMSIS/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:Drivers/CMSIS/cmsis_gcc.h ****  */
 166:Drivers/CMSIS/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:Drivers/CMSIS/cmsis_gcc.h **** {
 168:Drivers/CMSIS/cmsis_gcc.h ****   uint32_t result;
 169:Drivers/CMSIS/cmsis_gcc.h **** 
 170:Drivers/CMSIS/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:Drivers/CMSIS/cmsis_gcc.h ****   return(result);
 172:Drivers/CMSIS/cmsis_gcc.h **** }
 173:Drivers/CMSIS/cmsis_gcc.h **** #endif
 174:Drivers/CMSIS/cmsis_gcc.h **** 
 175:Drivers/CMSIS/cmsis_gcc.h **** 
 176:Drivers/CMSIS/cmsis_gcc.h **** /**
 177:Drivers/CMSIS/cmsis_gcc.h ****   \brief   Set Control Register
 178:Drivers/CMSIS/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:Drivers/CMSIS/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:Drivers/CMSIS/cmsis_gcc.h ****  */
 181:Drivers/CMSIS/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:Drivers/CMSIS/cmsis_gcc.h **** {
 183:Drivers/CMSIS/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:Drivers/CMSIS/cmsis_gcc.h **** }
 185:Drivers/CMSIS/cmsis_gcc.h **** 
 186:Drivers/CMSIS/cmsis_gcc.h **** 
 187:Drivers/CMSIS/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:Drivers/CMSIS/cmsis_gcc.h **** /**
 189:Drivers/CMSIS/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:Drivers/CMSIS/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:Drivers/CMSIS/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:Drivers/CMSIS/cmsis_gcc.h ****  */
 193:Drivers/CMSIS/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:Drivers/CMSIS/cmsis_gcc.h **** {
 195:Drivers/CMSIS/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:Drivers/CMSIS/cmsis_gcc.h **** }
 197:Drivers/CMSIS/cmsis_gcc.h **** #endif
 198:Drivers/CMSIS/cmsis_gcc.h **** 
 199:Drivers/CMSIS/cmsis_gcc.h **** 
 200:Drivers/CMSIS/cmsis_gcc.h **** /**
 201:Drivers/CMSIS/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:Drivers/CMSIS/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:Drivers/CMSIS/cmsis_gcc.h ****   \return               IPSR Register value
 204:Drivers/CMSIS/cmsis_gcc.h ****  */
 205:Drivers/CMSIS/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:Drivers/CMSIS/cmsis_gcc.h **** {
 207:Drivers/CMSIS/cmsis_gcc.h ****   uint32_t result;
 208:Drivers/CMSIS/cmsis_gcc.h **** 
 209:Drivers/CMSIS/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:Drivers/CMSIS/cmsis_gcc.h ****   return(result);
 211:Drivers/CMSIS/cmsis_gcc.h **** }
 212:Drivers/CMSIS/cmsis_gcc.h **** 
 213:Drivers/CMSIS/cmsis_gcc.h **** 
 214:Drivers/CMSIS/cmsis_gcc.h **** /**
 215:Drivers/CMSIS/cmsis_gcc.h ****   \brief   Get APSR Register
ARM GAS  D:\noval\Temp\cc0D8957.s 			page 29


 216:Drivers/CMSIS/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:Drivers/CMSIS/cmsis_gcc.h ****   \return               APSR Register value
 218:Drivers/CMSIS/cmsis_gcc.h ****  */
 219:Drivers/CMSIS/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:Drivers/CMSIS/cmsis_gcc.h **** {
 221:Drivers/CMSIS/cmsis_gcc.h ****   uint32_t result;
 222:Drivers/CMSIS/cmsis_gcc.h **** 
 223:Drivers/CMSIS/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:Drivers/CMSIS/cmsis_gcc.h ****   return(result);
 225:Drivers/CMSIS/cmsis_gcc.h **** }
 226:Drivers/CMSIS/cmsis_gcc.h **** 
 227:Drivers/CMSIS/cmsis_gcc.h **** 
 228:Drivers/CMSIS/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:Drivers/CMSIS/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:Drivers/CMSIS/cmsis_gcc.h ****   \return               xPSR Register value
 232:Drivers/CMSIS/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:Drivers/CMSIS/cmsis_gcc.h **** {
 235:Drivers/CMSIS/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/cmsis_gcc.h **** 
 237:Drivers/CMSIS/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:Drivers/CMSIS/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/cmsis_gcc.h **** }
 240:Drivers/CMSIS/cmsis_gcc.h **** 
 241:Drivers/CMSIS/cmsis_gcc.h **** 
 242:Drivers/CMSIS/cmsis_gcc.h **** /**
 243:Drivers/CMSIS/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:Drivers/CMSIS/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:Drivers/CMSIS/cmsis_gcc.h ****   \return               PSP Register value
 246:Drivers/CMSIS/cmsis_gcc.h ****  */
 247:Drivers/CMSIS/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:Drivers/CMSIS/cmsis_gcc.h **** {
 249:Drivers/CMSIS/cmsis_gcc.h ****   register uint32_t result;
 250:Drivers/CMSIS/cmsis_gcc.h **** 
 251:Drivers/CMSIS/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:Drivers/CMSIS/cmsis_gcc.h ****   return(result);
 253:Drivers/CMSIS/cmsis_gcc.h **** }
 254:Drivers/CMSIS/cmsis_gcc.h **** 
 255:Drivers/CMSIS/cmsis_gcc.h **** 
 256:Drivers/CMSIS/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:Drivers/CMSIS/cmsis_gcc.h **** /**
 258:Drivers/CMSIS/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:Drivers/CMSIS/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:Drivers/CMSIS/cmsis_gcc.h ****   \return               PSP Register value
 261:Drivers/CMSIS/cmsis_gcc.h ****  */
 262:Drivers/CMSIS/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:Drivers/CMSIS/cmsis_gcc.h **** {
 264:Drivers/CMSIS/cmsis_gcc.h ****   register uint32_t result;
 265:Drivers/CMSIS/cmsis_gcc.h **** 
 266:Drivers/CMSIS/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:Drivers/CMSIS/cmsis_gcc.h ****   return(result);
 268:Drivers/CMSIS/cmsis_gcc.h **** }
 269:Drivers/CMSIS/cmsis_gcc.h **** #endif
 270:Drivers/CMSIS/cmsis_gcc.h **** 
 271:Drivers/CMSIS/cmsis_gcc.h **** 
 272:Drivers/CMSIS/cmsis_gcc.h **** /**
ARM GAS  D:\noval\Temp\cc0D8957.s 			page 30


 273:Drivers/CMSIS/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:Drivers/CMSIS/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:Drivers/CMSIS/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:Drivers/CMSIS/cmsis_gcc.h ****  */
 277:Drivers/CMSIS/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:Drivers/CMSIS/cmsis_gcc.h **** {
 279:Drivers/CMSIS/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:Drivers/CMSIS/cmsis_gcc.h **** }
 281:Drivers/CMSIS/cmsis_gcc.h **** 
 282:Drivers/CMSIS/cmsis_gcc.h **** 
 283:Drivers/CMSIS/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:Drivers/CMSIS/cmsis_gcc.h **** /**
 285:Drivers/CMSIS/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:Drivers/CMSIS/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:Drivers/CMSIS/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:Drivers/CMSIS/cmsis_gcc.h ****  */
 289:Drivers/CMSIS/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:Drivers/CMSIS/cmsis_gcc.h **** {
 291:Drivers/CMSIS/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:Drivers/CMSIS/cmsis_gcc.h **** }
 293:Drivers/CMSIS/cmsis_gcc.h **** #endif
 294:Drivers/CMSIS/cmsis_gcc.h **** 
 295:Drivers/CMSIS/cmsis_gcc.h **** 
 296:Drivers/CMSIS/cmsis_gcc.h **** /**
 297:Drivers/CMSIS/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:Drivers/CMSIS/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:Drivers/CMSIS/cmsis_gcc.h ****   \return               MSP Register value
 300:Drivers/CMSIS/cmsis_gcc.h ****  */
 301:Drivers/CMSIS/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:Drivers/CMSIS/cmsis_gcc.h **** {
 303:Drivers/CMSIS/cmsis_gcc.h ****   register uint32_t result;
 304:Drivers/CMSIS/cmsis_gcc.h **** 
 305:Drivers/CMSIS/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:Drivers/CMSIS/cmsis_gcc.h ****   return(result);
 307:Drivers/CMSIS/cmsis_gcc.h **** }
 308:Drivers/CMSIS/cmsis_gcc.h **** 
 309:Drivers/CMSIS/cmsis_gcc.h **** 
 310:Drivers/CMSIS/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:Drivers/CMSIS/cmsis_gcc.h **** /**
 312:Drivers/CMSIS/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:Drivers/CMSIS/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:Drivers/CMSIS/cmsis_gcc.h ****   \return               MSP Register value
 315:Drivers/CMSIS/cmsis_gcc.h ****  */
 316:Drivers/CMSIS/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:Drivers/CMSIS/cmsis_gcc.h **** {
 318:Drivers/CMSIS/cmsis_gcc.h ****   register uint32_t result;
 319:Drivers/CMSIS/cmsis_gcc.h **** 
 320:Drivers/CMSIS/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:Drivers/CMSIS/cmsis_gcc.h ****   return(result);
 322:Drivers/CMSIS/cmsis_gcc.h **** }
 323:Drivers/CMSIS/cmsis_gcc.h **** #endif
 324:Drivers/CMSIS/cmsis_gcc.h **** 
 325:Drivers/CMSIS/cmsis_gcc.h **** 
 326:Drivers/CMSIS/cmsis_gcc.h **** /**
 327:Drivers/CMSIS/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:Drivers/CMSIS/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:Drivers/CMSIS/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
ARM GAS  D:\noval\Temp\cc0D8957.s 			page 31


 330:Drivers/CMSIS/cmsis_gcc.h ****  */
 331:Drivers/CMSIS/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:Drivers/CMSIS/cmsis_gcc.h **** {
 333:Drivers/CMSIS/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:Drivers/CMSIS/cmsis_gcc.h **** }
 335:Drivers/CMSIS/cmsis_gcc.h **** 
 336:Drivers/CMSIS/cmsis_gcc.h **** 
 337:Drivers/CMSIS/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:Drivers/CMSIS/cmsis_gcc.h **** /**
 339:Drivers/CMSIS/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:Drivers/CMSIS/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:Drivers/CMSIS/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:Drivers/CMSIS/cmsis_gcc.h ****  */
 343:Drivers/CMSIS/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:Drivers/CMSIS/cmsis_gcc.h **** {
 345:Drivers/CMSIS/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:Drivers/CMSIS/cmsis_gcc.h **** }
 347:Drivers/CMSIS/cmsis_gcc.h **** #endif
 348:Drivers/CMSIS/cmsis_gcc.h **** 
 349:Drivers/CMSIS/cmsis_gcc.h **** 
 350:Drivers/CMSIS/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:Drivers/CMSIS/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:Drivers/CMSIS/cmsis_gcc.h ****   \return               SP Register value
 355:Drivers/CMSIS/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:Drivers/CMSIS/cmsis_gcc.h **** {
 358:Drivers/CMSIS/cmsis_gcc.h ****   register uint32_t result;
 359:Drivers/CMSIS/cmsis_gcc.h **** 
 360:Drivers/CMSIS/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:Drivers/CMSIS/cmsis_gcc.h ****   return(result);
 362:Drivers/CMSIS/cmsis_gcc.h **** }
 363:Drivers/CMSIS/cmsis_gcc.h **** 
 364:Drivers/CMSIS/cmsis_gcc.h **** 
 365:Drivers/CMSIS/cmsis_gcc.h **** /**
 366:Drivers/CMSIS/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:Drivers/CMSIS/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:Drivers/CMSIS/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:Drivers/CMSIS/cmsis_gcc.h ****  */
 370:Drivers/CMSIS/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:Drivers/CMSIS/cmsis_gcc.h **** {
 372:Drivers/CMSIS/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:Drivers/CMSIS/cmsis_gcc.h **** }
 374:Drivers/CMSIS/cmsis_gcc.h **** #endif
 375:Drivers/CMSIS/cmsis_gcc.h **** 
 376:Drivers/CMSIS/cmsis_gcc.h **** 
 377:Drivers/CMSIS/cmsis_gcc.h **** /**
 378:Drivers/CMSIS/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:Drivers/CMSIS/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:Drivers/CMSIS/cmsis_gcc.h ****   \return               Priority Mask value
 381:Drivers/CMSIS/cmsis_gcc.h ****  */
 382:Drivers/CMSIS/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:Drivers/CMSIS/cmsis_gcc.h **** {
 384:Drivers/CMSIS/cmsis_gcc.h ****   uint32_t result;
 385:Drivers/CMSIS/cmsis_gcc.h **** 
 386:Drivers/CMSIS/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
ARM GAS  D:\noval\Temp\cc0D8957.s 			page 32


 387:Drivers/CMSIS/cmsis_gcc.h ****   return(result);
 388:Drivers/CMSIS/cmsis_gcc.h **** }
 389:Drivers/CMSIS/cmsis_gcc.h **** 
 390:Drivers/CMSIS/cmsis_gcc.h **** 
 391:Drivers/CMSIS/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:Drivers/CMSIS/cmsis_gcc.h **** /**
 393:Drivers/CMSIS/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:Drivers/CMSIS/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:Drivers/CMSIS/cmsis_gcc.h ****   \return               Priority Mask value
 396:Drivers/CMSIS/cmsis_gcc.h ****  */
 397:Drivers/CMSIS/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:Drivers/CMSIS/cmsis_gcc.h **** {
 399:Drivers/CMSIS/cmsis_gcc.h ****   uint32_t result;
 400:Drivers/CMSIS/cmsis_gcc.h **** 
 401:Drivers/CMSIS/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:Drivers/CMSIS/cmsis_gcc.h ****   return(result);
 403:Drivers/CMSIS/cmsis_gcc.h **** }
 404:Drivers/CMSIS/cmsis_gcc.h **** #endif
 405:Drivers/CMSIS/cmsis_gcc.h **** 
 406:Drivers/CMSIS/cmsis_gcc.h **** 
 407:Drivers/CMSIS/cmsis_gcc.h **** /**
 408:Drivers/CMSIS/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:Drivers/CMSIS/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:Drivers/CMSIS/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:Drivers/CMSIS/cmsis_gcc.h ****  */
 412:Drivers/CMSIS/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:Drivers/CMSIS/cmsis_gcc.h **** {
 414:Drivers/CMSIS/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:Drivers/CMSIS/cmsis_gcc.h **** }
 416:Drivers/CMSIS/cmsis_gcc.h **** 
 417:Drivers/CMSIS/cmsis_gcc.h **** 
 418:Drivers/CMSIS/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:Drivers/CMSIS/cmsis_gcc.h **** /**
 420:Drivers/CMSIS/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:Drivers/CMSIS/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:Drivers/CMSIS/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:Drivers/CMSIS/cmsis_gcc.h ****  */
 424:Drivers/CMSIS/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:Drivers/CMSIS/cmsis_gcc.h **** {
 426:Drivers/CMSIS/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:Drivers/CMSIS/cmsis_gcc.h **** }
 428:Drivers/CMSIS/cmsis_gcc.h **** #endif
 429:Drivers/CMSIS/cmsis_gcc.h **** 
 430:Drivers/CMSIS/cmsis_gcc.h **** 
 431:Drivers/CMSIS/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:Drivers/CMSIS/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:Drivers/CMSIS/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:Drivers/CMSIS/cmsis_gcc.h **** /**
 435:Drivers/CMSIS/cmsis_gcc.h ****   \brief   Enable FIQ
 436:Drivers/CMSIS/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:Drivers/CMSIS/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:Drivers/CMSIS/cmsis_gcc.h ****  */
 439:Drivers/CMSIS/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:Drivers/CMSIS/cmsis_gcc.h **** {
 441:Drivers/CMSIS/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:Drivers/CMSIS/cmsis_gcc.h **** }
 443:Drivers/CMSIS/cmsis_gcc.h **** 
ARM GAS  D:\noval\Temp\cc0D8957.s 			page 33


 444:Drivers/CMSIS/cmsis_gcc.h **** 
 445:Drivers/CMSIS/cmsis_gcc.h **** /**
 446:Drivers/CMSIS/cmsis_gcc.h ****   \brief   Disable FIQ
 447:Drivers/CMSIS/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:Drivers/CMSIS/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:Drivers/CMSIS/cmsis_gcc.h ****  */
 450:Drivers/CMSIS/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:Drivers/CMSIS/cmsis_gcc.h **** {
 452:Drivers/CMSIS/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:Drivers/CMSIS/cmsis_gcc.h **** }
 454:Drivers/CMSIS/cmsis_gcc.h **** 
 455:Drivers/CMSIS/cmsis_gcc.h **** 
 456:Drivers/CMSIS/cmsis_gcc.h **** /**
 457:Drivers/CMSIS/cmsis_gcc.h ****   \brief   Get Base Priority
 458:Drivers/CMSIS/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:Drivers/CMSIS/cmsis_gcc.h ****   \return               Base Priority register value
 460:Drivers/CMSIS/cmsis_gcc.h ****  */
 461:Drivers/CMSIS/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:Drivers/CMSIS/cmsis_gcc.h **** {
 463:Drivers/CMSIS/cmsis_gcc.h ****   uint32_t result;
 464:Drivers/CMSIS/cmsis_gcc.h **** 
 465:Drivers/CMSIS/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:Drivers/CMSIS/cmsis_gcc.h ****   return(result);
 467:Drivers/CMSIS/cmsis_gcc.h **** }
 468:Drivers/CMSIS/cmsis_gcc.h **** 
 469:Drivers/CMSIS/cmsis_gcc.h **** 
 470:Drivers/CMSIS/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:Drivers/CMSIS/cmsis_gcc.h **** /**
 472:Drivers/CMSIS/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:Drivers/CMSIS/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:Drivers/CMSIS/cmsis_gcc.h ****   \return               Base Priority register value
 475:Drivers/CMSIS/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:Drivers/CMSIS/cmsis_gcc.h **** {
 478:Drivers/CMSIS/cmsis_gcc.h ****   uint32_t result;
 479:Drivers/CMSIS/cmsis_gcc.h **** 
 480:Drivers/CMSIS/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:Drivers/CMSIS/cmsis_gcc.h ****   return(result);
 482:Drivers/CMSIS/cmsis_gcc.h **** }
 483:Drivers/CMSIS/cmsis_gcc.h **** #endif
 484:Drivers/CMSIS/cmsis_gcc.h **** 
 485:Drivers/CMSIS/cmsis_gcc.h **** 
 486:Drivers/CMSIS/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/cmsis_gcc.h ****   \brief   Set Base Priority
 488:Drivers/CMSIS/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:Drivers/CMSIS/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:Drivers/CMSIS/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 492:Drivers/CMSIS/cmsis_gcc.h **** {
 493:Drivers/CMSIS/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 494:Drivers/CMSIS/cmsis_gcc.h **** }
 495:Drivers/CMSIS/cmsis_gcc.h **** 
 496:Drivers/CMSIS/cmsis_gcc.h **** 
 497:Drivers/CMSIS/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 498:Drivers/CMSIS/cmsis_gcc.h **** /**
 499:Drivers/CMSIS/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 500:Drivers/CMSIS/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
ARM GAS  D:\noval\Temp\cc0D8957.s 			page 34


 501:Drivers/CMSIS/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 502:Drivers/CMSIS/cmsis_gcc.h ****  */
 503:Drivers/CMSIS/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 504:Drivers/CMSIS/cmsis_gcc.h **** {
 505:Drivers/CMSIS/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 506:Drivers/CMSIS/cmsis_gcc.h **** }
 507:Drivers/CMSIS/cmsis_gcc.h **** #endif
 508:Drivers/CMSIS/cmsis_gcc.h **** 
 509:Drivers/CMSIS/cmsis_gcc.h **** 
 510:Drivers/CMSIS/cmsis_gcc.h **** /**
 511:Drivers/CMSIS/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 512:Drivers/CMSIS/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 513:Drivers/CMSIS/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 514:Drivers/CMSIS/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 515:Drivers/CMSIS/cmsis_gcc.h ****  */
 516:Drivers/CMSIS/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 517:Drivers/CMSIS/cmsis_gcc.h **** {
 518:Drivers/CMSIS/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 519:Drivers/CMSIS/cmsis_gcc.h **** }
 520:Drivers/CMSIS/cmsis_gcc.h **** 
 521:Drivers/CMSIS/cmsis_gcc.h **** 
 522:Drivers/CMSIS/cmsis_gcc.h **** /**
 523:Drivers/CMSIS/cmsis_gcc.h ****   \brief   Get Fault Mask
 524:Drivers/CMSIS/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 525:Drivers/CMSIS/cmsis_gcc.h ****   \return               Fault Mask register value
 526:Drivers/CMSIS/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 528:Drivers/CMSIS/cmsis_gcc.h **** {
 529:Drivers/CMSIS/cmsis_gcc.h ****   uint32_t result;
 530:Drivers/CMSIS/cmsis_gcc.h **** 
 531:Drivers/CMSIS/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 532:Drivers/CMSIS/cmsis_gcc.h ****   return(result);
 533:Drivers/CMSIS/cmsis_gcc.h **** }
 534:Drivers/CMSIS/cmsis_gcc.h **** 
 535:Drivers/CMSIS/cmsis_gcc.h **** 
 536:Drivers/CMSIS/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 537:Drivers/CMSIS/cmsis_gcc.h **** /**
 538:Drivers/CMSIS/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 539:Drivers/CMSIS/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 540:Drivers/CMSIS/cmsis_gcc.h ****   \return               Fault Mask register value
 541:Drivers/CMSIS/cmsis_gcc.h ****  */
 542:Drivers/CMSIS/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 543:Drivers/CMSIS/cmsis_gcc.h **** {
 544:Drivers/CMSIS/cmsis_gcc.h ****   uint32_t result;
 545:Drivers/CMSIS/cmsis_gcc.h **** 
 546:Drivers/CMSIS/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 547:Drivers/CMSIS/cmsis_gcc.h ****   return(result);
 548:Drivers/CMSIS/cmsis_gcc.h **** }
 549:Drivers/CMSIS/cmsis_gcc.h **** #endif
 550:Drivers/CMSIS/cmsis_gcc.h **** 
 551:Drivers/CMSIS/cmsis_gcc.h **** 
 552:Drivers/CMSIS/cmsis_gcc.h **** /**
 553:Drivers/CMSIS/cmsis_gcc.h ****   \brief   Set Fault Mask
 554:Drivers/CMSIS/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 555:Drivers/CMSIS/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 556:Drivers/CMSIS/cmsis_gcc.h ****  */
 557:Drivers/CMSIS/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
ARM GAS  D:\noval\Temp\cc0D8957.s 			page 35


 558:Drivers/CMSIS/cmsis_gcc.h **** {
 559:Drivers/CMSIS/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 560:Drivers/CMSIS/cmsis_gcc.h **** }
 561:Drivers/CMSIS/cmsis_gcc.h **** 
 562:Drivers/CMSIS/cmsis_gcc.h **** 
 563:Drivers/CMSIS/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 564:Drivers/CMSIS/cmsis_gcc.h **** /**
 565:Drivers/CMSIS/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 566:Drivers/CMSIS/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 567:Drivers/CMSIS/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 568:Drivers/CMSIS/cmsis_gcc.h ****  */
 569:Drivers/CMSIS/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 570:Drivers/CMSIS/cmsis_gcc.h **** {
 571:Drivers/CMSIS/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 572:Drivers/CMSIS/cmsis_gcc.h **** }
 573:Drivers/CMSIS/cmsis_gcc.h **** #endif
 574:Drivers/CMSIS/cmsis_gcc.h **** 
 575:Drivers/CMSIS/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 576:Drivers/CMSIS/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 577:Drivers/CMSIS/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 578:Drivers/CMSIS/cmsis_gcc.h **** 
 579:Drivers/CMSIS/cmsis_gcc.h **** 
 580:Drivers/CMSIS/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 581:Drivers/CMSIS/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 582:Drivers/CMSIS/cmsis_gcc.h **** 
 583:Drivers/CMSIS/cmsis_gcc.h **** /**
 584:Drivers/CMSIS/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 585:Drivers/CMSIS/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 586:Drivers/CMSIS/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 587:Drivers/CMSIS/cmsis_gcc.h ****   mode.
 588:Drivers/CMSIS/cmsis_gcc.h ****   
 589:Drivers/CMSIS/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 590:Drivers/CMSIS/cmsis_gcc.h ****   \return               PSPLIM Register value
 591:Drivers/CMSIS/cmsis_gcc.h ****  */
 592:Drivers/CMSIS/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 593:Drivers/CMSIS/cmsis_gcc.h **** {
 594:Drivers/CMSIS/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 595:Drivers/CMSIS/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 596:Drivers/CMSIS/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 597:Drivers/CMSIS/cmsis_gcc.h ****   return 0U;
 598:Drivers/CMSIS/cmsis_gcc.h **** #else
 599:Drivers/CMSIS/cmsis_gcc.h ****   register uint32_t result;
 600:Drivers/CMSIS/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 601:Drivers/CMSIS/cmsis_gcc.h ****   return result;
 602:Drivers/CMSIS/cmsis_gcc.h **** #endif
 603:Drivers/CMSIS/cmsis_gcc.h **** }
 604:Drivers/CMSIS/cmsis_gcc.h **** 
 605:Drivers/CMSIS/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 606:Drivers/CMSIS/cmsis_gcc.h **** /**
 607:Drivers/CMSIS/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 608:Drivers/CMSIS/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 609:Drivers/CMSIS/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 610:Drivers/CMSIS/cmsis_gcc.h **** 
 611:Drivers/CMSIS/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 612:Drivers/CMSIS/cmsis_gcc.h ****   \return               PSPLIM Register value
 613:Drivers/CMSIS/cmsis_gcc.h ****  */
 614:Drivers/CMSIS/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
ARM GAS  D:\noval\Temp\cc0D8957.s 			page 36


 615:Drivers/CMSIS/cmsis_gcc.h **** {
 616:Drivers/CMSIS/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 617:Drivers/CMSIS/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 618:Drivers/CMSIS/cmsis_gcc.h ****   return 0U;
 619:Drivers/CMSIS/cmsis_gcc.h **** #else
 620:Drivers/CMSIS/cmsis_gcc.h ****   register uint32_t result;
 621:Drivers/CMSIS/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 622:Drivers/CMSIS/cmsis_gcc.h ****   return result;
 623:Drivers/CMSIS/cmsis_gcc.h **** #endif
 624:Drivers/CMSIS/cmsis_gcc.h **** }
 625:Drivers/CMSIS/cmsis_gcc.h **** #endif
 626:Drivers/CMSIS/cmsis_gcc.h **** 
 627:Drivers/CMSIS/cmsis_gcc.h **** 
 628:Drivers/CMSIS/cmsis_gcc.h **** /**
 629:Drivers/CMSIS/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 630:Drivers/CMSIS/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 631:Drivers/CMSIS/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 632:Drivers/CMSIS/cmsis_gcc.h ****   mode.
 633:Drivers/CMSIS/cmsis_gcc.h ****   
 634:Drivers/CMSIS/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 635:Drivers/CMSIS/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 636:Drivers/CMSIS/cmsis_gcc.h ****  */
 637:Drivers/CMSIS/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 638:Drivers/CMSIS/cmsis_gcc.h **** {
 639:Drivers/CMSIS/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 640:Drivers/CMSIS/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 641:Drivers/CMSIS/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 642:Drivers/CMSIS/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 643:Drivers/CMSIS/cmsis_gcc.h **** #else
 644:Drivers/CMSIS/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 645:Drivers/CMSIS/cmsis_gcc.h **** #endif
 646:Drivers/CMSIS/cmsis_gcc.h **** }
 647:Drivers/CMSIS/cmsis_gcc.h **** 
 648:Drivers/CMSIS/cmsis_gcc.h **** 
 649:Drivers/CMSIS/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 650:Drivers/CMSIS/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 652:Drivers/CMSIS/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 654:Drivers/CMSIS/cmsis_gcc.h **** 
 655:Drivers/CMSIS/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 656:Drivers/CMSIS/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 657:Drivers/CMSIS/cmsis_gcc.h ****  */
 658:Drivers/CMSIS/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 659:Drivers/CMSIS/cmsis_gcc.h **** {
 660:Drivers/CMSIS/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 661:Drivers/CMSIS/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 662:Drivers/CMSIS/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 663:Drivers/CMSIS/cmsis_gcc.h **** #else
 664:Drivers/CMSIS/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 665:Drivers/CMSIS/cmsis_gcc.h **** #endif
 666:Drivers/CMSIS/cmsis_gcc.h **** }
 667:Drivers/CMSIS/cmsis_gcc.h **** #endif
 668:Drivers/CMSIS/cmsis_gcc.h **** 
 669:Drivers/CMSIS/cmsis_gcc.h **** 
 670:Drivers/CMSIS/cmsis_gcc.h **** /**
 671:Drivers/CMSIS/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
ARM GAS  D:\noval\Temp\cc0D8957.s 			page 37


 672:Drivers/CMSIS/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 673:Drivers/CMSIS/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 674:Drivers/CMSIS/cmsis_gcc.h ****   mode.
 675:Drivers/CMSIS/cmsis_gcc.h **** 
 676:Drivers/CMSIS/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 677:Drivers/CMSIS/cmsis_gcc.h ****   \return               MSPLIM Register value
 678:Drivers/CMSIS/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 680:Drivers/CMSIS/cmsis_gcc.h **** {
 681:Drivers/CMSIS/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 682:Drivers/CMSIS/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 683:Drivers/CMSIS/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 684:Drivers/CMSIS/cmsis_gcc.h ****   return 0U;
 685:Drivers/CMSIS/cmsis_gcc.h **** #else
 686:Drivers/CMSIS/cmsis_gcc.h ****   register uint32_t result;
 687:Drivers/CMSIS/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 688:Drivers/CMSIS/cmsis_gcc.h ****   return result;
 689:Drivers/CMSIS/cmsis_gcc.h **** #endif
 690:Drivers/CMSIS/cmsis_gcc.h **** }
 691:Drivers/CMSIS/cmsis_gcc.h **** 
 692:Drivers/CMSIS/cmsis_gcc.h **** 
 693:Drivers/CMSIS/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 694:Drivers/CMSIS/cmsis_gcc.h **** /**
 695:Drivers/CMSIS/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 696:Drivers/CMSIS/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 697:Drivers/CMSIS/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 698:Drivers/CMSIS/cmsis_gcc.h **** 
 699:Drivers/CMSIS/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 700:Drivers/CMSIS/cmsis_gcc.h ****   \return               MSPLIM Register value
 701:Drivers/CMSIS/cmsis_gcc.h ****  */
 702:Drivers/CMSIS/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 703:Drivers/CMSIS/cmsis_gcc.h **** {
 704:Drivers/CMSIS/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 705:Drivers/CMSIS/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 706:Drivers/CMSIS/cmsis_gcc.h ****   return 0U;
 707:Drivers/CMSIS/cmsis_gcc.h **** #else
 708:Drivers/CMSIS/cmsis_gcc.h ****   register uint32_t result;
 709:Drivers/CMSIS/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 710:Drivers/CMSIS/cmsis_gcc.h ****   return result;
 711:Drivers/CMSIS/cmsis_gcc.h **** #endif
 712:Drivers/CMSIS/cmsis_gcc.h **** }
 713:Drivers/CMSIS/cmsis_gcc.h **** #endif
 714:Drivers/CMSIS/cmsis_gcc.h **** 
 715:Drivers/CMSIS/cmsis_gcc.h **** 
 716:Drivers/CMSIS/cmsis_gcc.h **** /**
 717:Drivers/CMSIS/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 718:Drivers/CMSIS/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 719:Drivers/CMSIS/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 720:Drivers/CMSIS/cmsis_gcc.h ****   mode.
 721:Drivers/CMSIS/cmsis_gcc.h **** 
 722:Drivers/CMSIS/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 723:Drivers/CMSIS/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 724:Drivers/CMSIS/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 726:Drivers/CMSIS/cmsis_gcc.h **** {
 727:Drivers/CMSIS/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 728:Drivers/CMSIS/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
ARM GAS  D:\noval\Temp\cc0D8957.s 			page 38


 729:Drivers/CMSIS/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 730:Drivers/CMSIS/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 731:Drivers/CMSIS/cmsis_gcc.h **** #else
 732:Drivers/CMSIS/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 733:Drivers/CMSIS/cmsis_gcc.h **** #endif
 734:Drivers/CMSIS/cmsis_gcc.h **** }
 735:Drivers/CMSIS/cmsis_gcc.h **** 
 736:Drivers/CMSIS/cmsis_gcc.h **** 
 737:Drivers/CMSIS/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 738:Drivers/CMSIS/cmsis_gcc.h **** /**
 739:Drivers/CMSIS/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 740:Drivers/CMSIS/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 741:Drivers/CMSIS/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 742:Drivers/CMSIS/cmsis_gcc.h **** 
 743:Drivers/CMSIS/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 744:Drivers/CMSIS/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 745:Drivers/CMSIS/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 747:Drivers/CMSIS/cmsis_gcc.h **** {
 748:Drivers/CMSIS/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 749:Drivers/CMSIS/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 750:Drivers/CMSIS/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 751:Drivers/CMSIS/cmsis_gcc.h **** #else
 752:Drivers/CMSIS/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 753:Drivers/CMSIS/cmsis_gcc.h **** #endif
 754:Drivers/CMSIS/cmsis_gcc.h **** }
 755:Drivers/CMSIS/cmsis_gcc.h **** #endif
 756:Drivers/CMSIS/cmsis_gcc.h **** 
 757:Drivers/CMSIS/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 758:Drivers/CMSIS/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 759:Drivers/CMSIS/cmsis_gcc.h **** 
 760:Drivers/CMSIS/cmsis_gcc.h **** 
 761:Drivers/CMSIS/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 762:Drivers/CMSIS/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 763:Drivers/CMSIS/cmsis_gcc.h **** 
 764:Drivers/CMSIS/cmsis_gcc.h **** /**
 765:Drivers/CMSIS/cmsis_gcc.h ****   \brief   Get FPSCR
 766:Drivers/CMSIS/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 767:Drivers/CMSIS/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 768:Drivers/CMSIS/cmsis_gcc.h ****  */
 769:Drivers/CMSIS/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 770:Drivers/CMSIS/cmsis_gcc.h **** {
 771:Drivers/CMSIS/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 772:Drivers/CMSIS/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 773:Drivers/CMSIS/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >=
 774:Drivers/CMSIS/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 775:Drivers/CMSIS/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 776:Drivers/CMSIS/cmsis_gcc.h **** #else
 777:Drivers/CMSIS/cmsis_gcc.h ****   uint32_t result;
 778:Drivers/CMSIS/cmsis_gcc.h **** 
 779:Drivers/CMSIS/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 780:Drivers/CMSIS/cmsis_gcc.h ****   return(result);
 781:Drivers/CMSIS/cmsis_gcc.h **** #endif
 782:Drivers/CMSIS/cmsis_gcc.h **** #else
 783:Drivers/CMSIS/cmsis_gcc.h ****   return(0U);
 784:Drivers/CMSIS/cmsis_gcc.h **** #endif
 785:Drivers/CMSIS/cmsis_gcc.h **** }
ARM GAS  D:\noval\Temp\cc0D8957.s 			page 39


 786:Drivers/CMSIS/cmsis_gcc.h **** 
 787:Drivers/CMSIS/cmsis_gcc.h **** 
 788:Drivers/CMSIS/cmsis_gcc.h **** /**
 789:Drivers/CMSIS/cmsis_gcc.h ****   \brief   Set FPSCR
 790:Drivers/CMSIS/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 791:Drivers/CMSIS/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 792:Drivers/CMSIS/cmsis_gcc.h ****  */
 793:Drivers/CMSIS/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 794:Drivers/CMSIS/cmsis_gcc.h **** {
 795:Drivers/CMSIS/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 796:Drivers/CMSIS/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 797:Drivers/CMSIS/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr) || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >=
 798:Drivers/CMSIS/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 799:Drivers/CMSIS/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 800:Drivers/CMSIS/cmsis_gcc.h **** #else
 801:Drivers/CMSIS/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 802:Drivers/CMSIS/cmsis_gcc.h **** #endif
 803:Drivers/CMSIS/cmsis_gcc.h **** #else
 804:Drivers/CMSIS/cmsis_gcc.h ****   (void)fpscr;
 805:Drivers/CMSIS/cmsis_gcc.h **** #endif
 806:Drivers/CMSIS/cmsis_gcc.h **** }
 807:Drivers/CMSIS/cmsis_gcc.h **** 
 808:Drivers/CMSIS/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 809:Drivers/CMSIS/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 810:Drivers/CMSIS/cmsis_gcc.h **** 
 811:Drivers/CMSIS/cmsis_gcc.h **** 
 812:Drivers/CMSIS/cmsis_gcc.h **** 
 813:Drivers/CMSIS/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 814:Drivers/CMSIS/cmsis_gcc.h **** 
 815:Drivers/CMSIS/cmsis_gcc.h **** 
 816:Drivers/CMSIS/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 817:Drivers/CMSIS/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 818:Drivers/CMSIS/cmsis_gcc.h ****   Access to dedicated instructions
 819:Drivers/CMSIS/cmsis_gcc.h ****   @{
 820:Drivers/CMSIS/cmsis_gcc.h **** */
 821:Drivers/CMSIS/cmsis_gcc.h **** 
 822:Drivers/CMSIS/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 823:Drivers/CMSIS/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 824:Drivers/CMSIS/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 825:Drivers/CMSIS/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 826:Drivers/CMSIS/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 827:Drivers/CMSIS/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 828:Drivers/CMSIS/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 829:Drivers/CMSIS/cmsis_gcc.h **** #else
 830:Drivers/CMSIS/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 831:Drivers/CMSIS/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 832:Drivers/CMSIS/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 833:Drivers/CMSIS/cmsis_gcc.h **** #endif
 834:Drivers/CMSIS/cmsis_gcc.h **** 
 835:Drivers/CMSIS/cmsis_gcc.h **** /**
 836:Drivers/CMSIS/cmsis_gcc.h ****   \brief   No Operation
 837:Drivers/CMSIS/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 838:Drivers/CMSIS/cmsis_gcc.h ****  */
 839:Drivers/CMSIS/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 840:Drivers/CMSIS/cmsis_gcc.h **** 
 841:Drivers/CMSIS/cmsis_gcc.h **** /**
 842:Drivers/CMSIS/cmsis_gcc.h ****   \brief   Wait For Interrupt
ARM GAS  D:\noval\Temp\cc0D8957.s 			page 40


 843:Drivers/CMSIS/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 844:Drivers/CMSIS/cmsis_gcc.h ****  */
 845:Drivers/CMSIS/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 846:Drivers/CMSIS/cmsis_gcc.h **** 
 847:Drivers/CMSIS/cmsis_gcc.h **** 
 848:Drivers/CMSIS/cmsis_gcc.h **** /**
 849:Drivers/CMSIS/cmsis_gcc.h ****   \brief   Wait For Event
 850:Drivers/CMSIS/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 851:Drivers/CMSIS/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 852:Drivers/CMSIS/cmsis_gcc.h ****  */
 853:Drivers/CMSIS/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 854:Drivers/CMSIS/cmsis_gcc.h **** 
 855:Drivers/CMSIS/cmsis_gcc.h **** 
 856:Drivers/CMSIS/cmsis_gcc.h **** /**
 857:Drivers/CMSIS/cmsis_gcc.h ****   \brief   Send Event
 858:Drivers/CMSIS/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 859:Drivers/CMSIS/cmsis_gcc.h ****  */
 860:Drivers/CMSIS/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 861:Drivers/CMSIS/cmsis_gcc.h **** 
 862:Drivers/CMSIS/cmsis_gcc.h **** 
 863:Drivers/CMSIS/cmsis_gcc.h **** /**
 864:Drivers/CMSIS/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 865:Drivers/CMSIS/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 866:Drivers/CMSIS/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 867:Drivers/CMSIS/cmsis_gcc.h ****            after the instruction has been completed.
 868:Drivers/CMSIS/cmsis_gcc.h ****  */
 869:Drivers/CMSIS/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 870:Drivers/CMSIS/cmsis_gcc.h **** {
 871:Drivers/CMSIS/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 872:Drivers/CMSIS/cmsis_gcc.h **** }
 873:Drivers/CMSIS/cmsis_gcc.h **** 
 874:Drivers/CMSIS/cmsis_gcc.h **** 
 875:Drivers/CMSIS/cmsis_gcc.h **** /**
 876:Drivers/CMSIS/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 877:Drivers/CMSIS/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 878:Drivers/CMSIS/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 879:Drivers/CMSIS/cmsis_gcc.h ****  */
 880:Drivers/CMSIS/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
  57              		.loc 3 880 27 view .LVU9
  58              	.LBB15:
 881:Drivers/CMSIS/cmsis_gcc.h **** {
 882:Drivers/CMSIS/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
  59              		.loc 3 882 3 view .LVU10
  60              		.syntax divided
  61              	@ 882 "Drivers/CMSIS/cmsis_gcc.h" 1
  62 001c BFF34F8F 		dsb 0xF
  63              	@ 0 "" 2
  64              		.thumb
  65              		.syntax unified
  66              	.LBE15:
  67              	.LBE14:
1327:Drivers/CMSIS/core_cm23.h ****     __ISB();
  68              		.loc 2 1327 5 view .LVU11
  69              	.LBB16:
  70              	.LBI16:
 869:Drivers/CMSIS/cmsis_gcc.h **** {
  71              		.loc 3 869 27 view .LVU12
ARM GAS  D:\noval\Temp\cc0D8957.s 			page 41


  72              	.LBB17:
 871:Drivers/CMSIS/cmsis_gcc.h **** }
  73              		.loc 3 871 3 view .LVU13
  74              		.syntax divided
  75              	@ 871 "Drivers/CMSIS/cmsis_gcc.h" 1
  76 0020 BFF36F8F 		isb 0xF
  77              	@ 0 "" 2
  78              		.thumb
  79              		.syntax unified
  80              	.L1:
  81              	.LBE17:
  82              	.LBE16:
1328:Drivers/CMSIS/core_cm23.h ****   }
1329:Drivers/CMSIS/core_cm23.h **** }
  83              		.loc 2 1329 1 is_stmt 0 view .LVU14
  84              		@ sp needed
  85 0024 7047     		bx	lr
  86              		.cfi_endproc
  87              	.LFE48:
  89              		.section	.text.__NVIC_SetPriority,"ax",%progbits
  90              		.align	1
  91              		.syntax unified
  92              		.code	16
  93              		.thumb_func
  95              	__NVIC_SetPriority:
  96              	.LVL2:
  97              	.LFB53:
1330:Drivers/CMSIS/core_cm23.h **** 
1331:Drivers/CMSIS/core_cm23.h **** 
1332:Drivers/CMSIS/core_cm23.h **** /**
1333:Drivers/CMSIS/core_cm23.h ****   \brief   Get Pending Interrupt
1334:Drivers/CMSIS/core_cm23.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
1335:Drivers/CMSIS/core_cm23.h ****   \param [in]      IRQn  Device specific interrupt number.
1336:Drivers/CMSIS/core_cm23.h ****   \return             0  Interrupt status is not pending.
1337:Drivers/CMSIS/core_cm23.h ****   \return             1  Interrupt status is pending.
1338:Drivers/CMSIS/core_cm23.h ****   \note    IRQn must not be negative.
1339:Drivers/CMSIS/core_cm23.h ****  */
1340:Drivers/CMSIS/core_cm23.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
1341:Drivers/CMSIS/core_cm23.h **** {
1342:Drivers/CMSIS/core_cm23.h ****   if ((int32_t)(IRQn) >= 0)
1343:Drivers/CMSIS/core_cm23.h ****   {
1344:Drivers/CMSIS/core_cm23.h ****     return((uint32_t)(((NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1345:Drivers/CMSIS/core_cm23.h ****   }
1346:Drivers/CMSIS/core_cm23.h ****   else
1347:Drivers/CMSIS/core_cm23.h ****   {
1348:Drivers/CMSIS/core_cm23.h ****     return(0U);
1349:Drivers/CMSIS/core_cm23.h ****   }
1350:Drivers/CMSIS/core_cm23.h **** }
1351:Drivers/CMSIS/core_cm23.h **** 
1352:Drivers/CMSIS/core_cm23.h **** 
1353:Drivers/CMSIS/core_cm23.h **** /**
1354:Drivers/CMSIS/core_cm23.h ****   \brief   Set Pending Interrupt
1355:Drivers/CMSIS/core_cm23.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
1356:Drivers/CMSIS/core_cm23.h ****   \param [in]      IRQn  Device specific interrupt number.
1357:Drivers/CMSIS/core_cm23.h ****   \note    IRQn must not be negative.
1358:Drivers/CMSIS/core_cm23.h ****  */
1359:Drivers/CMSIS/core_cm23.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
ARM GAS  D:\noval\Temp\cc0D8957.s 			page 42


1360:Drivers/CMSIS/core_cm23.h **** {
1361:Drivers/CMSIS/core_cm23.h ****   if ((int32_t)(IRQn) >= 0)
1362:Drivers/CMSIS/core_cm23.h ****   {
1363:Drivers/CMSIS/core_cm23.h ****     NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1364:Drivers/CMSIS/core_cm23.h ****   }
1365:Drivers/CMSIS/core_cm23.h **** }
1366:Drivers/CMSIS/core_cm23.h **** 
1367:Drivers/CMSIS/core_cm23.h **** 
1368:Drivers/CMSIS/core_cm23.h **** /**
1369:Drivers/CMSIS/core_cm23.h ****   \brief   Clear Pending Interrupt
1370:Drivers/CMSIS/core_cm23.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
1371:Drivers/CMSIS/core_cm23.h ****   \param [in]      IRQn  Device specific interrupt number.
1372:Drivers/CMSIS/core_cm23.h ****   \note    IRQn must not be negative.
1373:Drivers/CMSIS/core_cm23.h ****  */
1374:Drivers/CMSIS/core_cm23.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1375:Drivers/CMSIS/core_cm23.h **** {
1376:Drivers/CMSIS/core_cm23.h ****   if ((int32_t)(IRQn) >= 0)
1377:Drivers/CMSIS/core_cm23.h ****   {
1378:Drivers/CMSIS/core_cm23.h ****     NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1379:Drivers/CMSIS/core_cm23.h ****   }
1380:Drivers/CMSIS/core_cm23.h **** }
1381:Drivers/CMSIS/core_cm23.h **** 
1382:Drivers/CMSIS/core_cm23.h **** 
1383:Drivers/CMSIS/core_cm23.h **** /**
1384:Drivers/CMSIS/core_cm23.h ****   \brief   Get Active Interrupt
1385:Drivers/CMSIS/core_cm23.h ****   \details Reads the active register in the NVIC and returns the active bit for the device specific
1386:Drivers/CMSIS/core_cm23.h ****   \param [in]      IRQn  Device specific interrupt number.
1387:Drivers/CMSIS/core_cm23.h ****   \return             0  Interrupt status is not active.
1388:Drivers/CMSIS/core_cm23.h ****   \return             1  Interrupt status is active.
1389:Drivers/CMSIS/core_cm23.h ****   \note    IRQn must not be negative.
1390:Drivers/CMSIS/core_cm23.h ****  */
1391:Drivers/CMSIS/core_cm23.h **** __STATIC_INLINE uint32_t __NVIC_GetActive(IRQn_Type IRQn)
1392:Drivers/CMSIS/core_cm23.h **** {
1393:Drivers/CMSIS/core_cm23.h ****   if ((int32_t)(IRQn) >= 0)
1394:Drivers/CMSIS/core_cm23.h ****   {
1395:Drivers/CMSIS/core_cm23.h ****     return((uint32_t)(((NVIC->IABR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1396:Drivers/CMSIS/core_cm23.h ****   }
1397:Drivers/CMSIS/core_cm23.h ****   else
1398:Drivers/CMSIS/core_cm23.h ****   {
1399:Drivers/CMSIS/core_cm23.h ****     return(0U);
1400:Drivers/CMSIS/core_cm23.h ****   }
1401:Drivers/CMSIS/core_cm23.h **** }
1402:Drivers/CMSIS/core_cm23.h **** 
1403:Drivers/CMSIS/core_cm23.h **** 
1404:Drivers/CMSIS/core_cm23.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
1405:Drivers/CMSIS/core_cm23.h **** /**
1406:Drivers/CMSIS/core_cm23.h ****   \brief   Get Interrupt Target State
1407:Drivers/CMSIS/core_cm23.h ****   \details Reads the interrupt target field in the NVIC and returns the interrupt target bit for th
1408:Drivers/CMSIS/core_cm23.h ****   \param [in]      IRQn  Device specific interrupt number.
1409:Drivers/CMSIS/core_cm23.h ****   \return             0  if interrupt is assigned to Secure
1410:Drivers/CMSIS/core_cm23.h ****   \return             1  if interrupt is assigned to Non Secure
1411:Drivers/CMSIS/core_cm23.h ****   \note    IRQn must not be negative.
1412:Drivers/CMSIS/core_cm23.h ****  */
1413:Drivers/CMSIS/core_cm23.h **** __STATIC_INLINE uint32_t NVIC_GetTargetState(IRQn_Type IRQn)
1414:Drivers/CMSIS/core_cm23.h **** {
1415:Drivers/CMSIS/core_cm23.h ****   if ((int32_t)(IRQn) >= 0)
1416:Drivers/CMSIS/core_cm23.h ****   {
ARM GAS  D:\noval\Temp\cc0D8957.s 			page 43


1417:Drivers/CMSIS/core_cm23.h ****     return((uint32_t)(((NVIC->ITNS[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1418:Drivers/CMSIS/core_cm23.h ****   }
1419:Drivers/CMSIS/core_cm23.h ****   else
1420:Drivers/CMSIS/core_cm23.h ****   {
1421:Drivers/CMSIS/core_cm23.h ****     return(0U);
1422:Drivers/CMSIS/core_cm23.h ****   }
1423:Drivers/CMSIS/core_cm23.h **** }
1424:Drivers/CMSIS/core_cm23.h **** 
1425:Drivers/CMSIS/core_cm23.h **** 
1426:Drivers/CMSIS/core_cm23.h **** /**
1427:Drivers/CMSIS/core_cm23.h ****   \brief   Set Interrupt Target State
1428:Drivers/CMSIS/core_cm23.h ****   \details Sets the interrupt target field in the NVIC and returns the interrupt target bit for the
1429:Drivers/CMSIS/core_cm23.h ****   \param [in]      IRQn  Device specific interrupt number.
1430:Drivers/CMSIS/core_cm23.h ****   \return             0  if interrupt is assigned to Secure
1431:Drivers/CMSIS/core_cm23.h ****                       1  if interrupt is assigned to Non Secure
1432:Drivers/CMSIS/core_cm23.h ****   \note    IRQn must not be negative.
1433:Drivers/CMSIS/core_cm23.h ****  */
1434:Drivers/CMSIS/core_cm23.h **** __STATIC_INLINE uint32_t NVIC_SetTargetState(IRQn_Type IRQn)
1435:Drivers/CMSIS/core_cm23.h **** {
1436:Drivers/CMSIS/core_cm23.h ****   if ((int32_t)(IRQn) >= 0)
1437:Drivers/CMSIS/core_cm23.h ****   {
1438:Drivers/CMSIS/core_cm23.h ****     NVIC->ITNS[(((uint32_t)IRQn) >> 5UL)] |=  ((uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL)));
1439:Drivers/CMSIS/core_cm23.h ****     return((uint32_t)(((NVIC->ITNS[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1440:Drivers/CMSIS/core_cm23.h ****   }
1441:Drivers/CMSIS/core_cm23.h ****   else
1442:Drivers/CMSIS/core_cm23.h ****   {
1443:Drivers/CMSIS/core_cm23.h ****     return(0U);
1444:Drivers/CMSIS/core_cm23.h ****   }
1445:Drivers/CMSIS/core_cm23.h **** }
1446:Drivers/CMSIS/core_cm23.h **** 
1447:Drivers/CMSIS/core_cm23.h **** 
1448:Drivers/CMSIS/core_cm23.h **** /**
1449:Drivers/CMSIS/core_cm23.h ****   \brief   Clear Interrupt Target State
1450:Drivers/CMSIS/core_cm23.h ****   \details Clears the interrupt target field in the NVIC and returns the interrupt target bit for t
1451:Drivers/CMSIS/core_cm23.h ****   \param [in]      IRQn  Device specific interrupt number.
1452:Drivers/CMSIS/core_cm23.h ****   \return             0  if interrupt is assigned to Secure
1453:Drivers/CMSIS/core_cm23.h ****                       1  if interrupt is assigned to Non Secure
1454:Drivers/CMSIS/core_cm23.h ****   \note    IRQn must not be negative.
1455:Drivers/CMSIS/core_cm23.h ****  */
1456:Drivers/CMSIS/core_cm23.h **** __STATIC_INLINE uint32_t NVIC_ClearTargetState(IRQn_Type IRQn)
1457:Drivers/CMSIS/core_cm23.h **** {
1458:Drivers/CMSIS/core_cm23.h ****   if ((int32_t)(IRQn) >= 0)
1459:Drivers/CMSIS/core_cm23.h ****   {
1460:Drivers/CMSIS/core_cm23.h ****     NVIC->ITNS[(((uint32_t)IRQn) >> 5UL)] &= ~((uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL)));
1461:Drivers/CMSIS/core_cm23.h ****     return((uint32_t)(((NVIC->ITNS[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1462:Drivers/CMSIS/core_cm23.h ****   }
1463:Drivers/CMSIS/core_cm23.h ****   else
1464:Drivers/CMSIS/core_cm23.h ****   {
1465:Drivers/CMSIS/core_cm23.h ****     return(0U);
1466:Drivers/CMSIS/core_cm23.h ****   }
1467:Drivers/CMSIS/core_cm23.h **** }
1468:Drivers/CMSIS/core_cm23.h **** #endif /* defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U) */
1469:Drivers/CMSIS/core_cm23.h **** 
1470:Drivers/CMSIS/core_cm23.h **** 
1471:Drivers/CMSIS/core_cm23.h **** /**
1472:Drivers/CMSIS/core_cm23.h ****   \brief   Set Interrupt Priority
1473:Drivers/CMSIS/core_cm23.h ****   \details Sets the priority of a device specific interrupt or a processor exception.
ARM GAS  D:\noval\Temp\cc0D8957.s 			page 44


1474:Drivers/CMSIS/core_cm23.h ****            The interrupt number can be positive to specify a device specific interrupt,
1475:Drivers/CMSIS/core_cm23.h ****            or negative to specify a processor exception.
1476:Drivers/CMSIS/core_cm23.h ****   \param [in]      IRQn  Interrupt number.
1477:Drivers/CMSIS/core_cm23.h ****   \param [in]  priority  Priority to set.
1478:Drivers/CMSIS/core_cm23.h ****   \note    The priority cannot be set for every processor exception.
1479:Drivers/CMSIS/core_cm23.h ****  */
1480:Drivers/CMSIS/core_cm23.h **** __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1481:Drivers/CMSIS/core_cm23.h **** {
  98              		.loc 2 1481 1 is_stmt 1 view -0
  99              		.cfi_startproc
 100              		@ args = 0, pretend = 0, frame = 0
 101              		@ frame_needed = 0, uses_anonymous_args = 0
 102              		.loc 2 1481 1 is_stmt 0 view .LVU16
 103 0000 70B5     		push	{r4, r5, r6, lr}
 104              	.LCFI0:
 105              		.cfi_def_cfa_offset 16
 106              		.cfi_offset 4, -16
 107              		.cfi_offset 5, -12
 108              		.cfi_offset 6, -8
 109              		.cfi_offset 14, -4
1482:Drivers/CMSIS/core_cm23.h ****   if ((int32_t)(IRQn) >= 0)
 110              		.loc 2 1482 3 is_stmt 1 view .LVU17
 111              		.loc 2 1482 6 is_stmt 0 view .LVU18
 112 0002 0028     		cmp	r0, #0
 113 0004 14DB     		blt	.L4
1483:Drivers/CMSIS/core_cm23.h ****   {
1484:Drivers/CMSIS/core_cm23.h ****     NVIC->IPR[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IPR[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn
 114              		.loc 2 1484 5 is_stmt 1 view .LVU19
 115              		.loc 2 1484 55 is_stmt 0 view .LVU20
 116 0006 8308     		lsrs	r3, r0, #2
 117              		.loc 2 1484 54 view .LVU21
 118 0008 4EF20015 		movw	r5, #57600
 119 000c CEF20005 		movt	r5, 57344
 120 0010 C033     		adds	r3, r3, #192
 121 0012 9B00     		lsls	r3, r3, #2
 122 0014 5C59     		ldr	r4, [r3, r5]
 123              		.loc 2 1484 85 view .LVU22
 124 0016 0322     		movs	r2, #3
 125 0018 1040     		ands	r0, r2
 126              	.LVL3:
 127              		.loc 2 1484 85 view .LVU23
 128 001a C000     		lsls	r0, r0, #3
 129              		.loc 2 1484 82 view .LVU24
 130 001c FC32     		adds	r2, r2, #252
 131 001e 1600     		movs	r6, r2
 132 0020 8640     		lsls	r6, r6, r0
 133              		.loc 2 1484 34 view .LVU25
 134 0022 B443     		bics	r4, r6
1485:Drivers/CMSIS/core_cm23.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 135              		.loc 2 1485 20 view .LVU26
 136 0024 8901     		lsls	r1, r1, #6
 137              	.LVL4:
 138              		.loc 2 1485 48 view .LVU27
 139 0026 0A40     		ands	r2, r1
 140              		.loc 2 1485 68 view .LVU28
 141 0028 8240     		lsls	r2, r2, r0
1484:Drivers/CMSIS/core_cm23.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
ARM GAS  D:\noval\Temp\cc0D8957.s 			page 45


 142              		.loc 2 1484 104 view .LVU29
 143 002a 2243     		orrs	r2, r4
1484:Drivers/CMSIS/core_cm23.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 144              		.loc 2 1484 31 view .LVU30
 145 002c 5A51     		str	r2, [r3, r5]
 146              	.L3:
1486:Drivers/CMSIS/core_cm23.h ****   }
1487:Drivers/CMSIS/core_cm23.h ****   else
1488:Drivers/CMSIS/core_cm23.h ****   {
1489:Drivers/CMSIS/core_cm23.h ****     SCB->SHPR[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHPR[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn
1490:Drivers/CMSIS/core_cm23.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
1491:Drivers/CMSIS/core_cm23.h ****   }
1492:Drivers/CMSIS/core_cm23.h **** }
 147              		.loc 2 1492 1 view .LVU31
 148              		@ sp needed
 149 002e 70BD     		pop	{r4, r5, r6, pc}
 150              	.LVL5:
 151              	.L4:
1489:Drivers/CMSIS/core_cm23.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 152              		.loc 2 1489 5 is_stmt 1 view .LVU32
1489:Drivers/CMSIS/core_cm23.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 153              		.loc 2 1489 55 is_stmt 0 view .LVU33
 154 0030 0F23     		movs	r3, #15
 155 0032 0340     		ands	r3, r0
 156 0034 083B     		subs	r3, r3, #8
 157 0036 9B08     		lsrs	r3, r3, #2
1489:Drivers/CMSIS/core_cm23.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 158              		.loc 2 1489 54 view .LVU34
 159 0038 0633     		adds	r3, r3, #6
 160 003a 9B00     		lsls	r3, r3, #2
 161 003c 4EF6005C 		movw	ip, #60672
 162 0040 CEF2000C 		movt	ip, 57344
 163 0044 6344     		add	r3, r3, ip
 164 0046 5C68     		ldr	r4, [r3, #4]
1489:Drivers/CMSIS/core_cm23.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 165              		.loc 2 1489 85 view .LVU35
 166 0048 0322     		movs	r2, #3
 167 004a 1040     		ands	r0, r2
 168              	.LVL6:
1489:Drivers/CMSIS/core_cm23.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 169              		.loc 2 1489 85 view .LVU36
 170 004c C000     		lsls	r0, r0, #3
1489:Drivers/CMSIS/core_cm23.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 171              		.loc 2 1489 82 view .LVU37
 172 004e FC32     		adds	r2, r2, #252
 173 0050 1500     		movs	r5, r2
 174 0052 8540     		lsls	r5, r5, r0
1489:Drivers/CMSIS/core_cm23.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 175              		.loc 2 1489 34 view .LVU38
 176 0054 AC43     		bics	r4, r5
1490:Drivers/CMSIS/core_cm23.h ****   }
 177              		.loc 2 1490 20 view .LVU39
 178 0056 8901     		lsls	r1, r1, #6
 179              	.LVL7:
1490:Drivers/CMSIS/core_cm23.h ****   }
 180              		.loc 2 1490 48 view .LVU40
 181 0058 0A40     		ands	r2, r1
ARM GAS  D:\noval\Temp\cc0D8957.s 			page 46


1490:Drivers/CMSIS/core_cm23.h ****   }
 182              		.loc 2 1490 68 view .LVU41
 183 005a 8240     		lsls	r2, r2, r0
1489:Drivers/CMSIS/core_cm23.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 184              		.loc 2 1489 104 view .LVU42
 185 005c 2243     		orrs	r2, r4
1489:Drivers/CMSIS/core_cm23.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 186              		.loc 2 1489 31 view .LVU43
 187 005e 5A60     		str	r2, [r3, #4]
 188              		.loc 2 1492 1 view .LVU44
 189 0060 E5E7     		b	.L3
 190              		.cfi_endproc
 191              	.LFE53:
 193              		.section	.text.__NVIC_SystemReset,"ax",%progbits
 194              		.align	1
 195              		.syntax unified
 196              		.code	16
 197              		.thumb_func
 199              	__NVIC_SystemReset:
 200              	.LFB57:
1493:Drivers/CMSIS/core_cm23.h **** 
1494:Drivers/CMSIS/core_cm23.h **** 
1495:Drivers/CMSIS/core_cm23.h **** /**
1496:Drivers/CMSIS/core_cm23.h ****   \brief   Get Interrupt Priority
1497:Drivers/CMSIS/core_cm23.h ****   \details Reads the priority of a device specific interrupt or a processor exception.
1498:Drivers/CMSIS/core_cm23.h ****            The interrupt number can be positive to specify a device specific interrupt,
1499:Drivers/CMSIS/core_cm23.h ****            or negative to specify a processor exception.
1500:Drivers/CMSIS/core_cm23.h ****   \param [in]   IRQn  Interrupt number.
1501:Drivers/CMSIS/core_cm23.h ****   \return             Interrupt Priority.
1502:Drivers/CMSIS/core_cm23.h ****                       Value is aligned automatically to the implemented priority bits of the microc
1503:Drivers/CMSIS/core_cm23.h ****  */
1504:Drivers/CMSIS/core_cm23.h **** __STATIC_INLINE uint32_t __NVIC_GetPriority(IRQn_Type IRQn)
1505:Drivers/CMSIS/core_cm23.h **** {
1506:Drivers/CMSIS/core_cm23.h **** 
1507:Drivers/CMSIS/core_cm23.h ****   if ((int32_t)(IRQn) >= 0)
1508:Drivers/CMSIS/core_cm23.h ****   {
1509:Drivers/CMSIS/core_cm23.h ****     return((uint32_t)(((NVIC->IPR[ _IP_IDX(IRQn)] >> _BIT_SHIFT(IRQn) ) & (uint32_t)0xFFUL) >> (8U 
1510:Drivers/CMSIS/core_cm23.h ****   }
1511:Drivers/CMSIS/core_cm23.h ****   else
1512:Drivers/CMSIS/core_cm23.h ****   {
1513:Drivers/CMSIS/core_cm23.h ****     return((uint32_t)(((SCB->SHPR[_SHP_IDX(IRQn)] >> _BIT_SHIFT(IRQn) ) & (uint32_t)0xFFUL) >> (8U 
1514:Drivers/CMSIS/core_cm23.h ****   }
1515:Drivers/CMSIS/core_cm23.h **** }
1516:Drivers/CMSIS/core_cm23.h **** 
1517:Drivers/CMSIS/core_cm23.h **** 
1518:Drivers/CMSIS/core_cm23.h **** /**
1519:Drivers/CMSIS/core_cm23.h ****   \brief   Set Interrupt Vector
1520:Drivers/CMSIS/core_cm23.h ****   \details Sets an interrupt vector in SRAM based interrupt vector table.
1521:Drivers/CMSIS/core_cm23.h ****            The interrupt number can be positive to specify a device specific interrupt,
1522:Drivers/CMSIS/core_cm23.h ****            or negative to specify a processor exception.
1523:Drivers/CMSIS/core_cm23.h ****            VTOR must been relocated to SRAM before.
1524:Drivers/CMSIS/core_cm23.h ****            If VTOR is not present address 0 must be mapped to SRAM.
1525:Drivers/CMSIS/core_cm23.h ****   \param [in]   IRQn      Interrupt number
1526:Drivers/CMSIS/core_cm23.h ****   \param [in]   vector    Address of interrupt handler function
1527:Drivers/CMSIS/core_cm23.h ****  */
1528:Drivers/CMSIS/core_cm23.h **** __STATIC_INLINE void __NVIC_SetVector(IRQn_Type IRQn, uint32_t vector)
1529:Drivers/CMSIS/core_cm23.h **** {
ARM GAS  D:\noval\Temp\cc0D8957.s 			page 47


1530:Drivers/CMSIS/core_cm23.h **** #if defined (__VTOR_PRESENT) && (__VTOR_PRESENT == 1U)
1531:Drivers/CMSIS/core_cm23.h ****   uint32_t *vectors = (uint32_t *)SCB->VTOR;
1532:Drivers/CMSIS/core_cm23.h **** #else
1533:Drivers/CMSIS/core_cm23.h ****   uint32_t *vectors = (uint32_t *)0x0U;
1534:Drivers/CMSIS/core_cm23.h **** #endif
1535:Drivers/CMSIS/core_cm23.h ****   vectors[(int32_t)IRQn + NVIC_USER_IRQ_OFFSET] = vector;
1536:Drivers/CMSIS/core_cm23.h **** }
1537:Drivers/CMSIS/core_cm23.h **** 
1538:Drivers/CMSIS/core_cm23.h **** 
1539:Drivers/CMSIS/core_cm23.h **** /**
1540:Drivers/CMSIS/core_cm23.h ****   \brief   Get Interrupt Vector
1541:Drivers/CMSIS/core_cm23.h ****   \details Reads an interrupt vector from interrupt vector table.
1542:Drivers/CMSIS/core_cm23.h ****            The interrupt number can be positive to specify a device specific interrupt,
1543:Drivers/CMSIS/core_cm23.h ****            or negative to specify a processor exception.
1544:Drivers/CMSIS/core_cm23.h ****   \param [in]   IRQn      Interrupt number.
1545:Drivers/CMSIS/core_cm23.h ****   \return                 Address of interrupt handler function
1546:Drivers/CMSIS/core_cm23.h ****  */
1547:Drivers/CMSIS/core_cm23.h **** __STATIC_INLINE uint32_t __NVIC_GetVector(IRQn_Type IRQn)
1548:Drivers/CMSIS/core_cm23.h **** {
1549:Drivers/CMSIS/core_cm23.h **** #if defined (__VTOR_PRESENT) && (__VTOR_PRESENT == 1U)
1550:Drivers/CMSIS/core_cm23.h ****   uint32_t *vectors = (uint32_t *)SCB->VTOR;
1551:Drivers/CMSIS/core_cm23.h **** #else
1552:Drivers/CMSIS/core_cm23.h ****   uint32_t *vectors = (uint32_t *)0x0U;
1553:Drivers/CMSIS/core_cm23.h **** #endif
1554:Drivers/CMSIS/core_cm23.h ****   return vectors[(int32_t)IRQn + NVIC_USER_IRQ_OFFSET];
1555:Drivers/CMSIS/core_cm23.h **** }
1556:Drivers/CMSIS/core_cm23.h **** 
1557:Drivers/CMSIS/core_cm23.h **** 
1558:Drivers/CMSIS/core_cm23.h **** /**
1559:Drivers/CMSIS/core_cm23.h ****   \brief   System Reset
1560:Drivers/CMSIS/core_cm23.h ****   \details Initiates a system reset request to reset the MCU.
1561:Drivers/CMSIS/core_cm23.h ****  */
1562:Drivers/CMSIS/core_cm23.h **** __STATIC_INLINE void __NVIC_SystemReset(void)
1563:Drivers/CMSIS/core_cm23.h **** {
 201              		.loc 2 1563 1 is_stmt 1 view -0
 202              		.cfi_startproc
 203              		@ Volatile: function does not return.
 204              		@ args = 0, pretend = 0, frame = 0
 205              		@ frame_needed = 0, uses_anonymous_args = 0
 206              		@ link register save eliminated.
1564:Drivers/CMSIS/core_cm23.h ****   __DSB();                                                          /* Ensure all outstanding memor
 207              		.loc 2 1564 3 view .LVU46
 208              	.LBB18:
 209              	.LBI18:
 880:Drivers/CMSIS/cmsis_gcc.h **** {
 210              		.loc 3 880 27 view .LVU47
 211              	.LBB19:
 212              		.loc 3 882 3 view .LVU48
 213              		.syntax divided
 214              	@ 882 "Drivers/CMSIS/cmsis_gcc.h" 1
 215 0000 BFF34F8F 		dsb 0xF
 216              	@ 0 "" 2
 217              		.thumb
 218              		.syntax unified
 219              	.LBE19:
 220              	.LBE18:
1565:Drivers/CMSIS/core_cm23.h ****                                                                        buffered write are completed
ARM GAS  D:\noval\Temp\cc0D8957.s 			page 48


1566:Drivers/CMSIS/core_cm23.h ****   SCB->AIRCR  = ((0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 221              		.loc 2 1566 3 view .LVU49
 222              		.loc 2 1566 15 is_stmt 0 view .LVU50
 223 0004 4EF60053 		movw	r3, #60672
 224 0008 CEF20003 		movt	r3, 57344
 225 000c 0422     		movs	r2, #4
 226 000e C0F2FA52 		movt	r2, 1530
 227 0012 DA60     		str	r2, [r3, #12]
1567:Drivers/CMSIS/core_cm23.h ****                  SCB_AIRCR_SYSRESETREQ_Msk);
1568:Drivers/CMSIS/core_cm23.h ****   __DSB();                                                          /* Ensure completion of memory 
 228              		.loc 2 1568 3 is_stmt 1 view .LVU51
 229              	.LBB20:
 230              	.LBI20:
 880:Drivers/CMSIS/cmsis_gcc.h **** {
 231              		.loc 3 880 27 view .LVU52
 232              	.LBB21:
 233              		.loc 3 882 3 view .LVU53
 234              		.syntax divided
 235              	@ 882 "Drivers/CMSIS/cmsis_gcc.h" 1
 236 0014 BFF34F8F 		dsb 0xF
 237              	@ 0 "" 2
 238              		.thumb
 239              		.syntax unified
 240              	.L7:
 241              	.LBE21:
 242              	.LBE20:
1569:Drivers/CMSIS/core_cm23.h **** 
1570:Drivers/CMSIS/core_cm23.h ****   for(;;)                                                           /* wait until reset */
 243              		.loc 2 1570 3 view .LVU54
1571:Drivers/CMSIS/core_cm23.h ****   {
1572:Drivers/CMSIS/core_cm23.h ****     __NOP();
 244              		.loc 2 1572 5 discriminator 1 view .LVU55
 245              		.syntax divided
 246              	@ 1572 "Drivers/CMSIS/core_cm23.h" 1
 247 0018 C046     		nop
 248              	@ 0 "" 2
1570:Drivers/CMSIS/core_cm23.h ****   {
 249              		.loc 2 1570 3 view .LVU56
 250              		.thumb
 251              		.syntax unified
 252 001a FDE7     		b	.L7
 253              		.cfi_endproc
 254              	.LFE57:
 256              		.section	.text.nvic_irq_enable,"ax",%progbits
 257              		.align	1
 258              		.global	nvic_irq_enable
 259              		.syntax unified
 260              		.code	16
 261              		.thumb_func
 263              	nvic_irq_enable:
 264              	.LVL8:
 265              	.LFB60:
   1:Drivers/GD32E23x/Source/gd32e23x_misc.c **** /*!
   2:Drivers/GD32E23x/Source/gd32e23x_misc.c ****     \file    gd32e23x_misc.c
   3:Drivers/GD32E23x/Source/gd32e23x_misc.c ****     \brief   MISC driver
   4:Drivers/GD32E23x/Source/gd32e23x_misc.c ****     
   5:Drivers/GD32E23x/Source/gd32e23x_misc.c ****     \version 2024-02-22, V2.1.0, firmware for GD32E23x
ARM GAS  D:\noval\Temp\cc0D8957.s 			page 49


   6:Drivers/GD32E23x/Source/gd32e23x_misc.c **** */
   7:Drivers/GD32E23x/Source/gd32e23x_misc.c **** 
   8:Drivers/GD32E23x/Source/gd32e23x_misc.c **** /*
   9:Drivers/GD32E23x/Source/gd32e23x_misc.c ****     Copyright (c) 2024, GigaDevice Semiconductor Inc.
  10:Drivers/GD32E23x/Source/gd32e23x_misc.c **** 
  11:Drivers/GD32E23x/Source/gd32e23x_misc.c ****     Redistribution and use in source and binary forms, with or without modification, 
  12:Drivers/GD32E23x/Source/gd32e23x_misc.c **** are permitted provided that the following conditions are met:
  13:Drivers/GD32E23x/Source/gd32e23x_misc.c **** 
  14:Drivers/GD32E23x/Source/gd32e23x_misc.c ****     1. Redistributions of source code must retain the above copyright notice, this 
  15:Drivers/GD32E23x/Source/gd32e23x_misc.c ****        list of conditions and the following disclaimer.
  16:Drivers/GD32E23x/Source/gd32e23x_misc.c ****     2. Redistributions in binary form must reproduce the above copyright notice, 
  17:Drivers/GD32E23x/Source/gd32e23x_misc.c ****        this list of conditions and the following disclaimer in the documentation 
  18:Drivers/GD32E23x/Source/gd32e23x_misc.c ****        and/or other materials provided with the distribution.
  19:Drivers/GD32E23x/Source/gd32e23x_misc.c ****     3. Neither the name of the copyright holder nor the names of its contributors 
  20:Drivers/GD32E23x/Source/gd32e23x_misc.c ****        may be used to endorse or promote products derived from this software without 
  21:Drivers/GD32E23x/Source/gd32e23x_misc.c ****        specific prior written permission.
  22:Drivers/GD32E23x/Source/gd32e23x_misc.c **** 
  23:Drivers/GD32E23x/Source/gd32e23x_misc.c ****     THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" 
  24:Drivers/GD32E23x/Source/gd32e23x_misc.c **** AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED 
  25:Drivers/GD32E23x/Source/gd32e23x_misc.c **** WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. 
  26:Drivers/GD32E23x/Source/gd32e23x_misc.c **** IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
  27:Drivers/GD32E23x/Source/gd32e23x_misc.c **** INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
  28:Drivers/GD32E23x/Source/gd32e23x_misc.c **** NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR 
  29:Drivers/GD32E23x/Source/gd32e23x_misc.c **** PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, 
  30:Drivers/GD32E23x/Source/gd32e23x_misc.c **** WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
  31:Drivers/GD32E23x/Source/gd32e23x_misc.c **** ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY 
  32:Drivers/GD32E23x/Source/gd32e23x_misc.c **** OF SUCH DAMAGE.
  33:Drivers/GD32E23x/Source/gd32e23x_misc.c **** */
  34:Drivers/GD32E23x/Source/gd32e23x_misc.c **** 
  35:Drivers/GD32E23x/Source/gd32e23x_misc.c **** #include "gd32e23x_misc.h"
  36:Drivers/GD32E23x/Source/gd32e23x_misc.c **** 
  37:Drivers/GD32E23x/Source/gd32e23x_misc.c **** /*!
  38:Drivers/GD32E23x/Source/gd32e23x_misc.c ****     \brief      enable NVIC request
  39:Drivers/GD32E23x/Source/gd32e23x_misc.c ****     \param[in]  nvic_irq: the NVIC interrupt request, detailed in IRQn_Type
  40:Drivers/GD32E23x/Source/gd32e23x_misc.c ****     \param[in]  nvic_irq_priority: the priority needed to set (0-3)
  41:Drivers/GD32E23x/Source/gd32e23x_misc.c ****     \param[out] none
  42:Drivers/GD32E23x/Source/gd32e23x_misc.c ****     \retval     none
  43:Drivers/GD32E23x/Source/gd32e23x_misc.c **** */
  44:Drivers/GD32E23x/Source/gd32e23x_misc.c **** void nvic_irq_enable(uint8_t nvic_irq, 
  45:Drivers/GD32E23x/Source/gd32e23x_misc.c ****                      uint8_t nvic_irq_priority)
  46:Drivers/GD32E23x/Source/gd32e23x_misc.c **** {
 266              		.loc 1 46 1 view -0
 267              		.cfi_startproc
 268              		@ args = 0, pretend = 0, frame = 0
 269              		@ frame_needed = 0, uses_anonymous_args = 0
 270              		.loc 1 46 1 is_stmt 0 view .LVU58
 271 0000 70B5     		push	{r4, r5, r6, lr}
 272              	.LCFI1:
 273              		.cfi_def_cfa_offset 16
 274              		.cfi_offset 4, -16
 275              		.cfi_offset 5, -12
 276              		.cfi_offset 6, -8
 277              		.cfi_offset 14, -4
 278 0002 0500     		movs	r5, r0
  47:Drivers/GD32E23x/Source/gd32e23x_misc.c ****     /* set the priority and enable the selected IRQ */
  48:Drivers/GD32E23x/Source/gd32e23x_misc.c ****     NVIC_SetPriority((IRQn_Type)nvic_irq, (uint32_t)nvic_irq_priority);
 279              		.loc 1 48 5 is_stmt 1 view .LVU59
ARM GAS  D:\noval\Temp\cc0D8957.s 			page 50


 280 0004 44B2     		sxtb	r4, r0
 281 0006 2000     		movs	r0, r4
 282              		.loc 1 48 5 is_stmt 0 view .LVU60
 283 0008 FFF7FEFF 		bl	__NVIC_SetPriority
 284              	.LVL9:
  49:Drivers/GD32E23x/Source/gd32e23x_misc.c ****     NVIC_EnableIRQ((IRQn_Type)nvic_irq);
 285              		.loc 1 49 5 is_stmt 1 view .LVU61
 286              	.LBB22:
 287              	.LBI22:
1285:Drivers/CMSIS/core_cm23.h **** {
 288              		.loc 2 1285 22 view .LVU62
 289              	.LBB23:
1287:Drivers/CMSIS/core_cm23.h ****   {
 290              		.loc 2 1287 3 view .LVU63
1287:Drivers/CMSIS/core_cm23.h ****   {
 291              		.loc 2 1287 6 is_stmt 0 view .LVU64
 292 000c 002C     		cmp	r4, #0
 293 000e 0ADB     		blt	.L8
1289:Drivers/CMSIS/core_cm23.h ****   }
 294              		.loc 2 1289 5 is_stmt 1 view .LVU65
1289:Drivers/CMSIS/core_cm23.h ****   }
 295              		.loc 2 1289 81 is_stmt 0 view .LVU66
 296 0010 1F22     		movs	r2, #31
 297 0012 2A40     		ands	r2, r5
1289:Drivers/CMSIS/core_cm23.h ****   }
 298              		.loc 2 1289 34 view .LVU67
 299 0014 6409     		lsrs	r4, r4, #5
 300              	.LVL10:
1289:Drivers/CMSIS/core_cm23.h ****   }
 301              		.loc 2 1289 45 view .LVU68
 302 0016 0123     		movs	r3, #1
 303 0018 9340     		lsls	r3, r3, r2
1289:Drivers/CMSIS/core_cm23.h ****   }
 304              		.loc 2 1289 43 view .LVU69
 305 001a 4EF20012 		movw	r2, #57600
 306 001e CEF20002 		movt	r2, 57344
 307 0022 A400     		lsls	r4, r4, #2
 308 0024 A350     		str	r3, [r4, r2]
 309              	.LVL11:
 310              	.L8:
1289:Drivers/CMSIS/core_cm23.h ****   }
 311              		.loc 2 1289 43 view .LVU70
 312              	.LBE23:
 313              	.LBE22:
  50:Drivers/GD32E23x/Source/gd32e23x_misc.c **** }
 314              		.loc 1 50 1 view .LVU71
 315              		@ sp needed
 316              	.LVL12:
 317              		.loc 1 50 1 view .LVU72
 318 0026 70BD     		pop	{r4, r5, r6, pc}
 319              		.cfi_endproc
 320              	.LFE60:
 322              		.section	.text.nvic_irq_disable,"ax",%progbits
 323              		.align	1
 324              		.global	nvic_irq_disable
 325              		.syntax unified
 326              		.code	16
ARM GAS  D:\noval\Temp\cc0D8957.s 			page 51


 327              		.thumb_func
 329              	nvic_irq_disable:
 330              	.LVL13:
 331              	.LFB61:
  51:Drivers/GD32E23x/Source/gd32e23x_misc.c **** 
  52:Drivers/GD32E23x/Source/gd32e23x_misc.c **** /*!
  53:Drivers/GD32E23x/Source/gd32e23x_misc.c ****     \brief      disable NVIC request
  54:Drivers/GD32E23x/Source/gd32e23x_misc.c ****     \param[in]  nvic_irq: the NVIC interrupt request, detailed in IRQn_Type
  55:Drivers/GD32E23x/Source/gd32e23x_misc.c ****     \param[out] none
  56:Drivers/GD32E23x/Source/gd32e23x_misc.c ****     \retval     none
  57:Drivers/GD32E23x/Source/gd32e23x_misc.c **** */
  58:Drivers/GD32E23x/Source/gd32e23x_misc.c **** void nvic_irq_disable(uint8_t nvic_irq)
  59:Drivers/GD32E23x/Source/gd32e23x_misc.c **** {
 332              		.loc 1 59 1 is_stmt 1 view -0
 333              		.cfi_startproc
 334              		@ args = 0, pretend = 0, frame = 0
 335              		@ frame_needed = 0, uses_anonymous_args = 0
 336              		.loc 1 59 1 is_stmt 0 view .LVU74
 337 0000 10B5     		push	{r4, lr}
 338              	.LCFI2:
 339              		.cfi_def_cfa_offset 8
 340              		.cfi_offset 4, -8
 341              		.cfi_offset 14, -4
  60:Drivers/GD32E23x/Source/gd32e23x_misc.c ****     /* disable the selected IRQ.*/
  61:Drivers/GD32E23x/Source/gd32e23x_misc.c ****     NVIC_DisableIRQ((IRQn_Type)nvic_irq);
 342              		.loc 1 61 5 is_stmt 1 view .LVU75
 343 0002 40B2     		sxtb	r0, r0
 344              		.loc 1 61 5 is_stmt 0 view .LVU76
 345 0004 FFF7FEFF 		bl	__NVIC_DisableIRQ
 346              	.LVL14:
  62:Drivers/GD32E23x/Source/gd32e23x_misc.c **** }
 347              		.loc 1 62 1 view .LVU77
 348              		@ sp needed
 349 0008 10BD     		pop	{r4, pc}
 350              		.cfi_endproc
 351              	.LFE61:
 353              		.section	.text.nvic_system_reset,"ax",%progbits
 354              		.align	1
 355              		.global	nvic_system_reset
 356              		.syntax unified
 357              		.code	16
 358              		.thumb_func
 360              	nvic_system_reset:
 361              	.LFB62:
  63:Drivers/GD32E23x/Source/gd32e23x_misc.c **** 
  64:Drivers/GD32E23x/Source/gd32e23x_misc.c **** /*  */
  65:Drivers/GD32E23x/Source/gd32e23x_misc.c **** /*!
  66:Drivers/GD32E23x/Source/gd32e23x_misc.c ****     \brief      initiates a system reset request to reset the MCU
  67:Drivers/GD32E23x/Source/gd32e23x_misc.c ****     \param[in]  none
  68:Drivers/GD32E23x/Source/gd32e23x_misc.c ****     \param[out] none
  69:Drivers/GD32E23x/Source/gd32e23x_misc.c ****     \retval     none
  70:Drivers/GD32E23x/Source/gd32e23x_misc.c **** */
  71:Drivers/GD32E23x/Source/gd32e23x_misc.c **** void nvic_system_reset(void)
  72:Drivers/GD32E23x/Source/gd32e23x_misc.c **** {
 362              		.loc 1 72 1 is_stmt 1 view -0
 363              		.cfi_startproc
 364              		@ Volatile: function does not return.
ARM GAS  D:\noval\Temp\cc0D8957.s 			page 52


 365              		@ args = 0, pretend = 0, frame = 0
 366              		@ frame_needed = 0, uses_anonymous_args = 0
 367 0000 10B5     		push	{r4, lr}
 368              	.LCFI3:
 369              		.cfi_def_cfa_offset 8
 370              		.cfi_offset 4, -8
 371              		.cfi_offset 14, -4
  73:Drivers/GD32E23x/Source/gd32e23x_misc.c ****     NVIC_SystemReset();
 372              		.loc 1 73 5 view .LVU79
 373 0002 FFF7FEFF 		bl	__NVIC_SystemReset
 374              	.LVL15:
 375              		.cfi_endproc
 376              	.LFE62:
 378              		.section	.text.nvic_vector_table_set,"ax",%progbits
 379              		.align	1
 380              		.global	nvic_vector_table_set
 381              		.syntax unified
 382              		.code	16
 383              		.thumb_func
 385              	nvic_vector_table_set:
 386              	.LVL16:
 387              	.LFB63:
  74:Drivers/GD32E23x/Source/gd32e23x_misc.c **** }
  75:Drivers/GD32E23x/Source/gd32e23x_misc.c **** 
  76:Drivers/GD32E23x/Source/gd32e23x_misc.c **** /*!
  77:Drivers/GD32E23x/Source/gd32e23x_misc.c ****     \brief      set the NVIC vector table base address
  78:Drivers/GD32E23x/Source/gd32e23x_misc.c ****     \param[in]  nvic_vict_tab: the RAM or FLASH base address
  79:Drivers/GD32E23x/Source/gd32e23x_misc.c ****       \arg        NVIC_VECTTAB_RAM: RAM base address
  80:Drivers/GD32E23x/Source/gd32e23x_misc.c ****       \arg        NVIC_VECTTAB_FLASH: Flash base address
  81:Drivers/GD32E23x/Source/gd32e23x_misc.c ****     \param[in]  offset: Vector Table offset
  82:Drivers/GD32E23x/Source/gd32e23x_misc.c ****     \param[out] none
  83:Drivers/GD32E23x/Source/gd32e23x_misc.c ****     \retval     none
  84:Drivers/GD32E23x/Source/gd32e23x_misc.c **** */
  85:Drivers/GD32E23x/Source/gd32e23x_misc.c **** void nvic_vector_table_set(uint32_t nvic_vict_tab, uint32_t offset)
  86:Drivers/GD32E23x/Source/gd32e23x_misc.c **** {
 388              		.loc 1 86 1 view -0
 389              		.cfi_startproc
 390              		@ args = 0, pretend = 0, frame = 0
 391              		@ frame_needed = 0, uses_anonymous_args = 0
 392              		@ link register save eliminated.
  87:Drivers/GD32E23x/Source/gd32e23x_misc.c ****     SCB->VTOR = nvic_vict_tab | (offset & NVIC_VECTTAB_OFFSET_MASK);
 393              		.loc 1 87 5 view .LVU81
 394              		.loc 1 87 41 is_stmt 0 view .LVU82
 395 0000 4FF68073 		movw	r3, #65408
 396 0004 C1F6FF73 		movt	r3, 8191
 397 0008 1940     		ands	r1, r3
 398              	.LVL17:
 399              		.loc 1 87 31 view .LVU83
 400 000a 0143     		orrs	r1, r0
 401              		.loc 1 87 15 view .LVU84
 402 000c 4EF60053 		movw	r3, #60672
 403 0010 CEF20003 		movt	r3, 57344
 404 0014 9960     		str	r1, [r3, #8]
  88:Drivers/GD32E23x/Source/gd32e23x_misc.c ****     __DSB();
 405              		.loc 1 88 5 is_stmt 1 view .LVU85
 406              	.LBB24:
 407              	.LBI24:
ARM GAS  D:\noval\Temp\cc0D8957.s 			page 53


 880:Drivers/CMSIS/cmsis_gcc.h **** {
 408              		.loc 3 880 27 view .LVU86
 409              	.LBB25:
 410              		.loc 3 882 3 view .LVU87
 411              		.syntax divided
 412              	@ 882 "Drivers/CMSIS/cmsis_gcc.h" 1
 413 0016 BFF34F8F 		dsb 0xF
 414              	@ 0 "" 2
 415              		.thumb
 416              		.syntax unified
 417              	.LBE25:
 418              	.LBE24:
  89:Drivers/GD32E23x/Source/gd32e23x_misc.c **** }
 419              		.loc 1 89 1 is_stmt 0 view .LVU88
 420              		@ sp needed
 421 001a 7047     		bx	lr
 422              		.cfi_endproc
 423              	.LFE63:
 425              		.section	.text.system_lowpower_set,"ax",%progbits
 426              		.align	1
 427              		.global	system_lowpower_set
 428              		.syntax unified
 429              		.code	16
 430              		.thumb_func
 432              	system_lowpower_set:
 433              	.LVL18:
 434              	.LFB64:
  90:Drivers/GD32E23x/Source/gd32e23x_misc.c **** 
  91:Drivers/GD32E23x/Source/gd32e23x_misc.c **** /*!
  92:Drivers/GD32E23x/Source/gd32e23x_misc.c ****     \brief      set the state of the low power mode
  93:Drivers/GD32E23x/Source/gd32e23x_misc.c ****     \param[in]  lowpower_mode: the low power mode state
  94:Drivers/GD32E23x/Source/gd32e23x_misc.c ****       \arg        SCB_LPM_SLEEP_EXIT_ISR: if chose this para, the system always enter low power 
  95:Drivers/GD32E23x/Source/gd32e23x_misc.c ****                     mode by exiting from ISR
  96:Drivers/GD32E23x/Source/gd32e23x_misc.c ****       \arg        SCB_LPM_DEEPSLEEP: if chose this para, the system will enter the DEEPSLEEP mode
  97:Drivers/GD32E23x/Source/gd32e23x_misc.c ****       \arg        SCB_LPM_WAKE_BY_ALL_INT: if chose this para, the lowpower mode can be woke up 
  98:Drivers/GD32E23x/Source/gd32e23x_misc.c ****                     by all the enable and disable interrupts
  99:Drivers/GD32E23x/Source/gd32e23x_misc.c ****     \param[out] none
 100:Drivers/GD32E23x/Source/gd32e23x_misc.c ****     \retval     none
 101:Drivers/GD32E23x/Source/gd32e23x_misc.c **** */
 102:Drivers/GD32E23x/Source/gd32e23x_misc.c **** void system_lowpower_set(uint8_t lowpower_mode)
 103:Drivers/GD32E23x/Source/gd32e23x_misc.c **** {
 435              		.loc 1 103 1 is_stmt 1 view -0
 436              		.cfi_startproc
 437              		@ args = 0, pretend = 0, frame = 0
 438              		@ frame_needed = 0, uses_anonymous_args = 0
 439              		@ link register save eliminated.
 104:Drivers/GD32E23x/Source/gd32e23x_misc.c ****     SCB->SCR |= (uint32_t)lowpower_mode;
 440              		.loc 1 104 5 view .LVU90
 441              		.loc 1 104 8 is_stmt 0 view .LVU91
 442 0000 4EF60053 		movw	r3, #60672
 443 0004 CEF20003 		movt	r3, 57344
 444 0008 1A69     		ldr	r2, [r3, #16]
 445              		.loc 1 104 14 view .LVU92
 446 000a 0243     		orrs	r2, r0
 447 000c 1A61     		str	r2, [r3, #16]
 105:Drivers/GD32E23x/Source/gd32e23x_misc.c **** }
 448              		.loc 1 105 1 view .LVU93
ARM GAS  D:\noval\Temp\cc0D8957.s 			page 54


 449              		@ sp needed
 450 000e 7047     		bx	lr
 451              		.cfi_endproc
 452              	.LFE64:
 454              		.section	.text.system_lowpower_reset,"ax",%progbits
 455              		.align	1
 456              		.global	system_lowpower_reset
 457              		.syntax unified
 458              		.code	16
 459              		.thumb_func
 461              	system_lowpower_reset:
 462              	.LVL19:
 463              	.LFB65:
 106:Drivers/GD32E23x/Source/gd32e23x_misc.c **** 
 107:Drivers/GD32E23x/Source/gd32e23x_misc.c **** /*!
 108:Drivers/GD32E23x/Source/gd32e23x_misc.c ****     \brief      reset the state of the low power mode
 109:Drivers/GD32E23x/Source/gd32e23x_misc.c ****     \param[in]  lowpower_mode: the low power mode state
 110:Drivers/GD32E23x/Source/gd32e23x_misc.c ****       \arg        SCB_LPM_SLEEP_EXIT_ISR: if chose this para, the system will exit low power 
 111:Drivers/GD32E23x/Source/gd32e23x_misc.c ****                     mode by exiting from ISR
 112:Drivers/GD32E23x/Source/gd32e23x_misc.c ****       \arg        SCB_LPM_DEEPSLEEP: if chose this para, the system will enter the SLEEP mode
 113:Drivers/GD32E23x/Source/gd32e23x_misc.c ****       \arg        SCB_LPM_WAKE_BY_ALL_INT: if chose this para, the lowpower mode only can be 
 114:Drivers/GD32E23x/Source/gd32e23x_misc.c ****                     woke up by the enable interrupts
 115:Drivers/GD32E23x/Source/gd32e23x_misc.c ****     \param[out] none
 116:Drivers/GD32E23x/Source/gd32e23x_misc.c ****     \retval     none
 117:Drivers/GD32E23x/Source/gd32e23x_misc.c **** */
 118:Drivers/GD32E23x/Source/gd32e23x_misc.c **** void system_lowpower_reset(uint8_t lowpower_mode)
 119:Drivers/GD32E23x/Source/gd32e23x_misc.c **** {
 464              		.loc 1 119 1 is_stmt 1 view -0
 465              		.cfi_startproc
 466              		@ args = 0, pretend = 0, frame = 0
 467              		@ frame_needed = 0, uses_anonymous_args = 0
 468              		@ link register save eliminated.
 120:Drivers/GD32E23x/Source/gd32e23x_misc.c ****     SCB->SCR &= (~(uint32_t)lowpower_mode);
 469              		.loc 1 120 5 view .LVU95
 470              		.loc 1 120 8 is_stmt 0 view .LVU96
 471 0000 4EF60053 		movw	r3, #60672
 472 0004 CEF20003 		movt	r3, 57344
 473 0008 1A69     		ldr	r2, [r3, #16]
 474              		.loc 1 120 14 view .LVU97
 475 000a 8243     		bics	r2, r0
 476 000c 1A61     		str	r2, [r3, #16]
 121:Drivers/GD32E23x/Source/gd32e23x_misc.c **** }
 477              		.loc 1 121 1 view .LVU98
 478              		@ sp needed
 479 000e 7047     		bx	lr
 480              		.cfi_endproc
 481              	.LFE65:
 483              		.section	.text.systick_clksource_set,"ax",%progbits
 484              		.align	1
 485              		.global	systick_clksource_set
 486              		.syntax unified
 487              		.code	16
 488              		.thumb_func
 490              	systick_clksource_set:
 491              	.LVL20:
 492              	.LFB66:
 122:Drivers/GD32E23x/Source/gd32e23x_misc.c **** 
ARM GAS  D:\noval\Temp\cc0D8957.s 			page 55


 123:Drivers/GD32E23x/Source/gd32e23x_misc.c **** /*!
 124:Drivers/GD32E23x/Source/gd32e23x_misc.c ****     \brief      set the systick clock source
 125:Drivers/GD32E23x/Source/gd32e23x_misc.c ****     \param[in]  systick_clksource: the systick clock source needed to choose
 126:Drivers/GD32E23x/Source/gd32e23x_misc.c ****       \arg        SYSTICK_CLKSOURCE_HCLK: systick clock source is from HCLK
 127:Drivers/GD32E23x/Source/gd32e23x_misc.c ****       \arg        SYSTICK_CLKSOURCE_HCLK_DIV8: systick clock source is from HCLK/8
 128:Drivers/GD32E23x/Source/gd32e23x_misc.c ****     \param[out] none
 129:Drivers/GD32E23x/Source/gd32e23x_misc.c ****     \retval     none
 130:Drivers/GD32E23x/Source/gd32e23x_misc.c **** */
 131:Drivers/GD32E23x/Source/gd32e23x_misc.c **** 
 132:Drivers/GD32E23x/Source/gd32e23x_misc.c **** void systick_clksource_set(uint32_t systick_clksource)
 133:Drivers/GD32E23x/Source/gd32e23x_misc.c **** {
 493              		.loc 1 133 1 is_stmt 1 view -0
 494              		.cfi_startproc
 495              		@ args = 0, pretend = 0, frame = 0
 496              		@ frame_needed = 0, uses_anonymous_args = 0
 497              		@ link register save eliminated.
 134:Drivers/GD32E23x/Source/gd32e23x_misc.c ****     if(SYSTICK_CLKSOURCE_HCLK == systick_clksource ){
 498              		.loc 1 134 5 view .LVU100
 499              		.loc 1 134 7 is_stmt 0 view .LVU101
 500 0000 0428     		cmp	r0, #4
 501 0002 08D0     		beq	.L18
 135:Drivers/GD32E23x/Source/gd32e23x_misc.c ****         /* set the systick clock source from HCLK */
 136:Drivers/GD32E23x/Source/gd32e23x_misc.c ****         SysTick->CTRL |= SYSTICK_CLKSOURCE_HCLK;
 137:Drivers/GD32E23x/Source/gd32e23x_misc.c ****     }else{
 138:Drivers/GD32E23x/Source/gd32e23x_misc.c ****         /* set the systick clock source from HCLK/8 */
 139:Drivers/GD32E23x/Source/gd32e23x_misc.c ****         SysTick->CTRL &= SYSTICK_CLKSOURCE_HCLK_DIV8;
 502              		.loc 1 139 9 is_stmt 1 view .LVU102
 503              		.loc 1 139 16 is_stmt 0 view .LVU103
 504 0004 4EF21003 		movw	r3, #57360
 505 0008 CEF20003 		movt	r3, 57344
 506 000c 1A68     		ldr	r2, [r3]
 507              		.loc 1 139 23 view .LVU104
 508 000e 0421     		movs	r1, #4
 509 0010 8A43     		bics	r2, r1
 510 0012 1A60     		str	r2, [r3]
 511              	.L15:
 140:Drivers/GD32E23x/Source/gd32e23x_misc.c ****     }
 141:Drivers/GD32E23x/Source/gd32e23x_misc.c **** }
 512              		.loc 1 141 1 view .LVU105
 513              		@ sp needed
 514 0014 7047     		bx	lr
 515              	.L18:
 136:Drivers/GD32E23x/Source/gd32e23x_misc.c ****     }else{
 516              		.loc 1 136 9 is_stmt 1 view .LVU106
 136:Drivers/GD32E23x/Source/gd32e23x_misc.c ****     }else{
 517              		.loc 1 136 16 is_stmt 0 view .LVU107
 518 0016 4EF21003 		movw	r3, #57360
 519 001a CEF20003 		movt	r3, 57344
 520 001e 1A68     		ldr	r2, [r3]
 136:Drivers/GD32E23x/Source/gd32e23x_misc.c ****     }else{
 521              		.loc 1 136 23 view .LVU108
 522 0020 0421     		movs	r1, #4
 523 0022 0A43     		orrs	r2, r1
 524 0024 1A60     		str	r2, [r3]
 525 0026 F5E7     		b	.L15
 526              		.cfi_endproc
 527              	.LFE66:
ARM GAS  D:\noval\Temp\cc0D8957.s 			page 56


 529              		.text
 530              	.Letext0:
 531              		.file 4 "Drivers/CMSIS/GD/GD32E23x/Include/gd32e23x.h"
 532              		.file 5 "D:/AppData/arm-gnu-toolchain-13.3.rel1-mingw-w64-i686-arm-none-eabi/arm-none-eabi/include
 533              		.file 6 "D:/AppData/arm-gnu-toolchain-13.3.rel1-mingw-w64-i686-arm-none-eabi/arm-none-eabi/include
ARM GAS  D:\noval\Temp\cc0D8957.s 			page 57


DEFINED SYMBOLS
                            *ABS*:00000000 gd32e23x_misc.c
D:\noval\Temp\cc0D8957.s:19     .text.__NVIC_DisableIRQ:00000000 $t
D:\noval\Temp\cc0D8957.s:24     .text.__NVIC_DisableIRQ:00000000 __NVIC_DisableIRQ
D:\noval\Temp\cc0D8957.s:90     .text.__NVIC_SetPriority:00000000 $t
D:\noval\Temp\cc0D8957.s:95     .text.__NVIC_SetPriority:00000000 __NVIC_SetPriority
D:\noval\Temp\cc0D8957.s:194    .text.__NVIC_SystemReset:00000000 $t
D:\noval\Temp\cc0D8957.s:199    .text.__NVIC_SystemReset:00000000 __NVIC_SystemReset
D:\noval\Temp\cc0D8957.s:257    .text.nvic_irq_enable:00000000 $t
D:\noval\Temp\cc0D8957.s:263    .text.nvic_irq_enable:00000000 nvic_irq_enable
D:\noval\Temp\cc0D8957.s:323    .text.nvic_irq_disable:00000000 $t
D:\noval\Temp\cc0D8957.s:329    .text.nvic_irq_disable:00000000 nvic_irq_disable
D:\noval\Temp\cc0D8957.s:354    .text.nvic_system_reset:00000000 $t
D:\noval\Temp\cc0D8957.s:360    .text.nvic_system_reset:00000000 nvic_system_reset
D:\noval\Temp\cc0D8957.s:379    .text.nvic_vector_table_set:00000000 $t
D:\noval\Temp\cc0D8957.s:385    .text.nvic_vector_table_set:00000000 nvic_vector_table_set
D:\noval\Temp\cc0D8957.s:426    .text.system_lowpower_set:00000000 $t
D:\noval\Temp\cc0D8957.s:432    .text.system_lowpower_set:00000000 system_lowpower_set
D:\noval\Temp\cc0D8957.s:455    .text.system_lowpower_reset:00000000 $t
D:\noval\Temp\cc0D8957.s:461    .text.system_lowpower_reset:00000000 system_lowpower_reset
D:\noval\Temp\cc0D8957.s:484    .text.systick_clksource_set:00000000 $t
D:\noval\Temp\cc0D8957.s:490    .text.systick_clksource_set:00000000 systick_clksource_set

NO UNDEFINED SYMBOLS
