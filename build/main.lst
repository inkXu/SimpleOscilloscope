ARM GAS  D:\noval\Temp\ccY5wGiu.s 			page 1


   1              		.cpu cortex-m23
   2              		.arch armv8-m.base
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.main,"ax",%progbits
  19              		.align	1
  20              		.global	main
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	main:
  26              	.LFB60:
   1:Core/Src/main.c **** /*!
   2:Core/Src/main.c ****     \file    main.c
   3:Core/Src/main.c ****     \brief   led spark with systick, USART print and key example
   4:Core/Src/main.c ****     
   5:Core/Src/main.c ****     \version 2024-02-22, V2.1.0, firmware for GD32E23x
   6:Core/Src/main.c **** */
   7:Core/Src/main.c **** 
   8:Core/Src/main.c **** /*
   9:Core/Src/main.c ****     Copyright (c) 2024, GigaDevice Semiconductor Inc.
  10:Core/Src/main.c **** 
  11:Core/Src/main.c ****     Redistribution and use in source and binary forms, with or without modification, 
  12:Core/Src/main.c **** are permitted provided that the following conditions are met:
  13:Core/Src/main.c **** 
  14:Core/Src/main.c ****     1. Redistributions of source code must retain the above copyright notice, this 
  15:Core/Src/main.c ****        list of conditions and the following disclaimer.
  16:Core/Src/main.c ****     2. Redistributions in binary form must reproduce the above copyright notice, 
  17:Core/Src/main.c ****        this list of conditions and the following disclaimer in the documentation 
  18:Core/Src/main.c ****        and/or other materials provided with the distribution.
  19:Core/Src/main.c ****     3. Neither the name of the copyright holder nor the names of its contributors 
  20:Core/Src/main.c ****        may be used to endorse or promote products derived from this software without 
  21:Core/Src/main.c ****        specific prior written permission.
  22:Core/Src/main.c **** 
  23:Core/Src/main.c ****     THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" 
  24:Core/Src/main.c **** AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED 
  25:Core/Src/main.c **** WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. 
  26:Core/Src/main.c **** IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
  27:Core/Src/main.c **** INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
  28:Core/Src/main.c **** NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR 
  29:Core/Src/main.c **** PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, 
  30:Core/Src/main.c **** WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
  31:Core/Src/main.c **** ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY 
  32:Core/Src/main.c **** OF SUCH DAMAGE.
ARM GAS  D:\noval\Temp\ccY5wGiu.s 			page 2


  33:Core/Src/main.c **** */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** #include "gd32e23x.h"
  36:Core/Src/main.c **** #include "systick.h"
  37:Core/Src/main.c **** #include "gd32e23x_it.h"
  38:Core/Src/main.c **** #include "app.h"
  39:Core/Src/main.c **** // #include <stdio.h>
  40:Core/Src/main.c **** // #include "main.h"
  41:Core/Src/main.c **** // #include "gd32e230c_eval.h"
  42:Core/Src/main.c **** // #include "lcd.h"
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** // static uint32_t adc_value;
  45:Core/Src/main.c **** // uint8_t arr_char[] = "Bark";
  46:Core/Src/main.c **** // int16_t wave_arr[160];
  47:Core/Src/main.c **** // uint8_t idx;
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /*!
  50:Core/Src/main.c ****     \brief      main function
  51:Core/Src/main.c ****     \retval     none
  52:Core/Src/main.c **** */
  53:Core/Src/main.c **** int main(void)
  54:Core/Src/main.c **** {
  27              		.loc 1 54 1 view -0
  28              		.cfi_startproc
  29              		@ Volatile: function does not return.
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 4, -8
  36              		.cfi_offset 14, -4
  55:Core/Src/main.c ****     /* configure systick */
  56:Core/Src/main.c ****     systick_config();
  37              		.loc 1 56 5 view .LVU1
  38 0002 FFF7FEFF 		bl	systick_config
  39              	.LVL0:
  57:Core/Src/main.c ****     AppInit();
  40              		.loc 1 57 5 view .LVU2
  41 0006 FFF7FEFF 		bl	AppInit
  42              	.LVL1:
  43              	.L2:
  58:Core/Src/main.c ****     /* initilize the LEDs, USART and key */
  59:Core/Src/main.c ****     // GPIO_Init();
  60:Core/Src/main.c ****     // USART_Init();
  61:Core/Src/main.c ****     // ADC_Init();
  62:Core/Src/main.c ****     // Timer_Init();
  63:Core/Src/main.c ****     // LCD_Init();
  64:Core/Src/main.c ****     // LCD_Fill(0, 0, LCD_WIDTH, LCD_HEIGHT + 1, BLACK);
  65:Core/Src/main.c ****     // // LCD_Draw_Rectangle(32, 32, 96, 96, BLUE);
  66:Core/Src/main.c ****     // LCD_Draw_Line(16, 32, 64, 96, BLUE);
  67:Core/Src/main.c ****     // // LCD_Draw_Line(16, 80, 16, 32, RED);
  68:Core/Src/main.c ****     // LCD_Show_Char(32, 32, 'R', YELLOW, BLACK, 16, 0);
  69:Core/Src/main.c ****     // LCD_Show_String(16, 64, arr_char, WHITE, BLUE, 16, 0);
  70:Core/Src/main.c ****     // for (int i = 0; i < 10; i++) {
  71:Core/Src/main.c ****     //     wave_arr[i] = 0;
  72:Core/Src/main.c ****     //     wave_arr[i + 20] = 0;
ARM GAS  D:\noval\Temp\ccY5wGiu.s 			page 3


  73:Core/Src/main.c ****     //     wave_arr[i + 40] = 0;
  74:Core/Src/main.c ****     //     wave_arr[i + 60] = 0;
  75:Core/Src/main.c ****     // }
  76:Core/Src/main.c ****     // for (int i = 10; i < 20; i++) {
  77:Core/Src/main.c ****     //     wave_arr[i] = 34;
  78:Core/Src/main.c ****     //     wave_arr[i + 20] = 34;
  79:Core/Src/main.c ****     //     wave_arr[i + 40] = 34;
  80:Core/Src/main.c ****     //     wave_arr[i + 60] = 34;
  81:Core/Src/main.c ****     // }
  82:Core/Src/main.c ****     // for (int i = 80; i < 90; i++) {
  83:Core/Src/main.c ****     //     wave_arr[i] = i - 80;
  84:Core/Src/main.c ****     //     wave_arr[i + 20] = i - 80;
  85:Core/Src/main.c ****     //     wave_arr[i + 40] = i - 80;
  86:Core/Src/main.c ****     //     wave_arr[i + 60] = i - 80;
  87:Core/Src/main.c ****     // }
  88:Core/Src/main.c ****     // for (int i = 90; i < 100; i++) {
  89:Core/Src/main.c ****     //     wave_arr[i] = i - 100;
  90:Core/Src/main.c ****     //     wave_arr[i + 20] = i - 100;
  91:Core/Src/main.c ****     //     wave_arr[i + 40] = i - 100;
  92:Core/Src/main.c ****     //     wave_arr[i + 60] = i - 100;
  93:Core/Src/main.c ****     // }
  94:Core/Src/main.c ****     // for (int i = 0; i < 160; i++) {
  95:Core/Src/main.c ****     //     LCD_Draw_Curve(64, wave_arr[i]);
  96:Core/Src/main.c ****     // }
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****     // printf("App Start!\n");
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****     // LCD_Show_String(32, 32, (const uint8_t *)"Thanks", 0X0000, 0XFFFF, 16, 0);
 101:Core/Src/main.c ****     // LCD_Show_String(64, 32, (const uint8_t *)"Welcome", 0XFFFF, 0X0000, 16, 0);
 102:Core/Src/main.c ****     
 103:Core/Src/main.c ****     /* print out the clock frequency of system, AHB, APB1 and APB2 */
 104:Core/Src/main.c ****     // printf("\r\nCK_SYS is %lu", rcu_clock_freq_get(CK_SYS));
 105:Core/Src/main.c ****     // printf("\r\nCK_AHB is %lu", rcu_clock_freq_get(CK_AHB));
 106:Core/Src/main.c ****     // printf("\r\nCK_APB1 is %lu", rcu_clock_freq_get(CK_APB1));
 107:Core/Src/main.c ****     // printf("\r\nCK_APB2 is %lu", rcu_clock_freq_get(CK_APB2));
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****     while(1) {
  44              		.loc 1 109 5 view .LVU3
 110:Core/Src/main.c ****         AppStart();
  45              		.loc 1 110 9 discriminator 1 view .LVU4
  46 000a FFF7FEFF 		bl	AppStart
  47              	.LVL2:
 109:Core/Src/main.c ****         AppStart();
  48              		.loc 1 109 10 view .LVU5
  49 000e FCE7     		b	.L2
  50              		.cfi_endproc
  51              	.LFE60:
  53              		.text
  54              	.Letext0:
  55              		.file 2 "Core/Inc/app.h"
  56              		.file 3 "Core/Inc/systick.h"
ARM GAS  D:\noval\Temp\ccY5wGiu.s 			page 4


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
D:\noval\Temp\ccY5wGiu.s:19     .text.main:00000000 $t
D:\noval\Temp\ccY5wGiu.s:25     .text.main:00000000 main

UNDEFINED SYMBOLS
systick_config
AppInit
AppStart
