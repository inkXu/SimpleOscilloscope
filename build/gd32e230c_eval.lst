ARM GAS  D:\noval\Temp\ccx6PMVA.s 			page 1


   1              		.cpu cortex-m23
   2              		.arch armv8-m.base
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"gd32e230c_eval.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/gd32e230c_eval.c"
  18              		.section	.text.GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.global	GPIO_Init
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	GPIO_Init:
  26              	.LFB60:
   1:Core/Src/gd32e230c_eval.c **** /*!
   2:Core/Src/gd32e230c_eval.c ****     \file    gd32e230c_eval.c
   3:Core/Src/gd32e230c_eval.c ****     \brief   firmware functions to manage leds, keys, COM ports
   4:Core/Src/gd32e230c_eval.c ****     
   5:Core/Src/gd32e230c_eval.c ****     \version 2024-02-22, V2.1.0, firmware for GD32E23x
   6:Core/Src/gd32e230c_eval.c **** */
   7:Core/Src/gd32e230c_eval.c **** 
   8:Core/Src/gd32e230c_eval.c **** /*
   9:Core/Src/gd32e230c_eval.c ****     Copyright (c) 2024, GigaDevice Semiconductor Inc.
  10:Core/Src/gd32e230c_eval.c **** 
  11:Core/Src/gd32e230c_eval.c ****     Redistribution and use in source and binary forms, with or without modification, 
  12:Core/Src/gd32e230c_eval.c **** are permitted provided that the following conditions are met:
  13:Core/Src/gd32e230c_eval.c **** 
  14:Core/Src/gd32e230c_eval.c ****     1. Redistributions of source code must retain the above copyright notice, this 
  15:Core/Src/gd32e230c_eval.c ****        list of conditions and the following disclaimer.
  16:Core/Src/gd32e230c_eval.c ****     2. Redistributions in binary form must reproduce the above copyright notice, 
  17:Core/Src/gd32e230c_eval.c ****        this list of conditions and the following disclaimer in the documentation 
  18:Core/Src/gd32e230c_eval.c ****        and/or other materials provided with the distribution.
  19:Core/Src/gd32e230c_eval.c ****     3. Neither the name of the copyright holder nor the names of its contributors 
  20:Core/Src/gd32e230c_eval.c ****        may be used to endorse or promote products derived from this software without 
  21:Core/Src/gd32e230c_eval.c ****        specific prior written permission.
  22:Core/Src/gd32e230c_eval.c **** 
  23:Core/Src/gd32e230c_eval.c ****     THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" 
  24:Core/Src/gd32e230c_eval.c **** AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED 
  25:Core/Src/gd32e230c_eval.c **** WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. 
  26:Core/Src/gd32e230c_eval.c **** IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
  27:Core/Src/gd32e230c_eval.c **** INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
  28:Core/Src/gd32e230c_eval.c **** NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR 
  29:Core/Src/gd32e230c_eval.c **** PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, 
  30:Core/Src/gd32e230c_eval.c **** WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
  31:Core/Src/gd32e230c_eval.c **** ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY 
  32:Core/Src/gd32e230c_eval.c **** OF SUCH DAMAGE.
ARM GAS  D:\noval\Temp\ccx6PMVA.s 			page 2


  33:Core/Src/gd32e230c_eval.c **** */
  34:Core/Src/gd32e230c_eval.c **** 
  35:Core/Src/gd32e230c_eval.c **** #include "gd32e230c_eval.h"
  36:Core/Src/gd32e230c_eval.c **** #include "systick.h"
  37:Core/Src/gd32e230c_eval.c **** 
  38:Core/Src/gd32e230c_eval.c **** /* private variables */
  39:Core/Src/gd32e230c_eval.c **** 
  40:Core/Src/gd32e230c_eval.c **** // static const rcu_periph_enum COM_CLK[COMn]  = {EVAL_COM_CLK};
  41:Core/Src/gd32e230c_eval.c **** 
  42:Core/Src/gd32e230c_eval.c **** // static const uint32_t COM_TX_PIN[COMn]      = {EVAL_COM_TX_PIN};
  43:Core/Src/gd32e230c_eval.c **** 
  44:Core/Src/gd32e230c_eval.c **** // static const uint32_t COM_RX_PIN[COMn]      = {EVAL_COM_RX_PIN};
  45:Core/Src/gd32e230c_eval.c **** 
  46:Core/Src/gd32e230c_eval.c **** // static const uint32_t KEY_PORT[KEYn]        = {WAKEUP_KEY_GPIO_PORT, 
  47:Core/Src/gd32e230c_eval.c **** //                                                TAMPER_KEY_GPIO_PORT
  48:Core/Src/gd32e230c_eval.c **** //                                                };
  49:Core/Src/gd32e230c_eval.c **** 
  50:Core/Src/gd32e230c_eval.c **** // static const uint32_t KEY_PIN[KEYn]         = {WAKEUP_KEY_PIN, 
  51:Core/Src/gd32e230c_eval.c **** //                                                TAMPER_KEY_PIN
  52:Core/Src/gd32e230c_eval.c **** //                                                };
  53:Core/Src/gd32e230c_eval.c **** 
  54:Core/Src/gd32e230c_eval.c **** // static const rcu_periph_enum KEY_CLK[KEYn]  = {WAKEUP_KEY_GPIO_CLK, 
  55:Core/Src/gd32e230c_eval.c **** //                                                TAMPER_KEY_GPIO_CLK
  56:Core/Src/gd32e230c_eval.c **** //                                                };
  57:Core/Src/gd32e230c_eval.c **** 
  58:Core/Src/gd32e230c_eval.c **** // static const exti_line_enum KEY_EXTI_LINE[KEYn] = {WAKEUP_KEY_EXTI_LINE,
  59:Core/Src/gd32e230c_eval.c **** //                                                    TAMPER_KEY_EXTI_LINE
  60:Core/Src/gd32e230c_eval.c **** //                                                    };
  61:Core/Src/gd32e230c_eval.c **** 
  62:Core/Src/gd32e230c_eval.c **** // static const uint8_t KEY_PORT_SOURCE[KEYn]      = {WAKEUP_KEY_EXTI_PORT_SOURCE,
  63:Core/Src/gd32e230c_eval.c **** //                                                    TAMPER_KEY_EXTI_PORT_SOURCE
  64:Core/Src/gd32e230c_eval.c **** //                                                    };
  65:Core/Src/gd32e230c_eval.c **** 
  66:Core/Src/gd32e230c_eval.c **** // static const uint8_t KEY_PIN_SOURCE[KEYn]       = {WAKEUP_KEY_EXTI_PIN_SOURCE,
  67:Core/Src/gd32e230c_eval.c **** //                                                    TAMPER_KEY_EXTI_PIN_SOURCE
  68:Core/Src/gd32e230c_eval.c **** //                                                    };
  69:Core/Src/gd32e230c_eval.c **** 
  70:Core/Src/gd32e230c_eval.c **** // static const uint8_t KEY_IRQn[KEYn]             = {WAKEUP_KEY_EXTI_IRQn, 
  71:Core/Src/gd32e230c_eval.c **** //                                                    TAMPER_KEY_EXTI_IRQn
  72:Core/Src/gd32e230c_eval.c **** //                                                    };
  73:Core/Src/gd32e230c_eval.c **** 
  74:Core/Src/gd32e230c_eval.c **** /* eval board low layer private functions */
  75:Core/Src/gd32e230c_eval.c **** /*
  76:Core/Src/gd32e230c_eval.c ****  * @brief      GPIO Initialization
  77:Core/Src/gd32e230c_eval.c ****  * @param      None
  78:Core/Src/gd32e230c_eval.c ****  * @retval     None
  79:Core/Src/gd32e230c_eval.c ****  */
  80:Core/Src/gd32e230c_eval.c **** void GPIO_Init(void)
  81:Core/Src/gd32e230c_eval.c **** {
  27              		.loc 1 81 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 10B5     		push	{r4, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
ARM GAS  D:\noval\Temp\ccx6PMVA.s 			page 3


  35              		.cfi_offset 14, -4
  82:Core/Src/gd32e230c_eval.c ****     /* enable the led clock */
  83:Core/Src/gd32e230c_eval.c ****     rcu_periph_clock_enable(RCU_GPIOC);
  36              		.loc 1 83 5 view .LVU1
  37 0002 40F21350 		movw	r0, #1299
  38 0006 FFF7FEFF 		bl	rcu_periph_clock_enable
  39              	.LVL0:
  84:Core/Src/gd32e230c_eval.c ****     /* enable the key clock */
  85:Core/Src/gd32e230c_eval.c ****     rcu_periph_clock_enable(RCU_GPIOB);
  40              		.loc 1 85 5 view .LVU2
  41 000a 40F21250 		movw	r0, #1298
  42 000e FFF7FEFF 		bl	rcu_periph_clock_enable
  43              	.LVL1:
  86:Core/Src/gd32e230c_eval.c ****     /* enable the system clock */
  87:Core/Src/gd32e230c_eval.c ****     rcu_periph_clock_enable(RCU_CFGCMP);
  44              		.loc 1 87 5 view .LVU3
  45 0012 40F20060 		movw	r0, #1536
  46 0016 FFF7FEFF 		bl	rcu_periph_clock_enable
  47              	.LVL2:
  88:Core/Src/gd32e230c_eval.c **** 
  89:Core/Src/gd32e230c_eval.c ****     /* configure led GPIO port */ 
  90:Core/Src/gd32e230c_eval.c ****     gpio_mode_set(GPIOC, GPIO_MODE_OUTPUT, GPIO_PUPD_NONE, GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15);
  48              		.loc 1 90 5 view .LVU4
  49 001a 40F60004 		movw	r4, #2048
  50 001e C4F60004 		movt	r4, 18432
  51 0022 4EF20003 		movw	r3, #57344
  52 0026 0022     		movs	r2, #0
  53 0028 0121     		movs	r1, #1
  54 002a 2000     		movs	r0, r4
  55 002c FFF7FEFF 		bl	gpio_mode_set
  56              	.LVL3:
  91:Core/Src/gd32e230c_eval.c ****     gpio_output_options_set(GPIOC, GPIO_OTYPE_PP, GPIO_OSPEED_50MHZ, GPIO_PIN_13|GPIO_PIN_14|GPIO_P
  57              		.loc 1 91 5 view .LVU5
  58 0030 4EF20003 		movw	r3, #57344
  59 0034 0322     		movs	r2, #3
  60 0036 0021     		movs	r1, #0
  61 0038 2000     		movs	r0, r4
  62 003a FFF7FEFF 		bl	gpio_output_options_set
  63              	.LVL4:
  92:Core/Src/gd32e230c_eval.c ****     /* configure key GPIO port */ 
  93:Core/Src/gd32e230c_eval.c ****     gpio_mode_set(GPIOB, GPIO_MODE_INPUT, GPIO_PUPD_PULLUP, GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_9|GPIO_P
  64              		.loc 1 93 5 view .LVU6
  65 003e 40F20040 		movw	r0, #1024
  66 0042 C4F60000 		movt	r0, 18432
  67 0046 4EF21823 		movw	r3, #57880
  68 004a 0122     		movs	r2, #1
  69 004c 0021     		movs	r1, #0
  70 004e FFF7FEFF 		bl	gpio_mode_set
  71              	.LVL5:
  94:Core/Src/gd32e230c_eval.c **** 
  95:Core/Src/gd32e230c_eval.c ****     /* enable the NVIC and configure the priority */
  96:Core/Src/gd32e230c_eval.c ****     nvic_irq_enable(EXTI4_15_IRQn, 2U);
  72              		.loc 1 96 5 view .LVU7
  73 0052 0221     		movs	r1, #2
  74 0054 0720     		movs	r0, #7
  75 0056 FFF7FEFF 		bl	nvic_irq_enable
  76              	.LVL6:
ARM GAS  D:\noval\Temp\ccx6PMVA.s 			page 4


  97:Core/Src/gd32e230c_eval.c ****     /* connect key EXTI line to key GPIO pin */
  98:Core/Src/gd32e230c_eval.c ****     syscfg_exti_line_config(EXTI_SOURCE_GPIOB, EXTI_SOURCE_PIN4);
  77              		.loc 1 98 5 view .LVU8
  78 005a 0421     		movs	r1, #4
  79 005c 0120     		movs	r0, #1
  80 005e FFF7FEFF 		bl	syscfg_exti_line_config
  81              	.LVL7:
  99:Core/Src/gd32e230c_eval.c ****     /* configure key EXTI line */
 100:Core/Src/gd32e230c_eval.c ****     exti_init(EXTI_4, EXTI_INTERRUPT, EXTI_TRIG_FALLING);
  82              		.loc 1 100 5 view .LVU9
  83 0062 0122     		movs	r2, #1
  84 0064 0021     		movs	r1, #0
  85 0066 1020     		movs	r0, #16
  86 0068 FFF7FEFF 		bl	exti_init
  87              	.LVL8:
 101:Core/Src/gd32e230c_eval.c ****     exti_interrupt_flag_clear(EXTI_4);
  88              		.loc 1 101 5 view .LVU10
  89 006c 1020     		movs	r0, #16
  90 006e FFF7FEFF 		bl	exti_interrupt_flag_clear
  91              	.LVL9:
 102:Core/Src/gd32e230c_eval.c **** }
  92              		.loc 1 102 1 is_stmt 0 view .LVU11
  93              		@ sp needed
  94 0072 10BD     		pop	{r4, pc}
  95              		.cfi_endproc
  96              	.LFE60:
  98              		.section	.text.USART_Init,"ax",%progbits
  99              		.align	1
 100              		.global	USART_Init
 101              		.syntax unified
 102              		.code	16
 103              		.thumb_func
 105              	USART_Init:
 106              	.LFB61:
 103:Core/Src/gd32e230c_eval.c **** 
 104:Core/Src/gd32e230c_eval.c **** /*
 105:Core/Src/gd32e230c_eval.c ****  * @brief    USART Initialization
 106:Core/Src/gd32e230c_eval.c ****  * @param    None
 107:Core/Src/gd32e230c_eval.c ****  * @retval   None
 108:Core/Src/gd32e230c_eval.c ****  */
 109:Core/Src/gd32e230c_eval.c **** void USART_Init(void)
 110:Core/Src/gd32e230c_eval.c **** {
 107              		.loc 1 110 1 is_stmt 1 view -0
 108              		.cfi_startproc
 109              		@ args = 0, pretend = 0, frame = 0
 110              		@ frame_needed = 0, uses_anonymous_args = 0
 111 0000 10B5     		push	{r4, lr}
 112              	.LCFI1:
 113              		.cfi_def_cfa_offset 8
 114              		.cfi_offset 4, -8
 115              		.cfi_offset 14, -4
 111:Core/Src/gd32e230c_eval.c ****     /* enable the USART clock */
 112:Core/Src/gd32e230c_eval.c ****     rcu_periph_clock_enable(RCU_GPIOA);
 116              		.loc 1 112 5 view .LVU13
 117 0002 40F21150 		movw	r0, #1297
 118 0006 FFF7FEFF 		bl	rcu_periph_clock_enable
 119              	.LVL10:
ARM GAS  D:\noval\Temp\ccx6PMVA.s 			page 5


 113:Core/Src/gd32e230c_eval.c **** 
 114:Core/Src/gd32e230c_eval.c ****      /* enable the USART clock */
 115:Core/Src/gd32e230c_eval.c ****     rcu_periph_clock_enable(RCU_USART0);
 120              		.loc 1 115 5 view .LVU14
 121 000a 40F20E60 		movw	r0, #1550
 122 000e FFF7FEFF 		bl	rcu_periph_clock_enable
 123              	.LVL11:
 116:Core/Src/gd32e230c_eval.c **** 
 117:Core/Src/gd32e230c_eval.c ****     /* alternate function configuration */
 118:Core/Src/gd32e230c_eval.c ****     gpio_af_set(GPIOA, GPIO_AF_1, GPIO_PIN_9|GPIO_PIN_10);
 124              		.loc 1 118 5 view .LVU15
 125 0012 9024     		movs	r4, #144
 126 0014 E405     		lsls	r4, r4, #23
 127 0016 40F20062 		movw	r2, #1536
 128 001a 0121     		movs	r1, #1
 129 001c 2000     		movs	r0, r4
 130 001e FFF7FEFF 		bl	gpio_af_set
 131              	.LVL12:
 119:Core/Src/gd32e230c_eval.c ****     
 120:Core/Src/gd32e230c_eval.c ****     /* configure USART GPIO port */ 
 121:Core/Src/gd32e230c_eval.c ****     gpio_mode_set(GPIOA, GPIO_MODE_AF, GPIO_PUPD_PULLUP, GPIO_PIN_9|GPIO_PIN_10);
 132              		.loc 1 121 5 view .LVU16
 133 0022 40F20063 		movw	r3, #1536
 134 0026 0122     		movs	r2, #1
 135 0028 0221     		movs	r1, #2
 136 002a 2000     		movs	r0, r4
 137 002c FFF7FEFF 		bl	gpio_mode_set
 138              	.LVL13:
 122:Core/Src/gd32e230c_eval.c ****     gpio_output_options_set(GPIOA, GPIO_OTYPE_PP, GPIO_OSPEED_10MHZ, GPIO_PIN_9|GPIO_PIN_10);
 139              		.loc 1 122 5 view .LVU17
 140 0030 40F20063 		movw	r3, #1536
 141 0034 0122     		movs	r2, #1
 142 0036 0021     		movs	r1, #0
 143 0038 2000     		movs	r0, r4
 144 003a FFF7FEFF 		bl	gpio_output_options_set
 145              	.LVL14:
 123:Core/Src/gd32e230c_eval.c **** 
 124:Core/Src/gd32e230c_eval.c ****     /* deinitilize the USART */
 125:Core/Src/gd32e230c_eval.c ****     usart_deinit(USART0);
 146              		.loc 1 125 5 view .LVU18
 147 003e 43F60004 		movw	r4, #14336
 148 0042 C4F20104 		movt	r4, 16385
 149 0046 2000     		movs	r0, r4
 150 0048 FFF7FEFF 		bl	usart_deinit
 151              	.LVL15:
 126:Core/Src/gd32e230c_eval.c **** 
 127:Core/Src/gd32e230c_eval.c ****     /* USART configure */
 128:Core/Src/gd32e230c_eval.c ****     usart_word_length_set(USART0, USART_WL_8BIT);
 152              		.loc 1 128 5 view .LVU19
 153 004c 0021     		movs	r1, #0
 154 004e 2000     		movs	r0, r4
 155 0050 FFF7FEFF 		bl	usart_word_length_set
 156              	.LVL16:
 129:Core/Src/gd32e230c_eval.c ****     usart_stop_bit_set(USART0, USART_STB_1BIT);
 157              		.loc 1 129 5 view .LVU20
 158 0054 0021     		movs	r1, #0
 159 0056 2000     		movs	r0, r4
ARM GAS  D:\noval\Temp\ccx6PMVA.s 			page 6


 160 0058 FFF7FEFF 		bl	usart_stop_bit_set
 161              	.LVL17:
 130:Core/Src/gd32e230c_eval.c ****     usart_parity_config(USART0, USART_PM_NONE);
 162              		.loc 1 130 5 view .LVU21
 163 005c 0021     		movs	r1, #0
 164 005e 2000     		movs	r0, r4
 165 0060 FFF7FEFF 		bl	usart_parity_config
 166              	.LVL18:
 131:Core/Src/gd32e230c_eval.c ****     usart_baudrate_set(USART0, 115200U);
 167              		.loc 1 131 5 view .LVU22
 168 0064 E121     		movs	r1, #225
 169 0066 4902     		lsls	r1, r1, #9
 170 0068 2000     		movs	r0, r4
 171 006a FFF7FEFF 		bl	usart_baudrate_set
 172              	.LVL19:
 132:Core/Src/gd32e230c_eval.c ****     usart_receive_config(USART0, USART_RECEIVE_ENABLE);
 173              		.loc 1 132 5 view .LVU23
 174 006e 0421     		movs	r1, #4
 175 0070 2000     		movs	r0, r4
 176 0072 FFF7FEFF 		bl	usart_receive_config
 177              	.LVL20:
 133:Core/Src/gd32e230c_eval.c ****     usart_transmit_config(USART0, USART_TRANSMIT_ENABLE);
 178              		.loc 1 133 5 view .LVU24
 179 0076 0821     		movs	r1, #8
 180 0078 2000     		movs	r0, r4
 181 007a FFF7FEFF 		bl	usart_transmit_config
 182              	.LVL21:
 134:Core/Src/gd32e230c_eval.c ****     usart_enable(USART0);
 183              		.loc 1 134 5 view .LVU25
 184 007e 2000     		movs	r0, r4
 185 0080 FFF7FEFF 		bl	usart_enable
 186              	.LVL22:
 135:Core/Src/gd32e230c_eval.c **** }
 187              		.loc 1 135 1 is_stmt 0 view .LVU26
 188              		@ sp needed
 189 0084 10BD     		pop	{r4, pc}
 190              		.cfi_endproc
 191              	.LFE61:
 193              		.section	.text.__io_putchar,"ax",%progbits
 194              		.align	1
 195              		.global	__io_putchar
 196              		.syntax unified
 197              		.code	16
 198              		.thumb_func
 200              	__io_putchar:
 201              	.LVL23:
 202              	.LFB62:
 136:Core/Src/gd32e230c_eval.c **** 
 137:Core/Src/gd32e230c_eval.c **** /* 
 138:Core/Src/gd32e230c_eval.c ****  * @brief    retarget the C library printf function to the USART
 139:Core/Src/gd32e230c_eval.c ****  * @param    ch: character to be printed
 140:Core/Src/gd32e230c_eval.c ****  * @retval   none
 141:Core/Src/gd32e230c_eval.c ****  */
 142:Core/Src/gd32e230c_eval.c **** int __io_putchar(int ch)
 143:Core/Src/gd32e230c_eval.c **** {
 203              		.loc 1 143 1 is_stmt 1 view -0
 204              		.cfi_startproc
ARM GAS  D:\noval\Temp\ccx6PMVA.s 			page 7


 205              		@ args = 0, pretend = 0, frame = 0
 206              		@ frame_needed = 0, uses_anonymous_args = 0
 207              		.loc 1 143 1 is_stmt 0 view .LVU28
 208 0000 10B5     		push	{r4, lr}
 209              	.LCFI2:
 210              		.cfi_def_cfa_offset 8
 211              		.cfi_offset 4, -8
 212              		.cfi_offset 14, -4
 213 0002 0400     		movs	r4, r0
 144:Core/Src/gd32e230c_eval.c ****     usart_data_transmit(USART0, (uint8_t)ch);
 214              		.loc 1 144 5 is_stmt 1 view .LVU29
 215 0004 FF21     		movs	r1, #255
 216 0006 0140     		ands	r1, r0
 217 0008 43F60000 		movw	r0, #14336
 218              	.LVL24:
 219              		.loc 1 144 5 is_stmt 0 view .LVU30
 220 000c C4F20100 		movt	r0, 16385
 221 0010 FFF7FEFF 		bl	usart_data_transmit
 222              	.LVL25:
 145:Core/Src/gd32e230c_eval.c ****     while(RESET == usart_flag_get(USART0, USART_FLAG_TBE));
 223              		.loc 1 145 5 is_stmt 1 view .LVU31
 224              	.L4:
 225              		.loc 1 145 17 discriminator 1 view .LVU32
 226              		.loc 1 145 20 is_stmt 0 discriminator 1 view .LVU33
 227 0014 43F60000 		movw	r0, #14336
 228 0018 C4F20100 		movt	r0, 16385
 229 001c 40F20771 		movw	r1, #1799
 230 0020 FFF7FEFF 		bl	usart_flag_get
 231              	.LVL26:
 232              		.loc 1 145 17 discriminator 1 view .LVU34
 233 0024 0028     		cmp	r0, #0
 234 0026 F5D0     		beq	.L4
 146:Core/Src/gd32e230c_eval.c **** 
 147:Core/Src/gd32e230c_eval.c ****     return ch;
 235              		.loc 1 147 5 is_stmt 1 view .LVU35
 148:Core/Src/gd32e230c_eval.c **** }
 236              		.loc 1 148 1 is_stmt 0 view .LVU36
 237 0028 2000     		movs	r0, r4
 238              		@ sp needed
 239              	.LVL27:
 240              		.loc 1 148 1 view .LVU37
 241 002a 10BD     		pop	{r4, pc}
 242              		.cfi_endproc
 243              	.LFE62:
 245              		.section	.text.ADC_Init,"ax",%progbits
 246              		.align	1
 247              		.global	ADC_Init
 248              		.syntax unified
 249              		.code	16
 250              		.thumb_func
 252              	ADC_Init:
 253              	.LFB63:
 149:Core/Src/gd32e230c_eval.c **** 
 150:Core/Src/gd32e230c_eval.c **** /*
 151:Core/Src/gd32e230c_eval.c ****  * @brief    ADC Initialization
 152:Core/Src/gd32e230c_eval.c ****  * @param    None
 153:Core/Src/gd32e230c_eval.c ****  * @retval   None
ARM GAS  D:\noval\Temp\ccx6PMVA.s 			page 8


 154:Core/Src/gd32e230c_eval.c ****  */
 155:Core/Src/gd32e230c_eval.c **** void ADC_Init(void)
 156:Core/Src/gd32e230c_eval.c **** {
 254              		.loc 1 156 1 is_stmt 1 view -0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258 0000 10B5     		push	{r4, lr}
 259              	.LCFI3:
 260              		.cfi_def_cfa_offset 8
 261              		.cfi_offset 4, -8
 262              		.cfi_offset 14, -4
 157:Core/Src/gd32e230c_eval.c ****     /* enable the ADC clock */
 158:Core/Src/gd32e230c_eval.c ****     // rcu_periph_clock_enable(RCU_GPIOA);
 159:Core/Src/gd32e230c_eval.c **** 
 160:Core/Src/gd32e230c_eval.c ****      /* enable the ADC clock */
 161:Core/Src/gd32e230c_eval.c ****     rcu_periph_clock_enable(RCU_ADC);
 263              		.loc 1 161 5 view .LVU39
 264 0002 40F20960 		movw	r0, #1545
 265 0006 FFF7FEFF 		bl	rcu_periph_clock_enable
 266              	.LVL28:
 162:Core/Src/gd32e230c_eval.c **** 
 163:Core/Src/gd32e230c_eval.c ****     /* configure the ADC frequency */
 164:Core/Src/gd32e230c_eval.c ****     rcu_adc_clock_config(RCU_ADCCK_AHB_DIV3);
 267              		.loc 1 164 5 view .LVU40
 268 000a 0320     		movs	r0, #3
 269 000c FFF7FEFF 		bl	rcu_adc_clock_config
 270              	.LVL29:
 165:Core/Src/gd32e230c_eval.c ****     
 166:Core/Src/gd32e230c_eval.c ****     /* configure ADC GPIO port */ 
 167:Core/Src/gd32e230c_eval.c ****     gpio_mode_set(GPIOA, GPIO_MODE_ANALOG, GPIO_PUPD_NONE, GPIO_PIN_3);
 271              		.loc 1 167 5 view .LVU41
 272 0010 9020     		movs	r0, #144
 273 0012 0823     		movs	r3, #8
 274 0014 0022     		movs	r2, #0
 275 0016 0321     		movs	r1, #3
 276 0018 C005     		lsls	r0, r0, #23
 277 001a FFF7FEFF 		bl	gpio_mode_set
 278              	.LVL30:
 168:Core/Src/gd32e230c_eval.c **** 
 169:Core/Src/gd32e230c_eval.c ****     /* disable the scan mode and continuous mode, use the single conversion mode */
 170:Core/Src/gd32e230c_eval.c ****     adc_special_function_config(ADC_SCAN_MODE, DISABLE);
 279              		.loc 1 170 5 view .LVU42
 280 001e 0021     		movs	r1, #0
 281 0020 40F20010 		movw	r0, #256
 282 0024 FFF7FEFF 		bl	adc_special_function_config
 283              	.LVL31:
 171:Core/Src/gd32e230c_eval.c ****     adc_special_function_config(ADC_CONTINUOUS_MODE, DISABLE);
 284              		.loc 1 171 5 view .LVU43
 285 0028 0021     		movs	r1, #0
 286 002a 0220     		movs	r0, #2
 287 002c FFF7FEFF 		bl	adc_special_function_config
 288              	.LVL32:
 172:Core/Src/gd32e230c_eval.c ****     adc_external_trigger_source_config(ADC_REGULAR_CHANNEL, ADC_EXTTRIG_REGULAR_NONE);
 289              		.loc 1 172 5 view .LVU44
 290 0030 E021     		movs	r1, #224
 291 0032 0903     		lsls	r1, r1, #12
ARM GAS  D:\noval\Temp\ccx6PMVA.s 			page 9


 292 0034 0120     		movs	r0, #1
 293 0036 FFF7FEFF 		bl	adc_external_trigger_source_config
 294              	.LVL33:
 173:Core/Src/gd32e230c_eval.c **** 
 174:Core/Src/gd32e230c_eval.c ****     adc_regular_channel_config(0U, ADC_CHANNEL_3, ADC_SAMPLETIME_55POINT5);
 295              		.loc 1 174 5 view .LVU45
 296 003a 0522     		movs	r2, #5
 297 003c 0321     		movs	r1, #3
 298 003e 0020     		movs	r0, #0
 299 0040 FFF7FEFF 		bl	adc_regular_channel_config
 300              	.LVL34:
 175:Core/Src/gd32e230c_eval.c ****     adc_data_alignment_config(ADC_DATAALIGN_RIGHT);
 301              		.loc 1 175 5 view .LVU46
 302 0044 0020     		movs	r0, #0
 303 0046 FFF7FEFF 		bl	adc_data_alignment_config
 304              	.LVL35:
 176:Core/Src/gd32e230c_eval.c ****     adc_resolution_config(ADC_RESOLUTION_12B);
 305              		.loc 1 176 5 view .LVU47
 306 004a 0020     		movs	r0, #0
 307 004c FFF7FEFF 		bl	adc_resolution_config
 308              	.LVL36:
 177:Core/Src/gd32e230c_eval.c ****     adc_channel_length_config(ADC_REGULAR_CHANNEL, 1);
 309              		.loc 1 177 5 view .LVU48
 310 0050 0121     		movs	r1, #1
 311 0052 0120     		movs	r0, #1
 312 0054 FFF7FEFF 		bl	adc_channel_length_config
 313              	.LVL37:
 178:Core/Src/gd32e230c_eval.c **** 
 179:Core/Src/gd32e230c_eval.c ****     adc_external_trigger_config(ADC_REGULAR_CHANNEL,ENABLE);
 314              		.loc 1 179 5 view .LVU49
 315 0058 0121     		movs	r1, #1
 316 005a 0120     		movs	r0, #1
 317 005c FFF7FEFF 		bl	adc_external_trigger_config
 318              	.LVL38:
 180:Core/Src/gd32e230c_eval.c ****     adc_software_trigger_enable(ADC_REGULAR_CHANNEL);
 319              		.loc 1 180 5 view .LVU50
 320 0060 0120     		movs	r0, #1
 321 0062 FFF7FEFF 		bl	adc_software_trigger_enable
 322              	.LVL39:
 181:Core/Src/gd32e230c_eval.c **** 
 182:Core/Src/gd32e230c_eval.c ****     adc_enable();
 323              		.loc 1 182 5 view .LVU51
 324 0066 FFF7FEFF 		bl	adc_enable
 325              	.LVL40:
 183:Core/Src/gd32e230c_eval.c ****     delay_1ms(1U);
 326              		.loc 1 183 5 view .LVU52
 327 006a 0120     		movs	r0, #1
 328 006c FFF7FEFF 		bl	delay_1ms
 329              	.LVL41:
 184:Core/Src/gd32e230c_eval.c **** 
 185:Core/Src/gd32e230c_eval.c ****     adc_calibration_enable();
 330              		.loc 1 185 5 view .LVU53
 331 0070 FFF7FEFF 		bl	adc_calibration_enable
 332              	.LVL42:
 186:Core/Src/gd32e230c_eval.c **** }
 333              		.loc 1 186 1 is_stmt 0 view .LVU54
 334              		@ sp needed
ARM GAS  D:\noval\Temp\ccx6PMVA.s 			page 10


 335 0074 10BD     		pop	{r4, pc}
 336              		.cfi_endproc
 337              	.LFE63:
 339              		.section	.text.ADCGetValue,"ax",%progbits
 340              		.align	1
 341              		.global	ADCGetValue
 342              		.syntax unified
 343              		.code	16
 344              		.thumb_func
 346              	ADCGetValue:
 347              	.LVL43:
 348              	.LFB64:
 187:Core/Src/gd32e230c_eval.c **** 
 188:Core/Src/gd32e230c_eval.c **** /*
 189:Core/Src/gd32e230c_eval.c ****  * @brief    ADC 
 190:Core/Src/gd32e230c_eval.c ****  * @param    channel: specify the ADC channel
 191:Core/Src/gd32e230c_eval.c ****  * @retval   None
 192:Core/Src/gd32e230c_eval.c ****  */
 193:Core/Src/gd32e230c_eval.c **** uint16_t ADCGetValue(uint8_t ADC_CHANNEL_x)
 194:Core/Src/gd32e230c_eval.c **** {
 349              		.loc 1 194 1 is_stmt 1 view -0
 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 0
 352              		@ frame_needed = 0, uses_anonymous_args = 0
 353              		.loc 1 194 1 is_stmt 0 view .LVU56
 354 0000 10B5     		push	{r4, lr}
 355              	.LCFI4:
 356              		.cfi_def_cfa_offset 8
 357              		.cfi_offset 4, -8
 358              		.cfi_offset 14, -4
 359 0002 0100     		movs	r1, r0
 195:Core/Src/gd32e230c_eval.c ****     uint16_t adc_value = 0;
 360              		.loc 1 195 5 is_stmt 1 view .LVU57
 361              	.LVL44:
 196:Core/Src/gd32e230c_eval.c ****         
 197:Core/Src/gd32e230c_eval.c ****     //设置采集通道
 198:Core/Src/gd32e230c_eval.c ****     adc_regular_channel_config(0, ADC_CHANNEL_x, ADC_SAMPLETIME_55POINT5);
 362              		.loc 1 198 5 view .LVU58
 363 0004 0522     		movs	r2, #5
 364 0006 0020     		movs	r0, #0
 365              	.LVL45:
 366              		.loc 1 198 5 is_stmt 0 view .LVU59
 367 0008 FFF7FEFF 		bl	adc_regular_channel_config
 368              	.LVL46:
 199:Core/Src/gd32e230c_eval.c ****     //开始软件转换
 200:Core/Src/gd32e230c_eval.c ****     adc_software_trigger_enable(ADC_REGULAR_CHANNEL);
 369              		.loc 1 200 5 is_stmt 1 view .LVU60
 370 000c 0120     		movs	r0, #1
 371 000e FFF7FEFF 		bl	adc_software_trigger_enable
 372              	.LVL47:
 201:Core/Src/gd32e230c_eval.c **** 
 202:Core/Src/gd32e230c_eval.c ****     //等待 ADC 采样完成 
 203:Core/Src/gd32e230c_eval.c ****     while (adc_flag_get(ADC_FLAG_EOC) == RESET);
 373              		.loc 1 203 5 view .LVU61
 374              	.L7:
 375              		.loc 1 203 39 discriminator 1 view .LVU62
 376              		.loc 1 203 12 is_stmt 0 discriminator 1 view .LVU63
ARM GAS  D:\noval\Temp\ccx6PMVA.s 			page 11


 377 0012 0220     		movs	r0, #2
 378 0014 FFF7FEFF 		bl	adc_flag_get
 379              	.LVL48:
 380              		.loc 1 203 39 discriminator 1 view .LVU64
 381 0018 0028     		cmp	r0, #0
 382 001a FAD0     		beq	.L7
 204:Core/Src/gd32e230c_eval.c ****     //读取采样值
 205:Core/Src/gd32e230c_eval.c ****     adc_value = adc_regular_data_read();
 383              		.loc 1 205 5 is_stmt 1 view .LVU65
 384              		.loc 1 205 17 is_stmt 0 view .LVU66
 385 001c FFF7FEFF 		bl	adc_regular_data_read
 386              	.LVL49:
 206:Core/Src/gd32e230c_eval.c ****     //返回采样值
 207:Core/Src/gd32e230c_eval.c ****     return adc_value;
 387              		.loc 1 207 5 is_stmt 1 view .LVU67
 208:Core/Src/gd32e230c_eval.c **** }
 388              		.loc 1 208 1 is_stmt 0 view .LVU68
 389              		@ sp needed
 390 0020 10BD     		pop	{r4, pc}
 391              		.cfi_endproc
 392              	.LFE64:
 394              		.section	.text.Timer_Init,"ax",%progbits
 395              		.align	1
 396              		.global	Timer_Init
 397              		.syntax unified
 398              		.code	16
 399              		.thumb_func
 401              	Timer_Init:
 402              	.LFB65:
 209:Core/Src/gd32e230c_eval.c **** 
 210:Core/Src/gd32e230c_eval.c **** 
 211:Core/Src/gd32e230c_eval.c **** void Timer_Init(void)
 212:Core/Src/gd32e230c_eval.c **** {
 403              		.loc 1 212 1 is_stmt 1 view -0
 404              		.cfi_startproc
 405              		@ args = 0, pretend = 0, frame = 40
 406              		@ frame_needed = 0, uses_anonymous_args = 0
 407 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 408              	.LCFI5:
 409              		.cfi_def_cfa_offset 20
 410              		.cfi_offset 4, -20
 411              		.cfi_offset 5, -16
 412              		.cfi_offset 6, -12
 413              		.cfi_offset 7, -8
 414              		.cfi_offset 14, -4
 415 0002 CE46     		mov	lr, r9
 416 0004 4746     		mov	r7, r8
 417 0006 80B5     		push	{r7, lr}
 418              	.LCFI6:
 419              		.cfi_def_cfa_offset 28
 420              		.cfi_offset 8, -28
 421              		.cfi_offset 9, -24
 422 0008 8BB0     		sub	sp, sp, #44
 423              	.LCFI7:
 424              		.cfi_def_cfa_offset 72
 213:Core/Src/gd32e230c_eval.c ****     // 定时器初始化参数结构体
 214:Core/Src/gd32e230c_eval.c ****     timer_parameter_struct timer_initpara;
ARM GAS  D:\noval\Temp\ccx6PMVA.s 			page 12


 425              		.loc 1 214 5 view .LVU70
 215:Core/Src/gd32e230c_eval.c ****     timer_oc_parameter_struct timer_ocinitpara;
 426              		.loc 1 215 5 view .LVU71
 216:Core/Src/gd32e230c_eval.c ****     timer_ic_parameter_struct timer_icinitpara;
 427              		.loc 1 216 5 view .LVU72
 217:Core/Src/gd32e230c_eval.c **** 
 218:Core/Src/gd32e230c_eval.c ****     /* enable the timer clock */
 219:Core/Src/gd32e230c_eval.c ****     rcu_periph_clock_enable(RCU_TIMER15);
 428              		.loc 1 219 5 view .LVU73
 429 000a 40F21160 		movw	r0, #1553
 430 000e FFF7FEFF 		bl	rcu_periph_clock_enable
 431              	.LVL50:
 220:Core/Src/gd32e230c_eval.c ****     rcu_periph_clock_enable(RCU_TIMER14);
 432              		.loc 1 220 5 view .LVU74
 433 0012 40F21060 		movw	r0, #1552
 434 0016 FFF7FEFF 		bl	rcu_periph_clock_enable
 435              	.LVL51:
 221:Core/Src/gd32e230c_eval.c ****     rcu_periph_clock_enable(RCU_TIMER2);
 436              		.loc 1 221 5 view .LVU75
 437 001a 40F20170 		movw	r0, #1793
 438 001e FFF7FEFF 		bl	rcu_periph_clock_enable
 439              	.LVL52:
 222:Core/Src/gd32e230c_eval.c **** 
 223:Core/Src/gd32e230c_eval.c ****     /* configure TIMER GPIO port */ 
 224:Core/Src/gd32e230c_eval.c ****     gpio_mode_set(GPIOA, GPIO_MODE_AF, GPIO_PUPD_NONE, GPIO_PIN_2);
 440              		.loc 1 224 5 view .LVU76
 441 0022 9024     		movs	r4, #144
 442 0024 E405     		lsls	r4, r4, #23
 443 0026 0423     		movs	r3, #4
 444 0028 0022     		movs	r2, #0
 445 002a 0221     		movs	r1, #2
 446 002c 2000     		movs	r0, r4
 447 002e FFF7FEFF 		bl	gpio_mode_set
 448              	.LVL53:
 225:Core/Src/gd32e230c_eval.c ****     gpio_output_options_set(GPIOA, GPIO_OTYPE_PP, GPIO_OSPEED_50MHZ, GPIO_PIN_2);
 449              		.loc 1 225 5 view .LVU77
 450 0032 0423     		movs	r3, #4
 451 0034 0322     		movs	r2, #3
 452 0036 0021     		movs	r1, #0
 453 0038 2000     		movs	r0, r4
 454 003a FFF7FEFF 		bl	gpio_output_options_set
 455              	.LVL54:
 226:Core/Src/gd32e230c_eval.c ****     gpio_mode_set(GPIOA, GPIO_MODE_AF, GPIO_PUPD_NONE, GPIO_PIN_6);
 456              		.loc 1 226 5 view .LVU78
 457 003e 4023     		movs	r3, #64
 458 0040 0022     		movs	r2, #0
 459 0042 0221     		movs	r1, #2
 460 0044 2000     		movs	r0, r4
 461 0046 FFF7FEFF 		bl	gpio_mode_set
 462              	.LVL55:
 227:Core/Src/gd32e230c_eval.c ****     gpio_output_options_set(GPIOA, GPIO_OTYPE_PP, GPIO_OSPEED_50MHZ, GPIO_PIN_6);
 463              		.loc 1 227 5 view .LVU79
 464 004a 4023     		movs	r3, #64
 465 004c 0322     		movs	r2, #3
 466 004e 0021     		movs	r1, #0
 467 0050 2000     		movs	r0, r4
 468 0052 FFF7FEFF 		bl	gpio_output_options_set
ARM GAS  D:\noval\Temp\ccx6PMVA.s 			page 13


 469              	.LVL56:
 228:Core/Src/gd32e230c_eval.c **** 
 229:Core/Src/gd32e230c_eval.c ****     /* alternate function configuration */
 230:Core/Src/gd32e230c_eval.c ****     gpio_af_set(GPIOA, GPIO_AF_0, GPIO_PIN_2);
 470              		.loc 1 230 5 view .LVU80
 471 0056 0422     		movs	r2, #4
 472 0058 0021     		movs	r1, #0
 473 005a 2000     		movs	r0, r4
 474 005c FFF7FEFF 		bl	gpio_af_set
 475              	.LVL57:
 231:Core/Src/gd32e230c_eval.c ****     gpio_af_set(GPIOA, GPIO_AF_1, GPIO_PIN_6);
 476              		.loc 1 231 5 view .LVU81
 477 0060 4022     		movs	r2, #64
 478 0062 0121     		movs	r1, #1
 479 0064 2000     		movs	r0, r4
 480 0066 FFF7FEFF 		bl	gpio_af_set
 481              	.LVL58:
 232:Core/Src/gd32e230c_eval.c **** 
 233:Core/Src/gd32e230c_eval.c ****     // reset timer configuration
 234:Core/Src/gd32e230c_eval.c ****     timer_deinit(TIMER15);
 482              		.loc 1 234 5 view .LVU82
 483 006a 44F20048 		movw	r8, #17408
 484 006e C4F20108 		movt	r8, 16385
 485 0072 4046     		mov	r0, r8
 486 0074 FFF7FEFF 		bl	timer_deinit
 487              	.LVL59:
 235:Core/Src/gd32e230c_eval.c ****     timer_deinit(TIMER14);
 488              		.loc 1 235 5 view .LVU83
 489 0078 44F20006 		movw	r6, #16384
 490 007c C4F20106 		movt	r6, 16385
 491 0080 3000     		movs	r0, r6
 492 0082 FFF7FEFF 		bl	timer_deinit
 493              	.LVL60:
 236:Core/Src/gd32e230c_eval.c ****     timer_deinit(TIMER2);
 494              		.loc 1 236 5 view .LVU84
 495 0086 40F20047 		movw	r7, #1024
 496 008a C4F20007 		movt	r7, 16384
 497 008e 3800     		movs	r0, r7
 498 0090 FFF7FEFF 		bl	timer_deinit
 499              	.LVL61:
 237:Core/Src/gd32e230c_eval.c ****     // initialize timer 15
 238:Core/Src/gd32e230c_eval.c ****     timer_struct_para_init(&timer_initpara);
 500              		.loc 1 238 5 view .LVU85
 501 0094 06AC     		add	r4, sp, #24
 502 0096 2000     		movs	r0, r4
 503 0098 FFF7FEFF 		bl	timer_struct_para_init
 504              	.LVL62:
 239:Core/Src/gd32e230c_eval.c ****     timer_initpara.prescaler         = 7200 - 1;
 505              		.loc 1 239 5 view .LVU86
 506              		.loc 1 239 38 is_stmt 0 view .LVU87
 507 009c 41F61F43 		movw	r3, #7199
 508 00a0 2380     		strh	r3, [r4]
 240:Core/Src/gd32e230c_eval.c ****     timer_initpara.period            = 10000 - 1;
 509              		.loc 1 240 5 is_stmt 1 view .LVU88
 510              		.loc 1 240 38 is_stmt 0 view .LVU89
 511 00a2 42F20F73 		movw	r3, #9999
 512 00a6 A360     		str	r3, [r4, #8]
ARM GAS  D:\noval\Temp\ccx6PMVA.s 			page 14


 241:Core/Src/gd32e230c_eval.c ****     timer_initpara.clockdivision     = TIMER_CKDIV_DIV1;
 513              		.loc 1 241 5 is_stmt 1 view .LVU90
 514              		.loc 1 241 38 is_stmt 0 view .LVU91
 515 00a8 0025     		movs	r5, #0
 516 00aa 40F20009 		movw	r9, 0
 517 00ae E580     		strh	r5, [r4, #6]
 242:Core/Src/gd32e230c_eval.c ****     timer_initpara.alignedmode       = TIMER_COUNTER_EDGE;
 518              		.loc 1 242 5 is_stmt 1 view .LVU92
 519              		.loc 1 242 38 is_stmt 0 view .LVU93
 520 00b0 6580     		strh	r5, [r4, #2]
 243:Core/Src/gd32e230c_eval.c ****     timer_initpara.counterdirection  = TIMER_COUNTER_UP;
 521              		.loc 1 243 5 is_stmt 1 view .LVU94
 522              		.loc 1 243 38 is_stmt 0 view .LVU95
 523 00b2 A580     		strh	r5, [r4, #4]
 244:Core/Src/gd32e230c_eval.c ****     timer_initpara.repetitioncounter = 0;
 524              		.loc 1 244 5 is_stmt 1 view .LVU96
 525              		.loc 1 244 38 is_stmt 0 view .LVU97
 526 00b4 4B46     		mov	r3, r9
 527 00b6 2373     		strb	r3, [r4, #12]
 245:Core/Src/gd32e230c_eval.c ****     timer_init(TIMER15, &timer_initpara);
 528              		.loc 1 245 5 is_stmt 1 view .LVU98
 529 00b8 2100     		movs	r1, r4
 530 00ba 4046     		mov	r0, r8
 531 00bc FFF7FEFF 		bl	timer_init
 532              	.LVL63:
 246:Core/Src/gd32e230c_eval.c ****     // initialize timer 14
 247:Core/Src/gd32e230c_eval.c ****     // timer_struct_para_init(&timer_initpara);
 248:Core/Src/gd32e230c_eval.c ****     // timer_initpara.prescaler = 7200 - 1;
 249:Core/Src/gd32e230c_eval.c ****     // timer_initpara.period = 10000 - 1;
 250:Core/Src/gd32e230c_eval.c ****     // timer_initpara.clockdivision = TIMER_CKDIV_DIV1;
 251:Core/Src/gd32e230c_eval.c ****     // timer_initpara.alignedmode = TIMER_COUNTER_EDGE;
 252:Core/Src/gd32e230c_eval.c ****     // timer_initpara.counterdirection = TIMER_COUNTER_UP;
 253:Core/Src/gd32e230c_eval.c ****     // timer_initpara.repetitioncounter = 0;
 254:Core/Src/gd32e230c_eval.c ****     timer_init(TIMER14, &timer_initpara);
 533              		.loc 1 254 5 view .LVU99
 534 00c0 2100     		movs	r1, r4
 535 00c2 3000     		movs	r0, r6
 536 00c4 FFF7FEFF 		bl	timer_init
 537              	.LVL64:
 255:Core/Src/gd32e230c_eval.c ****     // initialize timer 2
 256:Core/Src/gd32e230c_eval.c ****     timer_struct_para_init(&timer_initpara);
 538              		.loc 1 256 5 view .LVU100
 539 00c8 2000     		movs	r0, r4
 540 00ca FFF7FEFF 		bl	timer_struct_para_init
 541              	.LVL65:
 257:Core/Src/gd32e230c_eval.c ****     timer_initpara.prescaler         = 72-1;
 542              		.loc 1 257 5 view .LVU101
 543              		.loc 1 257 38 is_stmt 0 view .LVU102
 544 00ce 4723     		movs	r3, #71
 545 00d0 2380     		strh	r3, [r4]
 258:Core/Src/gd32e230c_eval.c ****     timer_initpara.period            = 65535;
 546              		.loc 1 258 5 is_stmt 1 view .LVU103
 547              		.loc 1 258 38 is_stmt 0 view .LVU104
 548 00d2 4FF6FF73 		movw	r3, #65535
 549 00d6 A360     		str	r3, [r4, #8]
 259:Core/Src/gd32e230c_eval.c ****     timer_initpara.clockdivision     = TIMER_CKDIV_DIV1;
 550              		.loc 1 259 5 is_stmt 1 view .LVU105
ARM GAS  D:\noval\Temp\ccx6PMVA.s 			page 15


 551              		.loc 1 259 38 is_stmt 0 view .LVU106
 552 00d8 E580     		strh	r5, [r4, #6]
 260:Core/Src/gd32e230c_eval.c ****     timer_initpara.alignedmode       = TIMER_COUNTER_EDGE;
 553              		.loc 1 260 5 is_stmt 1 view .LVU107
 554              		.loc 1 260 38 is_stmt 0 view .LVU108
 555 00da 6580     		strh	r5, [r4, #2]
 261:Core/Src/gd32e230c_eval.c ****     timer_initpara.counterdirection  = TIMER_COUNTER_UP;
 556              		.loc 1 261 5 is_stmt 1 view .LVU109
 557              		.loc 1 261 38 is_stmt 0 view .LVU110
 558 00dc A580     		strh	r5, [r4, #4]
 262:Core/Src/gd32e230c_eval.c ****     timer_initpara.repetitioncounter = 0;
 559              		.loc 1 262 5 is_stmt 1 view .LVU111
 560              		.loc 1 262 38 is_stmt 0 view .LVU112
 561 00de 4B46     		mov	r3, r9
 562 00e0 2373     		strb	r3, [r4, #12]
 263:Core/Src/gd32e230c_eval.c ****     timer_init(TIMER2, &timer_initpara);
 563              		.loc 1 263 5 is_stmt 1 view .LVU113
 564 00e2 2100     		movs	r1, r4
 565 00e4 3800     		movs	r0, r7
 566 00e6 FFF7FEFF 		bl	timer_init
 567              	.LVL66:
 264:Core/Src/gd32e230c_eval.c **** 
 265:Core/Src/gd32e230c_eval.c ****     timer_channel_output_struct_para_init(&timer_ocinitpara);
 568              		.loc 1 265 5 view .LVU114
 569 00ea 03AC     		add	r4, sp, #12
 570 00ec 2000     		movs	r0, r4
 571 00ee FFF7FEFF 		bl	timer_channel_output_struct_para_init
 572              	.LVL67:
 266:Core/Src/gd32e230c_eval.c ****     timer_ocinitpara.outputstate  = TIMER_CCX_ENABLE;
 573              		.loc 1 266 5 view .LVU115
 574              		.loc 1 266 35 is_stmt 0 view .LVU116
 575 00f2 40F20109 		movw	r9, #1
 576 00f6 4B46     		mov	r3, r9
 577 00f8 2380     		strh	r3, [r4]
 267:Core/Src/gd32e230c_eval.c ****     timer_ocinitpara.outputnstate = TIMER_CCXN_DISABLE;
 578              		.loc 1 267 5 is_stmt 1 view .LVU117
 579              		.loc 1 267 35 is_stmt 0 view .LVU118
 580 00fa 6580     		strh	r5, [r4, #2]
 268:Core/Src/gd32e230c_eval.c ****     timer_ocinitpara.ocpolarity   = TIMER_OC_POLARITY_HIGH;
 581              		.loc 1 268 5 is_stmt 1 view .LVU119
 582              		.loc 1 268 35 is_stmt 0 view .LVU120
 583 00fc A580     		strh	r5, [r4, #4]
 269:Core/Src/gd32e230c_eval.c ****     timer_ocinitpara.ocnpolarity  = TIMER_OCN_POLARITY_HIGH;
 584              		.loc 1 269 5 is_stmt 1 view .LVU121
 585              		.loc 1 269 35 is_stmt 0 view .LVU122
 586 00fe E580     		strh	r5, [r4, #6]
 270:Core/Src/gd32e230c_eval.c ****     timer_ocinitpara.ocidlestate  = TIMER_OC_IDLE_STATE_LOW;
 587              		.loc 1 270 5 is_stmt 1 view .LVU123
 588              		.loc 1 270 35 is_stmt 0 view .LVU124
 589 0100 2581     		strh	r5, [r4, #8]
 271:Core/Src/gd32e230c_eval.c ****     timer_ocinitpara.ocnidlestate = TIMER_OCN_IDLE_STATE_LOW;
 590              		.loc 1 271 5 is_stmt 1 view .LVU125
 591              		.loc 1 271 35 is_stmt 0 view .LVU126
 592 0102 6581     		strh	r5, [r4, #10]
 272:Core/Src/gd32e230c_eval.c ****     timer_channel_output_config(TIMER14, TIMER_CH_0, &timer_ocinitpara);
 593              		.loc 1 272 5 is_stmt 1 view .LVU127
 594 0104 2200     		movs	r2, r4
ARM GAS  D:\noval\Temp\ccx6PMVA.s 			page 16


 595 0106 0021     		movs	r1, #0
 596 0108 3000     		movs	r0, r6
 597 010a FFF7FEFF 		bl	timer_channel_output_config
 598              	.LVL68:
 273:Core/Src/gd32e230c_eval.c ****     timer_channel_output_pulse_value_config(TIMER14, TIMER_CH_0, 5000);
 599              		.loc 1 273 5 view .LVU128
 600 010e 41F28832 		movw	r2, #5000
 601 0112 0021     		movs	r1, #0
 602 0114 3000     		movs	r0, r6
 603 0116 FFF7FEFF 		bl	timer_channel_output_pulse_value_config
 604              	.LVL69:
 274:Core/Src/gd32e230c_eval.c ****     /* PWM0: vaild to invaild level, PWM1: invaild to vaild level */
 275:Core/Src/gd32e230c_eval.c ****     timer_channel_output_mode_config(TIMER14, TIMER_CH_0, TIMER_OC_MODE_PWM0);
 605              		.loc 1 275 5 view .LVU129
 606 011a 6022     		movs	r2, #96
 607 011c 0021     		movs	r1, #0
 608 011e 3000     		movs	r0, r6
 609 0120 FFF7FEFF 		bl	timer_channel_output_mode_config
 610              	.LVL70:
 276:Core/Src/gd32e230c_eval.c ****     timer_channel_output_shadow_config(TIMER14, TIMER_CH_0, TIMER_OC_SHADOW_DISABLE);
 611              		.loc 1 276 5 view .LVU130
 612 0124 0022     		movs	r2, #0
 613 0126 0021     		movs	r1, #0
 614 0128 3000     		movs	r0, r6
 615 012a FFF7FEFF 		bl	timer_channel_output_shadow_config
 616              	.LVL71:
 277:Core/Src/gd32e230c_eval.c ****     timer_auto_reload_shadow_enable(TIMER14);
 617              		.loc 1 277 5 view .LVU131
 618 012e 3000     		movs	r0, r6
 619 0130 FFF7FEFF 		bl	timer_auto_reload_shadow_enable
 620              	.LVL72:
 278:Core/Src/gd32e230c_eval.c ****     timer_primary_output_config(TIMER14, ENABLE);
 621              		.loc 1 278 5 view .LVU132
 622 0134 0121     		movs	r1, #1
 623 0136 3000     		movs	r0, r6
 624 0138 FFF7FEFF 		bl	timer_primary_output_config
 625              	.LVL73:
 279:Core/Src/gd32e230c_eval.c ****     
 280:Core/Src/gd32e230c_eval.c ****     timer_icinitpara.icpolarity  = TIMER_IC_POLARITY_RISING;
 626              		.loc 1 280 5 view .LVU133
 627              		.loc 1 280 34 is_stmt 0 view .LVU134
 628 013c 01AA     		add	r2, sp, #4
 629 013e 1580     		strh	r5, [r2]
 281:Core/Src/gd32e230c_eval.c ****     timer_icinitpara.icselection = TIMER_IC_SELECTION_DIRECTTI;
 630              		.loc 1 281 5 is_stmt 1 view .LVU135
 631              		.loc 1 281 34 is_stmt 0 view .LVU136
 632 0140 4B46     		mov	r3, r9
 633 0142 5380     		strh	r3, [r2, #2]
 282:Core/Src/gd32e230c_eval.c ****     timer_icinitpara.icprescaler = TIMER_IC_PSC_DIV1;
 634              		.loc 1 282 5 is_stmt 1 view .LVU137
 635              		.loc 1 282 34 is_stmt 0 view .LVU138
 636 0144 9580     		strh	r5, [r2, #4]
 283:Core/Src/gd32e230c_eval.c ****     timer_icinitpara.icfilter    = 0x0;
 637              		.loc 1 283 5 is_stmt 1 view .LVU139
 638              		.loc 1 283 34 is_stmt 0 view .LVU140
 639 0146 D580     		strh	r5, [r2, #6]
 284:Core/Src/gd32e230c_eval.c ****     timer_input_capture_config(TIMER2, TIMER_CH_0, &timer_icinitpara);
ARM GAS  D:\noval\Temp\ccx6PMVA.s 			page 17


 640              		.loc 1 284 5 is_stmt 1 view .LVU141
 641 0148 0021     		movs	r1, #0
 642 014a 3800     		movs	r0, r7
 643 014c FFF7FEFF 		bl	timer_input_capture_config
 644              	.LVL74:
 285:Core/Src/gd32e230c_eval.c ****     timer_auto_reload_shadow_enable(TIMER2);
 645              		.loc 1 285 5 view .LVU142
 646 0150 3800     		movs	r0, r7
 647 0152 FFF7FEFF 		bl	timer_auto_reload_shadow_enable
 648              	.LVL75:
 286:Core/Src/gd32e230c_eval.c **** 
 287:Core/Src/gd32e230c_eval.c ****     /* enable timer interrupt */
 288:Core/Src/gd32e230c_eval.c ****     nvic_irq_enable(TIMER15_IRQn, 1U);
 649              		.loc 1 288 5 view .LVU143
 650 0156 0121     		movs	r1, #1
 651 0158 1520     		movs	r0, #21
 652 015a FFF7FEFF 		bl	nvic_irq_enable
 653              	.LVL76:
 289:Core/Src/gd32e230c_eval.c ****     nvic_irq_enable(TIMER2_IRQn, 0U);
 654              		.loc 1 289 5 view .LVU144
 655 015e 0021     		movs	r1, #0
 656 0160 1020     		movs	r0, #16
 657 0162 FFF7FEFF 		bl	nvic_irq_enable
 658              	.LVL77:
 290:Core/Src/gd32e230c_eval.c ****     timer_interrupt_flag_clear(TIMER15, TIMER_INT_FLAG_UP);
 659              		.loc 1 290 5 view .LVU145
 660 0166 0121     		movs	r1, #1
 661 0168 4046     		mov	r0, r8
 662 016a FFF7FEFF 		bl	timer_interrupt_flag_clear
 663              	.LVL78:
 291:Core/Src/gd32e230c_eval.c ****     timer_interrupt_enable(TIMER15, TIMER_INT_UP);
 664              		.loc 1 291 5 view .LVU146
 665 016e 0121     		movs	r1, #1
 666 0170 4046     		mov	r0, r8
 667 0172 FFF7FEFF 		bl	timer_interrupt_enable
 668              	.LVL79:
 292:Core/Src/gd32e230c_eval.c ****     timer_interrupt_flag_clear(TIMER2, TIMER_INT_FLAG_CH0);
 669              		.loc 1 292 5 view .LVU147
 670 0176 0221     		movs	r1, #2
 671 0178 3800     		movs	r0, r7
 672 017a FFF7FEFF 		bl	timer_interrupt_flag_clear
 673              	.LVL80:
 293:Core/Src/gd32e230c_eval.c ****     timer_interrupt_enable(TIMER2, TIMER_INT_CH0);
 674              		.loc 1 293 5 view .LVU148
 675 017e 0221     		movs	r1, #2
 676 0180 3800     		movs	r0, r7
 677 0182 FFF7FEFF 		bl	timer_interrupt_enable
 678              	.LVL81:
 294:Core/Src/gd32e230c_eval.c **** 
 295:Core/Src/gd32e230c_eval.c ****     timer_enable(TIMER15);
 679              		.loc 1 295 5 view .LVU149
 680 0186 4046     		mov	r0, r8
 681 0188 FFF7FEFF 		bl	timer_enable
 682              	.LVL82:
 296:Core/Src/gd32e230c_eval.c ****     timer_enable(TIMER14);
 683              		.loc 1 296 5 view .LVU150
 684 018c 3000     		movs	r0, r6
ARM GAS  D:\noval\Temp\ccx6PMVA.s 			page 18


 685 018e FFF7FEFF 		bl	timer_enable
 686              	.LVL83:
 297:Core/Src/gd32e230c_eval.c ****     timer_enable(TIMER2);
 687              		.loc 1 297 5 view .LVU151
 688 0192 3800     		movs	r0, r7
 689 0194 FFF7FEFF 		bl	timer_enable
 690              	.LVL84:
 298:Core/Src/gd32e230c_eval.c **** }
 691              		.loc 1 298 1 is_stmt 0 view .LVU152
 692 0198 0BB0     		add	sp, sp, #44
 693              		@ sp needed
 694 019a C0BC     		pop	{r6, r7}
 695 019c B946     		mov	r9, r7
 696 019e B046     		mov	r8, r6
 697 01a0 F0BD     		pop	{r4, r5, r6, r7, pc}
 698              		.cfi_endproc
 699              	.LFE65:
 701              		.text
 702              	.Letext0:
 703              		.file 2 "D:/AppData/arm-gnu-toolchain-13.3.rel1-mingw-w64-i686-arm-none-eabi/arm-none-eabi/include
 704              		.file 3 "D:/AppData/arm-gnu-toolchain-13.3.rel1-mingw-w64-i686-arm-none-eabi/arm-none-eabi/include
 705              		.file 4 "Drivers/CMSIS/GD/GD32E23x/Include/gd32e23x.h"
 706              		.file 5 "Drivers/GD32E23x/Include/gd32e23x_exti.h"
 707              		.file 6 "Drivers/GD32E23x/Include/gd32e23x_rcu.h"
 708              		.file 7 "Drivers/GD32E23x/Include/gd32e23x_timer.h"
 709              		.file 8 "Drivers/GD32E23x/Include/gd32e23x_usart.h"
 710              		.file 9 "Core/Inc/systick.h"
 711              		.file 10 "Drivers/GD32E23x/Include/gd32e23x_adc.h"
 712              		.file 11 "Drivers/GD32E23x/Include/gd32e23x_gpio.h"
 713              		.file 12 "Drivers/GD32E23x/Include/gd32e23x_syscfg.h"
 714              		.file 13 "Drivers/GD32E23x/Include/gd32e23x_misc.h"
ARM GAS  D:\noval\Temp\ccx6PMVA.s 			page 19


DEFINED SYMBOLS
                            *ABS*:00000000 gd32e230c_eval.c
D:\noval\Temp\ccx6PMVA.s:19     .text.GPIO_Init:00000000 $t
D:\noval\Temp\ccx6PMVA.s:25     .text.GPIO_Init:00000000 GPIO_Init
D:\noval\Temp\ccx6PMVA.s:99     .text.USART_Init:00000000 $t
D:\noval\Temp\ccx6PMVA.s:105    .text.USART_Init:00000000 USART_Init
D:\noval\Temp\ccx6PMVA.s:194    .text.__io_putchar:00000000 $t
D:\noval\Temp\ccx6PMVA.s:200    .text.__io_putchar:00000000 __io_putchar
D:\noval\Temp\ccx6PMVA.s:246    .text.ADC_Init:00000000 $t
D:\noval\Temp\ccx6PMVA.s:252    .text.ADC_Init:00000000 ADC_Init
D:\noval\Temp\ccx6PMVA.s:340    .text.ADCGetValue:00000000 $t
D:\noval\Temp\ccx6PMVA.s:346    .text.ADCGetValue:00000000 ADCGetValue
D:\noval\Temp\ccx6PMVA.s:395    .text.Timer_Init:00000000 $t
D:\noval\Temp\ccx6PMVA.s:401    .text.Timer_Init:00000000 Timer_Init

UNDEFINED SYMBOLS
rcu_periph_clock_enable
gpio_mode_set
gpio_output_options_set
nvic_irq_enable
syscfg_exti_line_config
exti_init
exti_interrupt_flag_clear
gpio_af_set
usart_deinit
usart_word_length_set
usart_stop_bit_set
usart_parity_config
usart_baudrate_set
usart_receive_config
usart_transmit_config
usart_enable
usart_data_transmit
usart_flag_get
rcu_adc_clock_config
adc_special_function_config
adc_external_trigger_source_config
adc_regular_channel_config
adc_data_alignment_config
adc_resolution_config
adc_channel_length_config
adc_external_trigger_config
adc_software_trigger_enable
adc_enable
delay_1ms
adc_calibration_enable
adc_flag_get
adc_regular_data_read
timer_deinit
timer_struct_para_init
timer_init
timer_channel_output_struct_para_init
timer_channel_output_config
timer_channel_output_pulse_value_config
timer_channel_output_mode_config
timer_channel_output_shadow_config
timer_auto_reload_shadow_enable
ARM GAS  D:\noval\Temp\ccx6PMVA.s 			page 20


timer_primary_output_config
timer_input_capture_config
timer_interrupt_flag_clear
timer_interrupt_enable
timer_enable
